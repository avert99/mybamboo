// Generated by Haxe 3.3.0
//(function () { "use strict";
var Actable = function() {
	this.kantype = [];
	this.kanzai = [];
	this.sute_ok = [];
};
Actable.prototype = {
	init: function() {
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			this.sute_ok[i] = 0;
			this.kanzai[i] = 0;
			this.kantype[i] = 0;
		}
		
		this.tumo_ok = 0;
		this.yakunasi = 0;
		this.reach_ok = 0;
		this.tumo_nasi = 0;
		this.tenbo_nasi = 0;
		this.kanzai_c = 0;
		this.ukehenka = 0;
		this.nine_ok = 0;
	}
};
var Action = function() {
	this.push = [];
	this.code = "";
};
Action.prototype = {
	init: function() {
		this.code = "";
		var _g = 0;
		while(_g < 14) this.push[_g++] = 0;
	}
};
var Hanchan = function() {
	this.his = [];
	this.sim = [];
	this.pt = [];
};
Hanchan.prototype = {
	init: function() {
		this.kyoku_c = 0;
		this.kyoku_max = 7;
		this.kyoku_sum = 0;
		this.oya = this.deoya = Math.floor(Math.random() * 2);
		this.honba = this.horyu = 0;
		this.top = 0;
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			this.pt[i] = { tenbo : 100000, point : 0, jun : 0};
			this.sim[i] = { tenbo : 100000, point : 0, jun : 0};
		}
		this.end_code = "";
	}
};
var History = function() {
	this.ten_add = [];
	this.kyoku = 0;
	this.end_code = "";
	this.end_code = "";
	this.kyoku = 0;
	this.ten_add = [0,0,0,0];
};
var Hora = function() {
	this.pay_mode = 0;
	this.oya_f = 0;
	this.ten_hora = 0;
	this.mangan_v = 0;
	this.ten_qurt = 0;
	this.ten_half = 0;
	this.ten_oya = 0;
	this.ten_ko = 0;
	this.ten = 0;
	this.yakuari_f = 0;
	this.yakuman_c = 0;
	this.han_c = 0;
	this.yaku_type = 0;
	this.fu = 0;
	this.fu_sum = 0;
	this.tumo_ten = 0;
	this.machikei_ten = 0;
	this.ments_ten = 0;
	this.futei = 0;
	this.machi_k = 0;
	this.tanki_f = 0;
	this.shanpon_f = 0;
	this.penchan_f = 0;
	this.kanchan_f = 0;
	this.ryanmen_f = 0;
	this.hora_f = 0;
	this.k_ments = [];
	this.yaku = [];
	var _g = 0;
	while(_g < 7) this.k_ments[_g++] = new Ments();
	var _g1 = 0;
	while(_g1 < 64) this.yaku[_g1++] = 0;
};
var HoraSmall = function() {
	this.low = 0;
	this.high = 0;
	this.yakuari_f = 0;
	this.ten_ron = 0;
	this.mangan_v = 0;
	this.han_c = 0;
	this.a_pai = 0;
	this.hora_f = 0;
	this.hora_f = 0;
	this.a_pai = 0;
	this.han_c = 0;
	this.mangan_v = 0;
	this.ten_ron = 0;
	this.yakuari_f = 0;
	this.high = 0;
	this.low = 0;
};
var Horainfo = function() {
	this.hora = new Hora();
	this.kokusi_f = 0;
	this.toi_c = 0;
	this.yaopai = [0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,0];
	this.nt = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
	this.ymat = new Yakumat();
	this.dora = [0,0,0,0,0,0,0,0,0,0];
	this.a_pai = 0;
	this.tt = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
	this.s_ments = [];
	var _g = 0;
	while(_g < 4) this.s_ments[_g++] = new Ments();
};
Horainfo.prototype = {
	CheckHora: function() {
		this.CheckHoraNormal();
		if(this.hora.hora_f == 0 && this.toi_c == 7) {
			this.CheckHoraChitoi();
		}
		if(this.kokusi_f > 0) {
			this.CheckHoraKokusi();
		}
	}
	,CheckHoraNormal: function() {
		this.toi_c = 0;
		this.kokusi_f = 1;
		var _g = 1;
		while(_g < 38) {
			var i = _g++;
			if(this.tt[i] >= 2) {
				this.toi_c++;
				this.tmp = new Hora();
				var _g1 = 0;
				while(_g1 < 40) {
					var j = _g1++;
					this.nt[j] = this.tt[j];
				}
				this.nt[i] -= 2;
				this.tmp.k_ments[0].at = 1;
				this.tmp.k_ments[0].pai = i;
				if(this.ments_nuki() > 0) {
					this.set_hora_normal();
					if(this.tmp.ten_hora > this.hora.ten_hora || this.tmp.han_c > this.hora.han_c) {
						this.copy_hora();
					}
					this.tmp = new Hora();
					var _g11 = 0;
					while(_g11 < 40) {
						var j1 = _g11++;
						this.nt[j1] = this.tt[j1];
					}
					this.nt[i] -= 2;
					this.tmp.k_ments[0].at = 1;
					this.tmp.k_ments[0].pai = i;
					if(this.ments_nuki2() > 0) {
						this.set_hora_normal();
						if(this.tmp.ten_hora > this.hora.ten_hora || this.tmp.han_c > this.hora.han_c) {
							this.copy_hora();
						}
					}
				}
			}
			if(this.tt[i] > 0) {
				if(this.yaopai[i] == 0) {
					this.kokusi_f = 0;
				}
			} else if(this.yaopai[i] > 0) {
				this.kokusi_f = 0;
			}
		}
	}
	,CheckHoraChitoi: function() {
		this.tmp = new Hora();
		this.set_hora_chitoi();
		this.copy_hora();
	}
	,CheckHoraKokusi: function() {
		this.tmp = new Hora();
		this.set_hora_kokusi();
		this.copy_hora();
	}
	,ments_nuki: function() {
		var mn = 1;
		var _g = 1;
		while(_g < 38) {
			var j = _g++;
			if(this.nt[j] >= 3) {
				this.nt[j] -= 3;
				this.tmp.k_ments[mn].at = 3;
				this.tmp.k_ments[mn].pai = j;
				++mn;
			}
			if(this.nt[j] == 0) {
				continue;
			}
			if(j >= 31) {
				return 0;
			}
			if(j % 10 > 7) {
				return 0;
			}
			if(this.nt[j + 1] == 0) {
				return 0;
			}
			if(this.nt[j + 2] == 0) {
				return 0;
			}
			this.nt[j]--;
			this.nt[j + 1]--;
			this.nt[j + 2]--;
			this.tmp.k_ments[mn].at = 2;
			this.tmp.k_ments[mn].pai = j;
			++mn;
			if(this.nt[j] == 0) {
				continue;
			}
			if(this.nt[j + 1] == 0) {
				return 0;
			}
			if(this.nt[j + 2] == 0) {
				return 0;
			}
			this.nt[j]--;
			this.nt[j + 1]--;
			this.nt[j + 2]--;
			this.tmp.k_ments[mn].at = 2;
			this.tmp.k_ments[mn].pai = j;
			++mn;
		}
		return 1;
	}
	,ments_nuki2: function() {
		var mn = 1;
		var _g = 1;
		while(_g < 38) {
			var j = _g++;
			if(this.nt[j] == 0) {
				continue;
			}
			if(j >= 31) {
				return 0;
			}
			if(j % 10 > 7) {
				return 0;
			}
			if(this.nt[j] == 0) {
				continue;
			}
			if(this.nt[j + 1] == 0) {
				return 0;
			}
			if(this.nt[j + 2] == 0) {
				return 0;
			}
			this.nt[j]--;
			this.nt[j + 1]--;
			this.nt[j + 2]--;
			this.tmp.k_ments[mn].at = 2;
			this.tmp.k_ments[mn].pai = j;
			++mn;
			if(this.nt[j] == 0) {
				continue;
			}
			if(this.nt[j + 1] == 0) {
				return 0;
			}
			if(this.nt[j + 2] == 0) {
				return 0;
			}
			this.nt[j]--;
			this.nt[j + 1]--;
			this.nt[j + 2]--;
			this.tmp.k_ments[mn].at = 2;
			this.tmp.k_ments[mn].pai = j;
			++mn;
			if(this.nt[j] == 0) {
				continue;
			}
			if(this.nt[j + 1] == 0) {
				return 0;
			}
			if(this.nt[j + 2] == 0) {
				return 0;
			}
			this.nt[j]--;
			this.nt[j + 1]--;
			this.nt[j + 2]--;
			this.tmp.k_ments[mn].at = 2;
			this.tmp.k_ments[mn].pai = j;
			++mn;
			if(this.nt[j] == 0) {
				continue;
			}
			if(this.nt[j + 1] == 0) {
				return 0;
			}
			if(this.nt[j + 2] == 0) {
				return 0;
			}
			this.nt[j]--;
			this.nt[j + 1]--;
			this.nt[j + 2]--;
			this.tmp.k_ments[mn].at = 2;
			this.tmp.k_ments[mn].pai = j;
			++mn;
		}
		return 1;
	}
	,set_hora_normal: function() {
		this.tmp.hora_f = 1;
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			if(this.s_ments[i].pai == 0) {
				continue;
			}
			var mn = 0;
			var _g1 = 1;
			while(_g1 < 5) {
				var j = _g1++;
				if(this.tmp.k_ments[j].pai == 0) {
					mn = j;
					break;
				}
			}
			this.tmp.k_ments[mn].pai = this.s_ments[i].pai;
			this.tmp.k_ments[mn].at = this.s_ments[i].at;
		}
		var _g2 = 0;
		while(_g2 < 5) {
			var i1 = _g2++;
			var pai = this.tmp.k_ments[i1].pai;
			if(this.tmp.k_ments[i1].at == 1) {
				if(pai == this.a_pai) {
					this.tmp.tanki_f = 1;
				}
			} else if(this.tmp.k_ments[i1].at == 2) {
				if(pai == this.a_pai) {
					if(this.a_pai % 10 == 7) {
						this.tmp.penchan_f = 1;
					} else {
						this.tmp.ryanmen_f = 1;
					}
				} else if(pai == this.a_pai - 1) {
					this.tmp.kanchan_f = 1;
				} else if(pai == this.a_pai - 2) {
					if(this.a_pai % 10 == 3) {
						this.tmp.penchan_f = 1;
					} else {
						this.tmp.ryanmen_f = 1;
					}
				}
			} else if(this.tmp.k_ments[i1].at == 3) {
				if(pai == this.a_pai) {
					this.tmp.shanpon_f = 1;
				}
			}
		}
		if(this.tmp.shanpon_f != 0) {
			this.tmp.machi_k = 4;
		}
		if(this.tmp.ryanmen_f != 0) {
			this.tmp.machi_k = 5;
		}
		if(this.tmp.tanki_f != 0) {
			this.tmp.machi_k = 1;
		}
		if(this.tmp.kanchan_f != 0) {
			this.tmp.machi_k = 3;
		}
		if(this.tmp.penchan_f != 0) {
			this.tmp.machi_k = 2;
		}
		if(this.ymat.tumo_f == 0 && this.tmp.machi_k == 4) {
			var _g3 = 0;
			while(_g3 < 5) {
				var i2 = _g3++;
				if(this.tmp.k_ments[i2].at == 3) {
					if(this.tmp.k_ments[i2].pai == this.a_pai) {
						this.tmp.k_ments[i2].at = 6;
					}
				}
			}
		}
		var _g4 = 0;
		while(_g4 < 5) {
			var i3 = _g4++;
			var fu = 0;
			var p = this.tmp.k_ments[i3].pai;
			switch(this.tmp.k_ments[i3].at) {
			case 1:
				fu = this.yakupai(p,this.ymat.bakaze,this.ymat.jikaze) * 2;
				break;
			case 3:
				if(this.yaopai[p] != 0) {
					fu = 8;
				} else {
					fu = 4;
				}
				break;
			case 4:
				if(this.yaopai[p] != 0) {
					fu = 32;
				} else {
					fu = 16;
				}
				break;
			case 6:
				if(this.yaopai[p] != 0) {
					fu = 4;
				} else {
					fu = 2;
				}
				break;
			case 7:
				if(this.yaopai[p] != 0) {
					fu = 16;
				} else {
					fu = 8;
				}
				break;
			}
			this.tmp.k_ments[i3].fu = fu;
		}
		this.tmp.futei = this.ymat.furo_f == 0 && this.ymat.tumo_f == 0?30:20;
		this.tmp.ments_ten = 0;
		var _g5 = 0;
		while(_g5 < 5) {
			var i4 = _g5++;
			if(this.tmp.k_ments[i4].pai != 0) {
				this.tmp.ments_ten += this.tmp.k_ments[i4].fu;
			}
		}
		if(this.tmp.machi_k >= 1 && this.tmp.machi_k <= 3) {
			this.tmp.machikei_ten = 2;
		} else {
			this.tmp.machikei_ten = 0;
		}
		this.tmp.tumo_ten = this.ymat.tumo_f > 0?2:0;
		this.tmp.fu_sum = this.tmp.futei + this.tmp.ments_ten + this.tmp.machikei_ten + this.tmp.tumo_ten;
		this.tmp.fu = Math.floor(this.tmp.fu_sum / 10) * 10;
		if(this.tmp.fu_sum % 10 > 0) {
			this.tmp.fu += 10;
		}
		this.set_yakulist();
		this.set_yakuinfo();
		this.tmp.yaku_type = 1;
		if(this.tmp.yaku[21] > 0) {
			this.tmp.machi_k = 5;
			this.tmp.machikei_ten = 0;
			this.tmp.tumo_ten = 0;
			this.tmp.fu_sum = this.tmp.futei + this.tmp.ments_ten + this.tmp.machikei_ten + this.tmp.tumo_ten;
			this.tmp.fu = Math.floor(this.tmp.fu_sum / 10) * 10;
			if(this.tmp.fu_sum % 10 > 0) {
				this.tmp.fu += 10;
			}
		}
		if(this.ymat.furo_f > 0) {
			if(this.tmp.fu == 20) {
				this.tmp.fu = 30;
			}
		}
		this.set_teninfo();
	}
	,set_yakulist: function() {
		var s;
		var n;
		var c;
		var f;
		var suit = 0;
		var suit_c = 0;
		var suit_mc = [0,0,0,0];
		var tanyao_mc = 0;
		var chanta_mc = 0;
		var anko_k_mc = 0;
		var shun_k_mc = 0;
		var anko_c = 0;
		var kan_c = 0;
		var shun_c = 0;
		var toitsu = 0;
		var anko_k_mt = [[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]];
		var shun_k_mt = [[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]];
		var pt = [[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]];
		var yaku_c = 0;
		var sangen_c = 0;
		var susi_c = 0;
		var ji_janto = 0;
		var _g = 0;
		while(_g < 7) {
			var i = _g++;
			var pai = this.tmp.k_ments[i].pai;
			if(pai == 0) {
				continue;
			}
			var at = this.tmp.k_ments[i].at;
			if(at == 9) {
				continue;
			}
			s = Math.floor(pai / 10);
			n = pai % 10;
			suit_mc[s]++;
			if(at == 2 || at == 5) {
				if(n == 1 || n == 7) {
					++chanta_mc;
				} else {
					++tanyao_mc;
				}
			} else if(s == 3) {
				++chanta_mc;
			} else if(n == 1 || n == 9) {
				++chanta_mc;
			} else {
				++tanyao_mc;
			}
			if(at == 1) {
				if(s == 3) {
					if(n <= 4) {
						ji_janto = 1;
					} else {
						ji_janto = 2;
					}
				}
				pt[s][n] += 2;
			} else if(at == 2 || at == 5) {
				if(at == 2) {
					++shun_c;
				}
				++shun_k_mc;
				shun_k_mt[s][n]++;
				pt[s][n]++;
				pt[s][n + 1]++;
				pt[s][n + 2]++;
			} else if(at == 3 || at == 6) {
				if(at == 3) {
					++anko_c;
				}
				++anko_k_mc;
				anko_k_mt[s][n]++;
				if(s == 3) {
					if(n <= 4) {
						if(n == this.ymat.bakaze) {
							++yaku_c;
						}
						if(n == this.ymat.jikaze) {
							++yaku_c;
						}
						++susi_c;
					} else {
						++yaku_c;
						++sangen_c;
					}
				}
				pt[s][n] += 3;
			} else if(at == 4 || at == 7) {
				if(at == 4) {
					++anko_c;
				}
				++kan_c;
				++anko_k_mc;
				anko_k_mt[s][n]++;
				if(s == 3) {
					if(n <= 4) {
						if(n == this.ymat.bakaze) {
							++yaku_c;
						}
						if(n == this.ymat.jikaze) {
							++yaku_c;
						}
						++susi_c;
					} else {
						++yaku_c;
						++sangen_c;
					}
				}
				pt[s][n] = 4;
			} else if(at == 8) {
				++toitsu;
				pt[s][n] += 2;
			}
		}
		var _g1 = 0;
		while(_g1 < 3) {
			var s1 = _g1++;
			if(suit_mc[s1] > 0) {
				++suit_c;
				suit = s1;
			}
		}
		if(this.ymat.reach_f > 0) {
			if(this.ymat.double_f > 0) {
				this.tmp.yaku[0] = 2;
			} else {
				this.tmp.yaku[1] = 1;
			}
			if(this.ymat.ippatsu_f > 0) {
				this.tmp.yaku[2] = 1;
			}
		}
		if(this.ymat.haitei_f > 0) {
			if(this.ymat.tumo_f > 0) {
				this.tmp.yaku[3] = 1;
			} else {
				this.tmp.yaku[4] = 1;
			}
		}
		if(this.ymat.rinshan_f > 0 && this.ymat.tumo_f > 0) {
			this.tmp.yaku[5] = 1;
			this.tmp.yaku[3] = 0;
			this.tmp.yaku[4] = 0;
		}
		if(this.ymat.chankan_f > 0) {
			this.tmp.yaku[6] = 1;
			this.tmp.yaku[2] = 0;
		}
		if(this.ymat.tumo_f > 0) {
			this.tmp.yaku[7] = 1;
		}
		if(this.ymat.shojun_f > 0) {
			if(this.ymat.jikaze == 1) {
				this.tmp.yaku[31] = 1;
			} else if(this.ymat.tumo_f > 0) {
				this.tmp.yaku[32] = 1;
			} else {
				this.tmp.yaku[33] = 1;
			}
		}
		this.tmp.yaku[20] = yaku_c;
		if(sangen_c == 3) {
			this.tmp.yaku[35] = 1;
			if(this.tmp.yaku[20] >= 3) {
				this.tmp.yaku[20] -= 3;
			}
		}
		if(sangen_c == 2 && ji_janto == 2) {
			this.tmp.yaku[19] = 4;
			if(this.tmp.yaku[20] >= 2) {
				this.tmp.yaku[20] -= 2;
			}
		}
		if(susi_c == 4) {
			this.tmp.yaku[37] = 1;
		}
		if(susi_c == 3 && ji_janto == 1) {
			this.tmp.yaku[36] = 1;
		}
		if(suit_c == 0) {
			this.tmp.yaku[38] = 1;
		}
		if(suit_c == 1) {
			if(suit_mc[3] > 0) {
				this.tmp.yaku[8] = 3;
			} else {
				this.tmp.yaku[9] = 6;
				f = 0;
				s = suit;
				if(pt[s][1] < 3 || pt[s][9] < 3) {
					f = 1;
				}
				var _g2 = 1;
				while(_g2 < 10) if(pt[s][_g2++] == 0) {
					f = 1;
				}
				if(kan_c > 0) {
					f = 1;
				}
				if(f == 0) {
					this.tmp.yaku[42] = 1;
				}
				f = 0;
				var _g3 = 2;
				while(_g3 < 9) if(pt[1][_g3++] < 2) {
					f = 1;
				}
				if(f == 0) {
					this.tmp.yaku[44] = 1;
				}
			}
			if(suit == 2) {
				var greenpai = [0,0,1,1,1,0,1,0,1,0];
				f = 0;
				var _g4 = 0;
				while(_g4 < 3) {
					var s2 = _g4++;
					var _g11 = 1;
					while(_g11 < 10) {
						var n1 = _g11++;
						if(pt[s2][n1] == 0) {
							continue;
						}
						if(greenpai[n1] == 0) {
							f = 1;
						}
					}
				}
				var _g5 = 1;
				while(_g5 < 8) {
					var n2 = _g5++;
					if(n2 != 6) {
						if(pt[3][n2] > 0) {
							f = 1;
						}
					}
				}
				if(f == 0) {
					this.tmp.yaku[43] = 1;
				}
			}
		}
		if(chanta_mc == 0) {
			this.tmp.yaku[13] = 1;
		}
		if(tanyao_mc == 0) {
			if(shun_k_mc > 0) {
				if(suit_mc[3] > 0) {
					this.tmp.yaku[10] = 2;
				} else {
					this.tmp.yaku[11] = 3;
				}
			} else if(suit_mc[3] > 0) {
				this.tmp.yaku[12] = 2;
			} else {
				this.tmp.yaku[34] = 1;
			}
		}
		if(anko_c == 3) {
			this.tmp.yaku[15] = 2;
		}
		if(anko_c == 4) {
			this.tmp.yaku[39] = 1;
		}
		if(kan_c == 3) {
			this.tmp.yaku[16] = 2;
		}
		if(kan_c == 4) {
			this.tmp.yaku[40] = 1;
		}
		if(anko_k_mc == 4) {
			this.tmp.yaku[17] = 2;
		}
		if(toitsu == 7) {
			this.tmp.yaku[14] = 2;
		}
		var _g6 = 1;
		while(_g6 < 10) {
			var n3 = _g6++;
			c = 0;
			var _g12 = 0;
			while(_g12 < 3) if(anko_k_mt[_g12++][n3] > 0) {
				++c;
			}
			if(c == 3) {
				this.tmp.yaku[18] = 2;
			}
		}
		if(shun_c == 4) {
			if(this.tmp.ryanmen_f > 0) {
				if(this.tmp.k_ments[0].fu == 0) {
					this.tmp.yaku[21] = 1;
				}
			}
		}
		var _g7 = 1;
		while(_g7 < 10) {
			var n4 = _g7++;
			c = 0;
			var _g13 = 0;
			while(_g13 < 3) if(shun_k_mt[_g13++][n4] > 0) {
				++c;
			}
			if(c == 3) {
				this.tmp.yaku[22] = 2;
			}
		}
		var _g8 = 0;
		while(_g8 < 3) {
			var s3 = _g8++;
			if(shun_k_mt[s3][1] > 0) {
				if(shun_k_mt[s3][4] > 0) {
					if(shun_k_mt[s3][7] > 0) {
						this.tmp.yaku[23] = 2;
					}
				}
			}
		}
		if(this.ymat.furo_f == 0) {
			c = 0;
			var _g9 = 0;
			while(_g9 < 3) {
				var s4 = _g9++;
				var _g14 = 1;
				while(_g14 < 10) {
					var n5 = _g14++;
					if(shun_k_mt[s4][n5] >= 2) {
						++c;
					}
					if(shun_k_mt[s4][n5] == 4) {
						++c;
					}
				}
			}
			if(c == 1) {
				this.tmp.yaku[24] = 1;
			}
			if(c == 2) {
				this.tmp.yaku[25] = 3;
			}
		}
		if(this.tmp.k_ments[0].at == 9) {
			this.tmp.yaku[41] = 1;
			this.tmp.yaku[38] = 0;
			this.tmp.yaku[12] = 0;
			this.tmp.yaku[34] = 0;
			this.tmp.yaku[13] = 0;
		}
		var _g10 = 0;
		while(_g10 < 5) {
			var i1 = _g10++;
			if(this.dora[i1] == 0) {
				continue;
			}
			s = Math.floor(this.dora[i1] / 10);
			n = this.dora[i1] % 10;
			this.tmp.yaku[27] += pt[s][n];
		}
		if(this.ymat.reach_f > 0) {
			var _g15 = 5;
			while(_g15 < 10) {
				var i2 = _g15++;
				if(this.dora[i2] == 0) {
					continue;
				}
				s = Math.floor(this.dora[i2] / 10);
				n = this.dora[i2] % 10;
				this.tmp.yaku[28] += pt[s][n];
			}
		}
		if(this.ymat.furo_f > 0) {
			this.tmp.yaku[0] = 0;
			this.tmp.yaku[1] = 0;
			this.tmp.yaku[2] = 0;
			this.tmp.yaku[7] = 0;
			this.tmp.yaku[21] = 0;
			this.tmp.yaku[24] = 0;
			this.tmp.yaku[14] = 0;
			this.tmp.yaku[25] = 0;
			this.tmp.yaku[42] = 0;
			this.tmp.yaku[44] = 0;
			this.tmp.yaku[39] = 0;
			this.tmp.yaku[41] = 0;
			if(this.tmp.yaku[8] > 0) {
				this.tmp.yaku[8] = 2;
			}
			if(this.tmp.yaku[9] > 0) {
				this.tmp.yaku[9] = 5;
			}
			if(this.tmp.yaku[10] > 0) {
				this.tmp.yaku[10] = 1;
			}
			if(this.tmp.yaku[11] > 0) {
				this.tmp.yaku[11] = 2;
			}
			if(this.tmp.yaku[22] > 0) {
				this.tmp.yaku[22] = 1;
			}
			if(this.tmp.yaku[23] > 0) {
				this.tmp.yaku[23] = 1;
			}
		}
	}
	,set_yakuinfo: function() {
		this.tmp.han_c = 0;
		var _g = 0;
		while(_g < 30) this.tmp.han_c += this.tmp.yaku[_g++];
		this.tmp.yakuman_c = 0;
		var _g1 = 31;
		while(_g1 < 64) this.tmp.yakuman_c += this.tmp.yaku[_g1++];
		this.tmp.yakuari_f = 0;
		var _g2 = 0;
		while(_g2 < 27) if(this.tmp.yaku[_g2++] > 0) {
			this.tmp.yakuari_f = 1;
		}
		if(this.tmp.yakuman_c > 0) {
			var _g3 = 0;
			while(_g3 < 30) this.tmp.yaku[_g3++] = 0;
			this.tmp.yakuari_f = 1;
		}
	}
	,set_teninfo: function() {
		var ten = this.tmp.fu;
		ten *= 4;
		ten *= 4;
		var _g1 = 0;
		var _g = this.tmp.han_c;
		while(_g1 < _g) {
			++_g1;
			ten *= 2;
		}
		var v = 0;
		if(ten >= 7680) {
			v = 1;
			ten = 8000;
		}
		if(ten >= 8000) {
			v = 1;
			ten = 8000;
		}
		if(this.tmp.han_c >= 6) {
			v = 2;
			ten = 12000;
		}
		if(this.tmp.han_c >= 8) {
			v = 3;
			ten = 16000;
		}
		if(this.tmp.han_c >= 11) {
			v = 4;
			ten = 24000;
		}
		if(this.tmp.han_c >= 13) {
			v = 5;
			ten = 32000;
		}
		if(this.tmp.yakuman_c == 1) {
			v = 6;
			ten = 32000;
		}
		if(this.tmp.yakuman_c == 2) {
			v = 7;
			ten = 64000;
		}
		if(this.tmp.yakuman_c == 3) {
			v = 8;
			ten = 96000;
		}
		if(this.tmp.yakuman_c >= 4) {
			v = 9;
			ten = 128000;
		}
		this.tmp.mangan_v = v;
		this.tmp.ten = ten;
		this.tmp.ten_ko = this.kiriage(ten,100);
		this.tmp.ten_oya = this.kiriage(Math.floor(ten * 3 / 2),100);
		this.tmp.ten_half = this.kiriage(Math.floor(ten / 2),100);
		this.tmp.ten_qurt = this.kiriage(Math.floor(ten / 4),100);
		if(this.ymat.jikaze == 1) {
			this.tmp.oya_f = 1;
			this.tmp.ten_hora = this.tmp.ten_oya;
		} else {
			this.tmp.oya_f = 0;
			this.tmp.ten_hora = this.tmp.ten_ko;
		}
		if(this.ymat.tumo_f > 0) {
			this.tmp.pay_mode = 1;
		} else {
			this.tmp.pay_mode = 0;
		}
	}
	,yakupai: function(p,ba,ji) {
		var ret = 0;
		if(p > 30) {
			var n = p % 10;
			if(n > 4) {
				ret = 1;
			} else {
				if(n == ba) {
					ret = 1;
				}
				if(n == ji) {
					++ret;
				}
			}
		}
		return ret;
	}
	,kiriage: function(val,keta) {
		if(keta == 0) {
			return val;
		}
		var a = val % keta;
		if(a > 0) {
			val = val - a + keta;
		}
		return val;
	}
	,set_hora_chitoi: function() {
		var mn = 0;
		var _g = 1;
		while(_g < 38) {
			var i = _g++;
			if(this.tt[i] == 2) {
				this.tmp.k_ments[mn].pai = i;
				this.tmp.k_ments[mn].at = 8;
				++mn;
			}
		}
		this.tmp.hora_f = 1;
		this.tmp.tanki_f = 1;
		this.tmp.machi_k = 1;
		this.tmp.fu = 25;
		this.set_yakulist();
		this.set_yakuinfo();
		this.tmp.yaku_type = 2;
		this.set_teninfo();
	}
	,set_hora_kokusi: function() {
		this.tmp.k_ments[0].pai = 1;
		this.tmp.k_ments[0].at = 9;
		this.tmp.hora_f = 1;
		this.tmp.machi_k = 0;
		this.set_yakulist();
		this.set_yakuinfo();
		this.tmp.yaku_type = 3;
		this.set_teninfo();
	}
	,copy_hora: function() {
		this.hora.hora_f = this.tmp.hora_f;
		var _g = 0;
		while(_g < 7) {
			var i = _g++;
			this.hora.k_ments[i].at = this.tmp.k_ments[i].at;
			this.hora.k_ments[i].pai = this.tmp.k_ments[i].pai;
			this.hora.k_ments[i].dr = this.tmp.k_ments[i].dr;
			this.hora.k_ments[i].fu = this.tmp.k_ments[i].fu;
		}
		this.hora.ryanmen_f = this.tmp.ryanmen_f;
		this.hora.kanchan_f = this.tmp.kanchan_f;
		this.hora.penchan_f = this.tmp.penchan_f;
		this.hora.shanpon_f = this.tmp.shanpon_f;
		this.hora.tanki_f = this.tmp.tanki_f;
		this.hora.machi_k = this.tmp.machi_k;
		this.hora.futei = this.tmp.futei;
		this.hora.ments_ten = this.tmp.ments_ten;
		this.hora.machikei_ten = this.tmp.machikei_ten;
		this.hora.tumo_ten = this.tmp.tumo_ten;
		this.hora.fu_sum = this.tmp.fu_sum;
		this.hora.fu = this.tmp.fu;
		var _g1 = 0;
		while(_g1 < 64) {
			var i1 = _g1++;
			this.hora.yaku[i1] = this.tmp.yaku[i1];
		}
		this.hora.yaku_type = this.tmp.yaku_type;
		this.hora.han_c = this.tmp.han_c;
		this.hora.yakuman_c = this.tmp.yakuman_c;
		this.hora.yakuari_f = this.tmp.yakuari_f;
		this.hora.ten = this.tmp.ten;
		this.hora.ten_ko = this.tmp.ten_ko;
		this.hora.ten_oya = this.tmp.ten_oya;
		this.hora.ten_half = this.tmp.ten_half;
		this.hora.ten_qurt = this.tmp.ten_qurt;
		this.hora.mangan_v = this.tmp.mangan_v;
		this.hora.ten_hora = this.tmp.ten_hora;
		this.hora.oya_f = this.tmp.oya_f;
		this.hora.pay_mode = this.tmp.pay_mode;
	}
};
var HxOverrides = function() { };
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
var IO = function() {
	this.release_func = null;
	this.move_func = null;
	this.click_func = null;
	this.next_func = null;
	this.timer_func = null;
	this.com_speed = 4;
	this.sound_on = false;
	this.loadimg = 0;
	this.imgsrc = ["pat.gif","bg.png","logo.png"];
	this.img = [];
	this.tc = 0;
	this.mouse = { x : 0, y : 0};
	this.view = { w : 640, h : 480};
	this.touchdev = false;
	this.FPS = 30;
	this.scalerate = 1;
	window.onload = $bind(this,this.init);
};
IO.prototype = {
	init: function(e) {
		var _gthis = this;
		if(window.navigator.userAgent.indexOf("iPhone") > 0 || window.navigator.userAgent.indexOf("iPod") > 0 || window.navigator.userAgent.indexOf("iPad") > 0 || window.navigator.userAgent.indexOf("Android") > 0 || window.navigator.userAgent.indexOf("Windows Phone") > 0) {
			this.touchdev = true;
		}
		this.canvas = window.document.getElementById("canvas");
		this.scalerate = Math.min(window.innerWidth / this.view.w,window.innerHeight / this.view.h);
		this.canvas.style.width = Math.floor(this.view.w * this.scalerate) + "px";
		this.canvas.style.height = Math.floor(this.view.h * this.scalerate) + "px";
		this.canvas.width = this.view.w;
		this.canvas.height = this.view.h;
		this.context = this.canvas.getContext("2d");
		var _g1 = 0;
		var _g = this.imgsrc.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.img[i] = new Image();
			this.img[i].src = this.imgsrc[i] + "?" + Math.floor(Math.random() * 1000);
			this.img[i].onload = function() {
				_gthis.loadimg++;
			};
		}
		if(this.touchdev) {
			this.canvas.ontouchstart = $bind(this,this.touchStartListner);
			this.canvas.ontouchmove = $bind(this,this.touchMoveListner);
			this.canvas.ontouchend = $bind(this,this.touchEndListner);
			window.document.body.addEventListener("touchmove",function(event) {
				event.preventDefault();
			},false);
			window.document.body.addEventListener("touchstart",function(event1) {
				event1.preventDefault();
			},false);
			this.sound_on = false;
		} else {
			this.canvas.onmousedown = $bind(this,this.mouseDownListner);
			this.canvas.onmousemove = $bind(this,this.mouseMoveListner);
			this.canvas.onmouseup = $bind(this,this.mouseUpListner);
		}
		this.frame_loop();
	}
	,load_data: function() {
		var spd = 3;
		var snd = 0;
		var vars = window.localStorage.getItem("mahjong").split("&");
		var _g1 = 0;
		var _g = vars.length;
		while(_g1 < _g) {
			var a = vars[_g1++].split("=");
			if(a.length < 2) {
				continue;
			}
			if(a[0] == "speed") {
				spd = Std.parseInt(a[1]);
			}
			if(a[0] == "sound") {
				snd = Std.parseInt(a[1]);
			}
		}
		this.com_speed = spd;
		this.sound_on = snd == 0?false:true;
	}
	,save_data: function() {
		var spd = this.com_speed;
		var snd = this.sound_on?1:0;
		var str = "";
		str = "" + ("speed=" + spd + "&");
		str += "sound=" + snd + "&";
		window.localStorage.setItem("mahjong",str);
	}
	,mouseDownListner: function(e) {
		if(this.click_func != null) {
			this.adjustXY(e);
			this.click_func();
		}
	}
	,mouseMoveListner: function(e) {
		if(this.move_func != null) {
			this.adjustXY(e);
			this.move_func();
		}
	}
	,mouseUpListner: function(e) {
		if(this.release_func != null) {
			this.adjustXY(e);
			this.release_func();
		}
	}
	,touchStartListner: function(e) {
		if(this.click_func != null) {
			this.touchXY(e);
			this.click_func();
		}
	}
	,touchMoveListner: function(e) {
		if(this.move_func != null) {
			this.touchXY(e);
			this.move_func();
		}
	}
	,touchEndListner: function(e) {
		if(this.release_func != null) {
			this.release_func();
		}
	}
	,adjustXY: function(e) {
		var rect = e.target.getBoundingClientRect();
		if(this.scalerate > 0) {
			this.mouse.x = Math.floor((e.clientX - rect.left) / this.scalerate);
			this.mouse.y = Math.floor((e.clientY - rect.top) / this.scalerate);
		}
	}
	,touchXY: function(e) {
		var rect = e.target.getBoundingClientRect();
		this.mouse.x = e.touches[0].pageX - rect.left;
		this.mouse.y = e.touches[0].pageY - rect.top;
		if(this.scalerate > 0) {
			this.mouse.x = Math.floor(this.mouse.x / this.scalerate);
			this.mouse.y = Math.floor(this.mouse.y / this.scalerate);
		}
	}
	,frame_loop: function() {
		this.tc++;
		if(this.timer_func != null) {
			this.timer_func();
		}
		window.setTimeout($bind(this,this.frame_loop),Math.floor(1000 / this.FPS));//avert
	}
	,loaded: function() {
		this.cls();
		var ox = this.view.w / 2;
		var oy = this.view.h / 2;
		var px = [0,1,1,1,0,-1,-1,-1];
		var py = [-1,-1,0,1,1,1,0,-1];
		var c = Math.floor(this.tc / 3) % 8;
		var _g = 0;
		while(_g < 8) {
			var i = _g++;
			this.context.fillStyle = i == c?"#222222":"#cccccc";
			this.context.fillRect(ox + px[i] * 10 - 5.,oy + py[i] * 10 - 5.,9,9);
		}
		var ret = false;
		if(this.loadimg >= this.img.length) {
			ret = true;
		}
		return ret;
	}
	,cls: function() {
		this.context.drawImage(this.img[1],0,0,this.view.w,this.view.h,0,0,this.view.w,this.view.h);
	}
	,copy_logo: function(sx,sy,w,h,bx,by,alpha) {
		this.context.globalAlpha = alpha;
		this.context.drawImage(this.img[2],sx,sy,w,h,bx,by,w,h);
		this.context.globalAlpha = 1;
	}
	,copy_pat: function(sx,sy,w,h,bx,by) {
		this.context.drawImage(this.img[0],sx,sy,w,h,bx,by,w,h);
	}
	,draw_rect: function(x,y,w,h,col,alpha,shadow) {
		if(shadow) {
			this.context.save();
			this.context.shadowColor = "#000000";
			this.context.shadowBlur = 4;
			this.context.shadowOffsetX = 3;
			this.context.shadowOffsetY = 3;
		}
		this.context.globalAlpha = alpha;
		this.context.fillStyle = col;
		this.context.fillRect(x,y,w,h);
		this.context.globalAlpha = 1.0;
		if(shadow) {
			this.context.restore();
		}
	}
	,set_blur: function(s,x,y) {
		this.context.save();
		this.context.shadowColor = "#182525";
		this.context.shadowBlur = s;
		this.context.shadowOffsetX = x;
		this.context.shadowOffsetY = y;
	}
	,end_blur: function() {
		this.context.restore();
	}
	,roundrect: function(x,y,w,h,r,col,alpha,ds) {
		this.context.save();
		this.context.shadowColor = "#000000";
		this.context.shadowBlur = 5;
		this.context.shadowOffsetX = 1;
		this.context.shadowOffsetY = 1;
		this.context.globalAlpha = alpha;
		this.context.fillStyle = col;
		this.context.beginPath();
		this.context.moveTo(x,y + r);
		this.context.arc(x + r,y + h - r,r,Math.PI,Math.PI / 2,true);
		this.context.arc(x + w - r,y + h - r,r,Math.PI / 2,0,true);
		this.context.arc(x + w - r,y + r,r,0,Math.PI * 3 / 2,true);
		this.context.arc(x + r,y + r,r,Math.PI * 3 / 2,Math.PI,true);
		this.context.closePath();
		this.context.fill();
		this.context.globalAlpha = 1.0;
		this.context.restore();
	}
	,fukidasi: function(x,y,w,h,r,col,alpha,who) {
		if(alpha >= 1.0) {
			this.context.save();
			this.context.shadowColor = "#000000";
			this.context.shadowBlur = 0;
			this.context.shadowOffsetX = 3;
			this.context.shadowOffsetY = 3;
		}
		this.context.globalAlpha = alpha;
		this.context.fillStyle = col;
		this.context.beginPath();
		this.context.moveTo(x,y + r);
		this.context.arc(x + r,y + h - r,r,Math.PI,Math.PI / 2,true);
		if(who == 0) {
			this.context.lineTo(x + w / 2 - 10,y + h);
			this.context.lineTo(x + w / 2,y + h + 10);
			this.context.lineTo(x + w / 2 + 10,y + h);
		}
		this.context.arc(x + w - r,y + h - r,r,Math.PI / 2,0,true);
		this.context.arc(x + w - r,y + r,r,0,Math.PI * 3 / 2,true);
		if(who == 1) {
			this.context.lineTo(x + w / 2 + 10,y);
			this.context.lineTo(x + w / 2,y - 10);
			this.context.lineTo(x + w / 2 - 10,y);
		}
		this.context.arc(x + r,y + r,r,Math.PI * 3 / 2,Math.PI,true);
		this.context.closePath();
		this.context.fill();
		this.context.globalAlpha = 1.0;
		if(alpha >= 1.0) {
			this.context.restore();
		}
	}
	,draw_circle: function(x,y,r,col) {
		this.context.fillStyle = col;
		this.context.beginPath();
		this.context.arc(x,y,r,0,Math.PI * 2,true);
		this.context.fill();
	}
	,draw_text: function(x,y,str,size,col,serif,align,base) {
		this.context.fillStyle = col;
		this.context.textAlign = align;
		this.context.textBaseline = base;
		if(serif) {
			this.context.font = size + "px '游明朝', YuMincho, 'ヒラギノ明朝 ProN W3', 'Hiragino Mincho ProN', 'HG明朝E', 'ＭＳ Ｐ明朝', 'ＭＳ 明朝', serif";
		} else {
			this.context.font = size + "px '游ゴシック', YuGothic, 'Hiragino Kaku Gothic ProN', 'Hiragino Kaku Gothic Pro', 'ＭＳ ゴシック', sans-serif";
		}
		this.context.fillText(str,x,y);
	}
	,under_line: function(x,y,str,size,col) {
		var w = this.context.measureText(str).width;
		this.context.beginPath();
		this.context.moveTo(x - w,y + size);
		this.context.lineTo(x,y + size);
		this.context.strokeStyle = col;
		this.context.stroke();
	}
	,draw_fade: function(x,y,w,h,col,a) {
		if(a < 0) {
			a = 0;
		}
		if(a > 100) {
			a = 100;
		}
		this.context.globalAlpha = a / 100;
		this.context.fillStyle = col;
		this.context.fillRect(x,y,w,h);
		this.context.globalAlpha = 1.0;
	}
	,playsnd: function(nam,cmd) {
		return;
	}
	,link: function(url) {
		window.location.href = url;
	}
};
var KanAbility = function() {
	this.atari = [];
	this.nt = [];
	this.tt = [];
	this.tt = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
	this.nt = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
	this.atari = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
};
KanAbility.prototype = {
	check_tenpai: function() {
		var _g = 1;
		while(_g < 38) {
			var i = _g++;
			if(this.tt[i] >= 4) {
				continue;
			}
			this.tt[i]++;
			var _g1 = 1;
			while(_g1 < 38) {
				var j = _g1++;
				if(this.tt[j] < 2) {
					continue;
				}
				this.tt[j] -= 2;
				var _g2 = 0;
				while(_g2 < 40) {
					var k = _g2++;
					this.nt[k] = this.tt[k];
				}
				if(this.ments_nuki() > 0) {
					this.atari[i] = 1;
				}
				this.tt[j] += 2;
			}
			this.tt[i]--;
		}
	}
	,ments_nuki: function() {
		var _g = 1;
		while(_g < 38) {
			var j = _g++;
			if(this.nt[j] >= 3) {
				this.nt[j] -= 3;
			}
			if(this.nt[j] == 0) {
				continue;
			}
			if(j >= 31) {
				return 0;
			}
			if(j % 10 > 7) {
				return 0;
			}
			if(this.nt[j + 1] == 0) {
				return 0;
			}
			if(this.nt[j + 2] == 0) {
				return 0;
			}
			this.nt[j]--;
			this.nt[j + 1]--;
			this.nt[j + 2]--;
			if(this.nt[j] == 0) {
				continue;
			}
			if(this.nt[j + 1] == 0) {
				return 0;
			}
			if(this.nt[j + 2] == 0) {
				return 0;
			}
			this.nt[j]--;
			this.nt[j + 1]--;
			this.nt[j + 2]--;
		}
		return 1;
	}
};
var Kyoku = function() {
	this.ten_dest = [];
	this.ten_add = [];
	this.member = [];
	this.reaction = new Action();
	this.action = new Action();
	this.tumoaction = new Action();
	this.kpai = [];
	this.dora = [];
	this.jikaze = [];
	this.dice = [];
	var _g = 0;
	while(_g < 4) this.member[_g++] = new Member();
};
Kyoku.prototype = {
	init: function() {
		var _g = 0;
		while(_g < 2) this.dice[_g++] = 0;
		this.bakaze = 0;
		var _g1 = 0;
		while(_g1 < 4) this.jikaze[_g1++] = 0;
		var _g2 = 0;
		while(_g2 < 10) this.dora[_g2++] = 0;
		this.tumo_pos = 0;
		this.haitei_pos = 0;
		this.rinshan_pos = 0;
		this.dora_pos = 0;
		this.rest_c = 0;
		this.kan_c = 0;
		this.mota_c = 0;
		this.who_act = 0;
		this.who_react = 0;
		this.pn = 0;
		this.pai = 0;
		this.tumoaction.init();
		this.action.init();
		this.reaction.init();
		this.not_shojun = 0;
		this.haitei_f = 0;
		this.rinshan_f = 0;
		this.chankan_f = 0;
		var _g3 = 0;
		while(_g3 < 4) this.member[_g3++].init();
		this.never_mode = 0;
		this.never_who = 0;
		this.never_pai = 0;
		this.end_code = "";
		this.who_hora = 0;
		this.who_furi = 0;
		this.cnt = 0;
		this.chonbo = 0;
	}
	,copy_reaction: function(who) {
		this.reaction.code = this.member[who].reaction.code;
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			this.reaction.push[i] = this.member[who].reaction.push[i];
		}
	}
};
var Main = function() {
	this.tonpusen = false;
	this.title = { logo_x : 200, logo_y : 100, stamp_x : 173, stamp_y : 402};
	this.sbmax = 10;
	this.sbtn = [];
	this.setting = { disp : false, bx : 0, by : 0, bw : 60, bh : 40, dx : 0, dy : 0, dw : 420, dh : 120};
	this.zandisp = false;
	this.tendisp = false;
	this.tpos = [];
	this.horadisp = { x : 160, y : 80, w : 640, h : 400};
	this.message = { style : 0, txt : "", exp : 0, oy : 792, h : 32, who : 0};
	this.bpos = { ox : 40, oy : 180, w : 100, h : 80, xa : 10};
	this.activebutton = -1;
	this.buttonmax = 5;
	this.button = [];
	this.shiver = { pn : -1, visible : false, c : 0};
	this.posline = false;
	this.selected_pai = -1;
	this.old_time = 0;
	this.counter = 0;
	this.dpos = [];
	this.hpos = { x : 0, y : 0};
	this.cpat = [];
	this.cpos = [];
	this.rpos = [];
	this.PAI_H2 = 40;
	this.PAI_W2 = 55;
	this.PAI_H1 = 55;
	this.PAI_W1 = 40;
	this.prio = [];
	this.BIGPAI_YPOS = 600;
	this.gpos = [];
	this.ppos = [];
	this.opos = [];
	this.big_tepai = false;
	this.tepai_open = 0;
	this.kyokuname = ["第一局","第二局","ラス前","オーラス","南一局","南二局","南三局","南四局"];
	this.PA_PENCH = 6;
	this.PA_KANCH = 5;
	this.PA_TOI = 4;
	this.PA_RMEN = 3;
	this.PA_ANKO = 2;
	this.PA_SHUN = 1;
	this.PA_FLOAT = 0;
	this.SIM_CHIH = 4;
	this.SIM_CHIM = 3;
	this.SIM_CHIL = 2;
	this.SIM_PON = 1;
	this.SIM_MINKAN = 0;
	this.NY_SUSI = 9;
	this.NY_SANGEN = 8;
	this.NY_KOKUSI = 7;
	this.NY_TOITOI = 6;
	this.NY_CHITOI = 5;
	this.NY_SOME = 4;
	this.NY_YAKUPAI = 3;
	this.NY_CHANTA = 2;
	this.NY_TANYAO = 1;
	this.NY_TENARI = 0;
	this.CM_BETA = 3;
	this.CM_CARE = 2;
	this.CM_BITCARE = 1;
	this.CM_NOCARE = 0;
	this.DV_MOSTDANGER = 13;
	this.DV_DANGER = 12;
	this.DV_JI = 11;
	this.DV_CHANCE = 10;
	this.DV_SUTESUIT = 9;
	this.DV_4JUN = 8;
	this.DV_HEN = 7;
	this.DV_KABE = 6;
	this.DV_SUJI = 5;
	this.DV_JILIVE = 4;
	this.DV_ELSESUIT = 3;
	this.DV_JIDEAD = 2;
	this.DV_MINO = 1;
	this.DV_ANPAI = 0;
	this.pvwork = new PVWork();
	this.pvmat = new PVMat();
	this.kyoku = new Kyoku();
	this.hanchan = new Hanchan();
	this.taikyoku = new Taikyoku();
	this.PS_FUSE = 3;
	this.PS_TACHI = 2;
	this.PS_URA = 1;
	this.PS_OMO = 0;
	this.pais = [];
	this.yama = [];
	this.PN_MAX = 300;
	this.PN_YAMA = 256;
	this.PN_DORA = 256;
	this.io = new IO();
	this.io.timer_func = $bind(this,this.loading);
};
Main.main = function() {
	return new Main();//avert
};
Main.prototype = {
	PN_TE: function(who) {
		return who * 64;
	}
	,PN_NAKI: function(who) {
		return who * 64 + 14;
	}
	,PN_SUTE: function(who) {
		return who * 64 + 30;
	}
	,loading: function() {
		if(!this.io.loaded()) {
			return;
		}
		this.io.timer_func = null;
		var _g1 = 0;
		var _g = this.PN_MAX;
		while(_g1 < _g) {
			var i = _g1++;
			this.pais[i] = { pai : 0, stat : 0, dr : 0, up : 0};
			this.opos[i] = { px : 0, py : 0};
			this.ppos[i] = { bx : 0, by : 0, w : 0, h : 0, sx : 0, sy : 0, pat : 0, sbx : 0, sby : 0, sw : 0, sh : 0, ssx : 0, ssy : 0};
		}
		var _g2 = 0;
		while(_g2 < 14) this.gpos[_g2++] = { bx : 0, by : 0, w : 0, h : 0, sx : 0, sy : 0};
		var _g3 = 0;
		while(_g3 < 4) this.rpos[_g3++] = { bx : 0, by : 0, w : 0, h : 0, sx : 0, sy : 0, exist : 0};
		this.cpos = [{ x : 860, y : 585},{ x : 914, y : 4},{ x : 4, y : 4},{ x : 2, y : 560}];
		this.cpat = [{ sx : 400, sy : 440, w : 100, h : 40},{ sx : 500, sy : 440, w : 100, h : 40},{ sx : 200, sy : 440, w : 50, h : 70},{ sx : 250, sy : 440, w : 50, h : 70},{ sx : 400, sy : 480, w : 100, h : 40},{ sx : 500, sy : 480, w : 100, h : 40},{ sx : 300, sy : 440, w : 50, h : 70},{ sx : 350, sy : 440, w : 50, h : 70}];
		var _g4 = 0;
		while(_g4 < 4) this.tpos[_g4++] = { x : 0, y : 0};
		var _g5 = 0;
		while(_g5 < 2) this.dpos[_g5++] = { x : 0, y : 0, sx : 0, sy : 0};
		var up = [21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,11,12,13,14,15,16,17,18,19,1,2,3,4,5,6,7,8,9];
		var c = 0;
		var _g6 = 0;
		while(_g6 < 34) {
			var i1 = _g6++;
			var _g11 = 0;
			while(_g11 < 4) {
				++_g11;
				this.yama[c] = up[i1];
				++c;
			}
		}
		var _g12 = 0;
		var _g7 = this.buttonmax;
		while(_g12 < _g7) this.button[_g12++] = { exist : false, x : 0, y : 0, w : 10, h : 10, txt : "", func : null};
		this.setting.bx = 10;
		this.setting.by = this.io.view.h - this.setting.bh - 10;
		this.setting.dx = 10;
		this.setting.dy = this.io.view.h - this.setting.dh - 10;
		var _g13 = 0;
		var _g8 = this.sbmax;
		while(_g13 < _g8) this.sbtn[_g13++] = { x : 0, y : 0, w : 0, h : 0, txt : "a", style : 0, group : 0, active : false};
		this.start_title();
	}
	,start_title: function() {
		this.counter = 0;
		this.io.timer_func = $bind(this,this.exec_title);
	}
	,exec_title: function() {
		this.io.cls();
		this.counter++;
		if(this.counter < 10) {
			return;
		}
		this.activebutton = -1;
		var _g1 = 0;
		var _g = this.buttonmax;
		while(_g1 < _g) this.button[_g1++].exist = false;
		var bx = Math.floor((this.io.view.w - 420 - 80) / 2);
		this.create_button(0,bx,320,140,100,"本麻雀",$bind(this,this.link_mahjong));
		this.create_button(1,bx + 180,320,140,100,"終了",$bind(this,this.end_game));
		this.create_button(2,bx + 360,320,140,100,"開始",$bind(this,this.start_tonpu));
		this.draw_title();
		this.io.timer_func = null;
		this.io.click_func = $bind(this,this.title_click);
		this.io.move_func = $bind(this,this.title_move);
		this.io.release_func = null;
		this.io.next_func = null;
	}
	,draw_title: function() {
		this.io.cls();
		this.io.copy_logo(0,0,320,240,20,20,1);
		if(this.tepai_open > 0) {
			this.io.copy_logo(320,0,160,120,200,0,1);
		}
		this.draw_button();
		this.io.draw_text(380,40,"ルール",28,"#ffffff",true,"left","top");
		var txt = ["リーチ無料","ノーテン親流れ","ノーテン罰符なし","チョンボ役満払い","箱割れで終了"];
		var _g1 = 0;
		var _g = txt.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.io.draw_text(380,80 + i * 30,txt[i],22,"#ffffff",true,"left","top");
		}
	}
	,title_click: function() {
		this.check_activebutton();
		if(this.activebutton >= 0) {
			this.io.click_func = null;
			this.io.move_func = $bind(this,this.title_move);
			this.io.release_func = $bind(this,this.button_released);
		}
	}
	,title_move: function() {
		var p = this.activebutton;
		this.check_activebutton();
		if(p == this.activebutton) {
			return;
		}
		this.draw_title();
	}
	,title_release: function() {
		this.check_activebutton();
		if(this.activebutton >= 0) {
			this.io.click_func = null;
			this.io.move_func = null;
			this.io.release_func = null;
			this.button[this.activebutton].func();
		}
	}
	,start_tonpu: function() {
		this.tonpusen = true;
		this.start_taikyoku();
	}
	,start_tonnan: function() {
		this.tonpusen = false;
		this.start_taikyoku();
	}
	,end_game: function() {
		this.io.link("https://www.gamedesign.jp/");
	}
	,link_mahjong: function() {
		this.io.link("https://www.gamedesign.jp/games/mahjongmobile/");
	}
	,start_taikyoku: function() {
		var _g1 = 0;
		var _g = this.buttonmax;
		while(_g1 < _g) this.button[_g1++].exist = false;
		this.io.timer_func = null;
		this.io.click_func = null;
		this.io.move_func = null;
		this.io.release_func = null;
		this.taikyoku.init();
		this.taikyoku.tepai_open = this.tepai_open;
		this.start_hanchan();
	}
	,start_hanchan: function() {
		this.hanchan.init();
		if(this.tonpusen) {
			this.hanchan.kyoku_max = 3;
		}
		this.io.timer_func = $bind(this,this.start_kyoku);
	}
	,start_kyoku: function() {
		this.kyoku.init();
		var oya = this.hanchan.oya;
		this.kyoku.who_act = oya;
		this.kyoku.bakaze = Math.floor(this.hanchan.kyoku_c / 4) + 1;
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			this.kyoku.jikaze[i] = (4 + i - oya) % 4 + 1;
		}
		var _g1 = 0;
		while(_g1 < 2) this.kyoku.dice[_g1++] = Math.floor(Math.random() * 6);
		this.kyoku.tumo_pos = 0;
		this.kyoku.haitei_pos = 35;
		this.kyoku.rinshan_pos = 134 % 136;
		this.kyoku.dora_pos = 130 % 136;
		var _g2 = 0;
		while(_g2 < 36) {
			var i1 = _g2++;
			var r = Math.floor(Math.random() * 36);
			var tmp = this.yama[r];
			this.yama[r] = this.yama[i1];
			this.yama[i1] = tmp;
		}
		this.init_taku();
		this.set_ppos();
		this.set_prio();
		this.big_tepai = false;
		this.tendisp = false;
		this.zandisp = false;
		this.setting.disp = false;
		this.draw_taku();
		this.counter = 0;
		this.io.click_func = null;
		this.io.timer_func = $bind(this,this.start_wanpai);
	}
	,start_wanpai: function() {
		var pn;
		var _g = 0;
		while(_g < 36) {
			var i = _g++;
			pn = this.PN_YAMA + i;
			this.pais[pn].dr = 0;
			this.pais[pn].pai = this.yama[i];
			this.pais[pn].stat = this.PS_URA;
			this.pais[pn].up = i % 2 == 0?1:0;
		}
		this.set_ppos();
		this.set_prio();
		this.draw_taku();
		this.io.timer_func = $bind(this,this.start_haipai);
	}
	,start_haipai: function() {
		this.kyoku.who_act = this.hanchan.oya;
		this.counter = 0;
		this.io.timer_func = $bind(this,this.haipai);
		this.tendisp = true;
	}
	,haipai: function() {
		var who = this.kyoku.who_act;
		var num = 0;
		var opn = 0;
		var pai = [0,0,0,0];
		var pn = 0;
		this.counter++;
		if(this.counter == 1) {
			this.io.playsnd("tumo",0);
			if(this.get_pais_tepai_c(who) >= 12) {
				num = 1;
			} else {
				num = 4;
			}
			var _g1 = 0;
			var _g = num;
			while(_g1 < _g) {
				pai[_g1++] = this.yama[this.kyoku.tumo_pos];
				pn = this.PN_YAMA + this.kyoku.tumo_pos;
				this.pais[pn].pai = 0;
				this.kyoku.tumo_pos++;
			}
			opn = this.PN_TE(who) + this.get_pais_tepai_c(who);
			var _g11 = 0;
			var _g2 = num;
			while(_g11 < _g2) {
				var i = _g11++;
				pn = opn + i;
				this.pais[pn].pai = pai[i];
				this.pais[pn].stat = this.PS_FUSE;
			}
		} else if(this.counter == 2) {
			var _g3 = 0;
			while(_g3 < 13) {
				var i1 = _g3++;
				pn = this.PN_TE(who) + i1;
				if(this.pais[pn].stat == this.PS_FUSE) {
					this.pais[pn].stat = this.PS_TACHI;
				}
			}
		} else {
			this.kyoku.who_act++;
			if(this.kyoku.who_act > 1) {
				this.kyoku.who_act = 0;
			}
			this.counter = 0;
			if(this.get_pais_tepai_c(this.kyoku.who_act) >= 13) {
				this.io.timer_func = $bind(this,this.after_haipai);
			}
		}
		this.set_ppos();
		this.set_prio();
		this.draw_taku();
	}
	,after_haipai: function() {
		var pn;
		if(this.counter == 0) {
			var _g = 0;
			while(_g < 2) {
				var i = _g++;
				var _g1 = 0;
				while(_g1 < 13) {
					var j = _g1++;
					pn = this.PN_TE(i) + j;
					this.pais[pn].stat = this.PS_FUSE;
				}
			}
			this.old_time = this.io.tc;
			this.counter++;
		} else if(this.counter == 1) {
			if(this.io.tc > this.old_time + 6) {
				this.counter++;
			}
		} else if(this.counter == 2) {
			this.tepai_debug();
			var _g2 = 0;
			while(_g2 < 2) {
				var i1 = _g2++;
				this.tepai_sort(i1);
				var _g11 = 0;
				while(_g11 < 13) {
					var j1 = _g11++;
					pn = this.PN_TE(i1) + j1;
					this.pais[pn].stat = this.taikyoku.tepai_open > 0?this.PS_OMO:this.PS_TACHI;
				}
			}
			this.counter++;
		} else {
			var _g3 = 0;
			while(_g3 < 2) this.set_want(_g3++);
			var _g4 = 0;
			while(_g4 < 2) {
				var i2 = _g4++;
				this.set_tepai_info_start(i2);
				this.set_nerai(i2);
			}
			this.kyoku.who_act = this.hanchan.oya;
			this.kyoku.tumoaction.code = "ACT_TUMO";
			this.io.timer_func = $bind(this,this.start_tumoaction);
		}
		this.set_ppos();
		this.draw_taku();
	}
	,tepai_debug: function() {
		var _g = 0;
		while(_g < 13) ++_g;
	}
	,start_tumoaction: function() {
		this.counter = 0;
		if(this.kyoku.tumoaction.code == "ACT_TUMO") {
			this.io.timer_func = $bind(this,this.tumo_proc);
		} else if(this.kyoku.tumoaction.code == "ACT_RINSHAN") {
			this.io.timer_func = $bind(this,this.rinshan_proc);
		} else {
			this.io.timer_func = $bind(this,this.start_think);
		}
	}
	,tumo_proc: function() {
		
		var who = this.kyoku.who_act;
		var pn;
		var pai;
		this.counter++;
		if(this.counter == 1) {
			this.io.playsnd("tumo",0);
			pai = this.yama[this.kyoku.tumo_pos];
			this.pais[this.PN_YAMA + this.kyoku.tumo_pos].pai = 0;
			this.kyoku.tumo_pos++;
			this.tumopai_remove(who);
			pn = this.PN_TE(who) + this.get_pais_tepai_c(who);
			this.pais[pn].pai = pai;
			this.pais[pn].stat = this.taikyoku.tepai_open != 0?this.PS_OMO:this.PS_TACHI;
			this.pais[pn].up = 1;
			this.kyoku.pn = pn;
		} else {
			pn = this.kyoku.pn;
			this.pais[pn].up = 0;
			this.io.timer_func = $bind(this,this.start_think);
		}
		this.set_ppos();
		this.set_prio();
		this.draw_taku();
	}
	,rinshan_proc: function() {
		var pn;
		var pai;
		var who = this.kyoku.who_act;
		this.counter++;
		if(this.counter != 1) {
			if(this.counter == 2) {
				this.io.playsnd("tumo",0);
				pai = this.yama[this.kyoku.tumo_pos];
				this.pais[this.PN_YAMA + this.kyoku.tumo_pos].pai = 0;
				this.kyoku.tumo_pos++;
				pn = this.PN_TE(who) + this.get_pais_tepai_c(who);
				this.tumopai_remove(who);
				this.appear_pais(pn,pai);
				this.pais[pn].stat = this.PS_TACHI;
				this.pais[pn].up = 1;
				this.kyoku.pn = pn;
			} else if(this.counter == 3) {
				this.pais[this.kyoku.pn].up = 0;
			} else {
				this.start_think();
				return;
			}
		}
		this.set_ppos();
		this.set_prio();
		this.draw_taku();
	}
	,start_think: function() {
		this.flag_tumo();
		if(this.kyoku.rest_c <= 8) {
			this.zandisp = true;
		}
		this.set_tepai_info_14();
		if(this.kyoku.who_act == 0) {
			this.kyoku.act_cnt = 0;
			this.start_act_man();
		} else {
			this.act_com();
		}
	}
	,start_action: function() {
		this.io.timer_func = null;
		var who = this.kyoku.who_act;
		if(who > 0) {
			if(this.kyoku.action.code == "ACT_TUMOHO") {
				this.hassei(who,"ツモ",0,$bind(this,this.action_switch));
				return;
			}
			if(this.kyoku.action.code == "ACT_ANKAN") {
				this.hassei(who,"カン",0,$bind(this,this.action_switch));
				return;
			}
			if(this.kyoku.action.code == "ACT_KAKAN") {
				this.hassei(who,"カン",0,$bind(this,this.action_switch));
				return;
			}
		}
		this.action_switch();
	}
	,action_switch: function() {
		this.counter = 0;
		if(this.kyoku.action.code == "ACT_TUMOHO") {
			this.io.timer_func = $bind(this,this.hora_proc);
		} else if(this.kyoku.action.code == "ACT_ANKAN") {
			this.io.timer_func = $bind(this,this.ankan_proc);
		} else if(this.kyoku.action.code == "ACT_KAKAN") {
			this.io.timer_func = $bind(this,this.kakan_proc);
		} else if(this.kyoku.action.code == "ACT_NINE") {
			this.io.timer_func = $bind(this,this.nine_proc);
		} else {
			this.io.timer_func = $bind(this,this.sute_proc);
		}
	}
	,sute_proc: function() {
		var n = 0;
		var who = this.kyoku.who_act;
		var pn;
		if(this.counter == 0) {
			var _g = 0;
			while(_g < 14) {
				var i = _g++;
				if(this.kyoku.action.push[i] > 0) {
					n = i;
					break;
				}
			}
			pn = this.kyoku.pn = this.PN_TE(who) + n;
			if(this.pais[pn].pai == 0) {
				this.io.playsnd("sute",0);
				pn = this.PN_SUTE(who) + this.get_pais_sute_c(who);
				this.kyoku.pn = pn;
				this.pais[pn].pai = this.kyoku.pai;
				this.set_ppos();
				this.set_prio();
				this.draw_taku();
				this.counter = 3;
				return;
			} else {
				this.pais[pn].stat = this.PS_OMO;
				this.set_ppos();
				this.draw_taku();
			}
		} else if(this.counter == 1) {
			this.kyoku.pai = this.delete_pais(this.kyoku.pn);
			this.set_ppos();
			this.draw_taku();
		} else if(this.counter == 2) {
			this.io.playsnd("sute",0);
			pn = this.PN_SUTE(who) + this.get_pais_sute_c(who);
			this.kyoku.pn = pn;
			this.pais[pn].pai = this.kyoku.pai;
			this.set_ppos();
			this.set_prio();
			this.draw_taku();
		} else {
			var _g1 = 0;
			while(_g1 < 14) {
				var i1 = _g1++;
				pn = this.PN_TE(who) + i1;
				this.pais[pn].stat = this.taikyoku.tepai_open > 0?this.PS_OMO:this.PS_TACHI;
			}
			this.tepai_sort(who);
			this.tepai_press(who);
			this.set_ppos();
			this.set_prio();
			this.draw_taku();
			this.kyoku.member[who].sute[this.kyoku.pai]++;
			var _g2 = 0;
			while(_g2 < 30) {
				var i2 = _g2++;
				if(this.kyoku.member[who].sutelist[i2] == 0) {
					this.kyoku.member[who].sutelist[i2] = this.kyoku.pai;
					break;
				}
			}
			this.io.timer_func = $bind(this,this.set_reaction);
		}
		this.counter++;
	}
	,ankan_proc: function() {
		var c;
		var pn;
		var smn;
		var who = this.kyoku.who_act;
		if(this.counter == 0) {
			c = 0;
			var _g = 0;
			while(_g < 14) {
				var i = _g++;
				if(this.kyoku.action.push[i] > 0) {
					pn = this.PN_TE(who) + i;
					this.pais[pn].stat = this.PS_OMO;
					++c;
					if(c > 3) {
						break;
					}
				}
			}
			this.set_ppos();
			this.draw_taku();
			this.old_time = this.io.tc;
			this.counter++;
		} else if(this.counter == 1) {
			if(this.io.tc > this.old_time + 4) {
				this.counter++;
			}
		} else if(this.counter == 2) {
			c = 0;
			var _g1 = 0;
			while(_g1 < 14) {
				var i1 = _g1++;
				if(this.kyoku.action.push[i1] > 0) {
					this.kyoku.kpai[c] = this.delete_pais(this.PN_TE(who) + i1);
					++c;
					if(c > 3) {
						break;
					}
				}
			}
			this.set_ppos();
			this.draw_taku();
			this.counter++;
		} else if(this.counter == 3) {
			this.io.playsnd("naki",0);
			this.tepai_press(who);
			smn = this.appear_sarasi_pai(who,4,1);
			pn = this.PN_NAKI(who) + smn * 4;
			this.pais[pn].stat = this.PS_URA;
			this.pais[pn + 2].stat = this.PS_URA;
			this.kyoku.pn = pn + 3;
			this.tepai_sort(who);
			this.tepai_press(who);
			var _g2 = 0;
			while(_g2 < 14) {
				var i2 = _g2++;
				var tmp = this.PN_TE(who) + i2;
				this.pais[tmp].stat = this.taikyoku.tepai_open != 0?this.PS_OMO:this.PS_TACHI;
			}
			this.set_ppos();
			this.set_prio();
			this.draw_taku();
			this.counter++;
		} else {
			this.set_reaction();
		}
	}
	,kakan_proc: function() {
		var who = this.kyoku.who_act;
		var pn = 0;
		if(this.counter == 0) {
			var _g = 0;
			while(_g < 14) {
				var i = _g++;
				if(this.kyoku.action.push[i] > 0) {
					pn = this.PN_TE(who) + i;
				}
			}
			this.kyoku.pai = this.delete_pais(pn);
			this.set_ppos();
			this.draw_taku();
			this.counter++;
		} else if(this.counter == 1) {
			this.io.playsnd("tumo",0);
			this.tepai_press(who);
			this.kyoku.pn = this.PN_NAKI(who) + this.get_pon_smn(who,this.kyoku.pai) * 4 + 3;
			this.appear_pais(this.kyoku.pn,this.kyoku.pai);
			this.tepai_sort(who);
			this.tepai_press(who);
			this.set_ppos();
			this.set_prio();
			this.draw_taku();
			this.counter++;
		} else {
			this.set_reaction();
		}
	}
	,set_reaction: function() {
		this.flag_sute();
		this.set_tepai_info_13();
		var _g = 0;
		while(_g < 2) {
			var i = _g++;
			this.set_tepai_info_ron(i);
			this.set_member_ra(i);
		}
		var _g1 = 0;
		while(_g1 < 2) this.react_com(_g1++);
		this.start_react_man();
	}
	,start_reaction: function() {
		this.judge_reaction();
		this.flag_reach();
		var who = this.kyoku.who_react;
		if(who > 0) {
			if(this.kyoku.reaction.code == "ACT_RONHO") {
				this.hassei(who,"ロン",0,$bind(this,this.react_switch));
				return;
			}
			if(this.kyoku.reaction.code == "ACT_CHI") {
				this.hassei(who,"チー",0,$bind(this,this.react_switch));
				return;
			}
			if(this.kyoku.reaction.code == "ACT_PON") {
				this.hassei(who,"ポン",0,$bind(this,this.react_switch));
				return;
			}
			if(this.kyoku.reaction.code == "ACT_NINKAN") {
				this.hassei(who,"カン",0,$bind(this,this.react_switch));
				return;
			}
		}
		this.react_switch();
	}
	,react_switch: function() {
		this.counter = 0;
		if(this.kyoku.reaction.code == "ACT_RONHO") {
			this.io.timer_func = $bind(this,this.hora_proc);
		} else if(this.kyoku.reaction.code == "ACT_CHI") {
			this.io.timer_func = $bind(this,this.chi_proc);
		} else if(this.kyoku.reaction.code == "ACT_PON") {
			this.io.timer_func = $bind(this,this.pon_proc);
		} else if(this.kyoku.reaction.code == "ACT_MINKAN") {
			this.io.timer_func = $bind(this,this.minkan_proc);
		} else if(this.kyoku.reaction.code == "ACT_AFTERKAN") {
			this.io.timer_func = $bind(this,this.after_kan);
		} else {
			this.io.timer_func = $bind(this,this.after_sute);
		}
	}
	,after_sute: function() {
		this.io.timer_func = null;
		this.after_reaction();
	}
	,after_kan: function() {
		this.io.timer_func = null;
		this.after_reaction();
	}
	,chi_proc: function() {
		var c;
		var who = this.kyoku.who_react;
		if(this.counter == 0) {
			c = 1;
			var _g = 0;
			while(_g < 14) {
				var i = _g++;
				if(this.kyoku.reaction.push[i] > 0) {
					this.kyoku.kpai[c] = this.delete_pais(this.PN_TE(who) + i);
					++c;
					if(c > 2) {
						break;
					}
				}
			}
			this.kyoku.kpai[0] = this.delete_pais(this.kyoku.pn);
			this.set_ppos();
			this.draw_taku();
			this.counter++;
		} else if(this.counter == 1) {
			this.io.playsnd("naki",0);
			var _g1 = 0;
			while(_g1 < 14) {
				var i1 = _g1++;
				var tmp = this.PN_TE(who) + i1;
				this.pais[tmp].stat = this.PS_TACHI;
			}
			this.tepai_press(who);
			this.appear_sarasi_pai(who,3,0);
			this.set_ppos();
			this.set_prio();
			this.draw_taku();
			this.counter++;
		} else {
			this.after_reaction();
		}
	}
	,pon_proc: function() {
		var c;
		var who = this.kyoku.who_react;
		var dr = (7 + who - this.kyoku.who_act) % 4;
		if(this.counter == 0) {
			var _g = 0;
			while(_g < 14) {
				var i = _g++;
				if(this.kyoku.reaction.push[i] > 0) {
					var tmp = this.PN_TE(who) + i;
					this.pais[tmp].stat = this.PS_OMO;
				}
			}
			this.set_ppos();
			this.draw_taku();
			this.old_time = this.io.tc;
			this.counter++;
		} else if(this.counter == 1) {
			if(this.io.tc > this.old_time + 4) {
				this.counter++;
			}
		} else if(this.counter == 2) {
			c = 0;
			var _g1 = 0;
			while(_g1 < 14) {
				var i1 = _g1++;
				if(this.kyoku.reaction.push[i1] > 0) {
					if(c == dr) {
						++c;
					}
					this.kyoku.kpai[c] = this.delete_pais(this.PN_TE(who) + i1);
					++c;
					if(c > 3) {
						break;
					}
				}
			}
			this.kyoku.kpai[dr] = this.delete_pais(this.kyoku.pn);
			this.set_ppos();
			this.draw_taku();
			this.counter++;
		} else if(this.counter == 3) {
			this.io.playsnd("naki",0);
			this.tepai_press(who);
			var _g2 = 0;
			while(_g2 < 14) {
				var i2 = _g2++;
				var tmp1 = this.PN_TE(who) + i2;
				this.pais[tmp1].stat = this.taikyoku.tepai_open != 0?this.PS_OMO:this.PS_TACHI;
			}
			this.appear_sarasi_pai(who,3,dr);
			this.set_ppos();
			this.set_prio();
			this.draw_taku();
			this.counter++;
		} else {
			this.after_reaction();
		}
	}
	,minkan_proc: function() {
		var c;
		var who = this.kyoku.who_react;
		var dr = (7 + who - this.kyoku.who_act) % 4;
		if(this.counter == 0) {
			var _g = 0;
			while(_g < 14) {
				var i = _g++;
				if(this.kyoku.reaction.push[i] > 0) {
					var tmp = this.PN_TE(who) + i;
					this.pais[tmp].stat = this.PS_OMO;
				}
			}
			this.set_ppos();
			this.draw_taku();
			this.old_time = this.io.tc;
			this.counter++;
		} else if(this.counter == 1) {
			if(this.io.tc > this.old_time + 4) {
				this.counter++;
			}
		} else if(this.counter == 2) {
			c = 0;
			var _g1 = 0;
			while(_g1 < 14) {
				var i1 = _g1++;
				if(this.kyoku.reaction.push[i1] > 0) {
					this.kyoku.kpai[c] = this.delete_pais(this.PN_TE(who) + i1);
					++c;
					if(c > 3) {
						break;
					}
				}
			}
			this.kyoku.kpai[3] = this.delete_pais(this.kyoku.pn);
			this.set_ppos();
			this.draw_taku();
			this.counter++;
		} else if(this.counter == 3) {
			this.io.playsnd("naki",0);
			this.tepai_press(who);
			var _g2 = 0;
			while(_g2 < 14) {
				var i2 = _g2++;
				var tmp1 = this.PN_TE(who) + i2;
				this.pais[tmp1].stat = this.taikyoku.tepai_open != 0?this.PS_OMO:this.PS_TACHI;
			}
			this.appear_sarasi_pai(who,4,dr);
			this.set_ppos();
			this.set_prio();
			this.draw_taku();
			this.counter++;
		} else {
			this.after_reaction();
		}
	}
	,after_reaction: function() {
		this.flag_reaction();
		if(this.kyoku.haitei_f > 0) {
			this.ryukyoku_proc();
			return;
		}
		this.next_mota();
		this.start_tumoaction();
	}
	,hora_proc: function() {
		if(this.counter == 0) {
			if(this.kyoku.action.code == "ACT_TUMOHO") {
				this.kyoku.who_hora = this.kyoku.who_act;
				this.kyoku.tumo_f = 1;
				if(this.kyoku.who_hora != 0) {
					var pn = this.PN_TE(this.kyoku.who_hora) + this.get_pais_tepai_max(this.kyoku.who_hora);
					this.pais[pn].stat = this.PS_OMO;
					this.set_ppos();
					this.draw_taku();
				}
			} else {
				this.kyoku.who_hora = this.kyoku.who_react;
				this.kyoku.tumo_f = 0;
			}
			this.counter++;
		} else if(this.counter == 1) {
			var _g = 0;
			while(_g < 14) {
				var i = _g++;
				var tmp = this.PN_TE(this.kyoku.who_hora) + i;
				this.pais[tmp].stat = this.PS_FUSE;
			}
			this.set_ppos();
			this.draw_taku();
			this.counter++;
		} else if(this.counter == 2) {
			this.io.playsnd("sute",0);
			var _g1 = 0;
			while(_g1 < 14) {
				var i1 = _g1++;
				var tmp1 = this.PN_TE(this.kyoku.who_hora) + i1;
				this.pais[tmp1].stat = this.PS_OMO;
			}
			this.set_ppos();
			this.draw_taku();
			this.counter++;
		} else {
			this.start_shiver();
			this.io.click_func = $bind(this,this.start_hora_info);
			this.io.move_func = null;
			this.io.release_func = null;
		}
	}
	,start_hora_info: function() {
		this.io.click_func = null;
		this.shiver.pn = -1;
		this.draw_taku();
		if(this.kyoku.action.code == "ACT_TUMOHO") {
			this.set_member_tumoho(this.kyoku.who_act);
			this.kyoku.hora = this.kyoku.member[this.kyoku.who_act].hi.hora;
		} else {
			this.set_member_ronho(this.kyoku.who_react);
			this.kyoku.hora = this.kyoku.member[this.kyoku.who_react].hi.hora;
		}
		if(this.kyoku.chonbo > 0) {
			this.counter = 0;
			this.io.timer_func = $bind(this,this.chonbo_wait);
			return;
		}
		var txt = "";
		var hora = this.kyoku.hora;
		var yaku_str = ["ダブリー","リーチ","一発","海底","河底","嶺上開花","槍槓","ツモ","混一色","チンイツ","チャンタ","純チャン","混老頭","タンヤオ","七対子","三暗刻","三槓子","対々和","三色同刻","小三元","役牌","ピンフ","三色同順","一気通貫","一盃口","二盃口","流し満貫","ドラ","裏ドラ","赤","役満位置","天和","地和","人和","清老頭","大三元","小四喜","大四喜","字一色","四暗刻","四槓子","国士無双","九連宝燈","緑一色","大車輪",""];
		var st = hora.yakuman_c > 0?30:0;
		var c = 0;
		var _g = st;
		while(_g < 64) {
			var i = _g++;
			var han = hora.yaku[i];
			if(han == 0) {
				continue;
			}
			if(c > 0) {
				txt += "、";
			}
			txt += yaku_str[i];
			if(yaku_str[i] == "ドラ" || yaku_str[i] == "裏ドラ") {
				txt += han;
			}
			if(yaku_str[i] == "役牌" && han >= 2) {
				txt += han;
			}
			++c;
		}
		this.hassei(this.kyoku.who_hora,txt,0,$bind(this,this.start_hora_ten));
	}
	,start_hora_ten: function() {
		var hora = this.kyoku.hora;
		var txt = "";
		var mangan_name = ["","満貫","ハネ満","倍満","三倍満","数え役満","役満","ダブル役満","トリプル役満","四倍役満",""];
		var mv = hora.mangan_v;
		if(mv >= 6) {
			if(mv > 9) {
				mv = 9;
			}
			txt = mangan_name[mv];
		} else if(mv >= 1) {
			txt = mangan_name[mv];
		} else {
			txt = "error";
		}
		txt += this.get_gobi(this.kyoku.who_hora);
		this.hassei(this.kyoku.who_hora,txt,0,$bind(this,this.hora_tenbo));
	}
	,chonbo_wait: function() {
		this.counter++;
		if(this.counter < 10) {
			return;
		}
		this.hassei(1,"・・・・・・・・",0,$bind(this,this.chonbo_come));
	}
	,chonbo_come: function() {
		var txt = "";
		if(this.kyoku.chonbo == 1) {
			txt = "それ、アガってないで";
		} else if(this.kyoku.chonbo == 2) {
			txt = "そりゃフリテンですわ";
		} else if(this.kyoku.chonbo == 3) {
			txt = "当たり牌、見逃してますやん";
		}
		this.hassei(1,txt,0,$bind(this,this.chonbo_come2));
	}
	,chonbo_come2: function() {
		this.hassei(1,"チョンボは役満払いやで",0,$bind(this,this.hora_tenbo));
	}
	,hora_tenbo: function() {
		this.set_add_hora(this.kyoku.who_hora);
		this.start_tenbo_proc($bind(this,this.hora_end));
	}
	,hora_end: function() {
		var who = this.kyoku.who_hora;
		this.set_pt();
		if(who != this.hanchan.oya) {
			this.hanchan.oya = (this.hanchan.oya + 1) % 2;
		}
		if(this.kyoku.chonbo > 0) {
			this.hanchan.oya = 1;
		}
		this.io.timer_func = null;
		this.io.click_func = $bind(this,this.kyoku_end);
	}
	,ryukyoku_proc: function() {
		this.counter = 0;
		this.io.timer_func = $bind(this,this.exec_ryukyoku);
		this.io.click_func = null;
		this.io.move_func = null;
		this.io.release_func = null;
	}
	,exec_ryukyoku: function() {
		this.counter++;
		var a = this.counter / 10;
		this.draw_taku();
		this.io.copy_logo(320,120,320,120,160,100,a);
		if(a < 1) {
			return;
		}
		this.io.timer_func = null;
		this.io.click_func = $bind(this,this.start_ryukyoku_open);
	}
	,start_ryukyoku_open: function() {
		this.kyoku.who_act = this.hanchan.oya;
		this.io.timer_func = $bind(this,this.ryukyoku_open);
		this.io.click_func = null;
	}
	,ryukyoku_open: function() {
		var who = this.kyoku.who_act;
		this.io.playsnd("sute",0);
		var stat = this.PS_OMO;
		if(this.kyoku.member[who].tenpai.ts.tenpai_f == 0) {
			stat = this.PS_URA;
		}
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			this.pais[this.PN_TE(who) + i].stat = stat;
		}
		this.set_ppos();
		this.draw_taku();
		this.kyoku.who_act++;
		if(this.kyoku.who_act > 1) {
			this.kyoku.who_act = 0;
		}
		if(this.kyoku.who_act != this.hanchan.oya) {
			return;
		}
		if(this.kyoku.member[this.hanchan.oya].tenpai.ts.tenpai_f == 0) {
			this.hanchan.oya = (this.hanchan.oya + 1) % 2;
			this.hanchan.kyoku_c++;
		}
		if(this.hanchan.kyoku_c <= this.hanchan.kyoku_max) {
			this.hanchan.honba++;
			var _g1 = 0;
			while(_g1 < 4) if(this.kyoku.member[(this.hanchan.oya + _g1++) % 4].reach_f > 0) {
				this.hanchan.horyu++;
			}
		}
		this.io.timer_func = null;
		this.io.click_func = $bind(this,this.kyoku_end);
	}
	,nine_proc: function() {
		this.io.playsnd("sute",0);
		this.tendisp = false;
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			var tmp = this.PN_TE(this.kyoku.who_act) + i;
			this.pais[tmp].stat = this.PS_OMO;
		}
		this.set_ppos();
		this.draw_taku();
		this.io.timer_func = null;
		this.io.click_func = null;
		this.io.move_func = null;
		this.io.release_func = null;
		this.io.next_func = $bind(this,this.nine_wait);
		this.big_mes("九種九牌");
	}
	,nine_wait: function() {
		var n = this.hanchan.kyoku_sum;
		this.hanchan.his[n] = new History();
		this.hanchan.his[n].end_code = "KEND_RYUKYOKU";
		this.hanchan.his[n].kyoku = this.hanchan.kyoku_c;
		var _g = 0;
		while(_g < 4) this.hanchan.his[n].ten_add[_g++] = 0;
		this.tendisp = true;
		this.draw_taku();
		this.io.click_func = $bind(this,this.kyoku_end);
		this.io.timer_func = null;
		this.io.move_func = null;
		this.io.release_func = null;
	}
	,sufu_proc: function() {
		this.tendisp = false;
		this.io.timer_func = null;
		this.io.click_func = null;
		this.io.move_func = null;
		this.io.release_func = null;
		this.io.next_func = $bind(this,this.nine_wait);
		this.big_mes("四風子連打");
	}
	,sukan_proc: function() {
		this.tendisp = false;
		this.io.timer_func = null;
		this.io.click_func = null;
		this.io.move_func = null;
		this.io.release_func = null;
		this.io.next_func = $bind(this,this.nine_wait);
		this.big_mes("四槓流れ");
	}
	,kyoku_end: function() {
		this.io.click_func = null;
		this.hanchan.kyoku_sum++;
		if(this.hanchan.pt[0].tenbo < 0) {
			this.counter = 0;
			this.io.timer_func = $bind(this,this.gameover);
			return;
		}
		if(this.hanchan.pt[1].tenbo < 0) {
			this.hassei(1,"ドボンや",0,$bind(this,this.start_youwin));
			return;
		}
		var _g1 = 0;
		var _g = this.PN_MAX;
		while(_g1 < _g) this.pais[_g1++].pai = 0;
		this.tendisp = false;
		this.draw_taku();
		this.counter = 0;
		this.start_kyoku();
		this.io.timer_func = $bind(this,this.kyoku_end_wait);
	}
	,kyoku_end_wait: function() {
		this.counter++;
		if(this.counter < 10) {
			return;
		}
		this.io.timer_func = null;
		this.start_kyoku();
	}
	,gameover: function() {
		this.counter++;
		var yp = 80 + this.counter;
		var a = this.counter / 20;
		this.draw_taku();
		this.io.copy_logo(0,240,640,120,0,yp,a);
		if(yp < 105) {
			return;
		}
		this.io.timer_func = null;
		this.io.click_func = $bind(this,this.start_title);
	}
	,start_youwin: function() {
		this.counter = 0;
		this.io.timer_func = $bind(this,this.youwin);
	}
	,youwin: function() {
		this.counter++;
		this.draw_taku();
		if(this.counter < 10) {
			return;
		}
		if(this.counter % 2 > 0) {
			this.io.copy_logo(0,360,640,120,0,340,1);
		}
		if(this.counter <= 20) {
			return;
		}
		this.io.timer_func = null;
		this.io.click_func = $bind(this,this.start_title);
		this.tepai_open = this.tepai_open == 0?1:0;
	}
	,start_reabo_proc: function(func) {
		this.counter = 0;
		this.io.timer_func = $bind(this,this.reabo_proc);
		this.io.next_func = func;
	}
	,reabo_proc: function() {
		var who = this.kyoku.who_act;
		if(this.counter == 0) {
			this.counter++;
		} else if(this.counter == 1) {
			this.counter++;
		} else if(this.counter == 2) {
			this.kyoku.member[who].reach_start = 1;
			if(this.kyoku.member[who].not_shojun == 0) {
				this.kyoku.member[who].doubble_f = 1;
			}
			this.kyoku.member[who].reach_jun = this.kyoku.member[who].mota_c;
			this.set_opos_reach(who);
			this.set_member_aa();
			this.set_reabo(who,1);
			this.draw_taku();
			this.io.playsnd("ribo",0);
			this.counter++;
		} else {
			this.io.timer_func = null;
			this.io.next_func();
		}
	}
	,start_pai_shiver: function() {
		this.io.timer_func = $bind(this,this.pai_shiver);
		var pn = this.kyoku.pn;
		this.kyoku.pai = this.pais[pn].pai;
		this.pais[pn].pai = 0;
		this.set_ppos();
		this.draw_taku();
		this.kyoku.cnt = 0;
	}
	,pai_shiver: function() {
		this.kyoku.cnt++;
		if(this.kyoku.cnt < 3) {
			return;
		}
		this.kyoku.cnt = 0;
		var pn = this.kyoku.pn;
		this.pais[pn].pai = this.pais[pn].pai == 0?this.kyoku.pai:0;
		this.set_ppos();
		this.draw_taku();
	}
	,end_pai_shiver: function(func) {
		this.counter = 0;
		this.io.timer_func = func;
		this.pais[this.kyoku.pn].pai = this.kyoku.pai;
		this.set_ppos();
		this.draw_taku();
	}
	,start_tenbo_proc: function(func) {
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			this.kyoku.ten_dest[i] = this.hanchan.pt[i].tenbo + this.kyoku.ten_add[i];
		}
		this.io.playsnd("tenbo",1);
		this.io.timer_func = $bind(this,this.tenbo_proc);
		this.io.next_func = func;
	}
	,tenbo_proc: function() {
		var c = 0;
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			if(this.hanchan.pt[i].tenbo == this.kyoku.ten_dest[i]) {
				++c;
			} else if(this.hanchan.pt[i].tenbo < this.kyoku.ten_dest[i]) {
				this.hanchan.pt[i].tenbo += 1000;
				if(this.hanchan.pt[i].tenbo > this.kyoku.ten_dest[i]) {
					this.hanchan.pt[i].tenbo = this.kyoku.ten_dest[i];
				}
			} else {
				this.hanchan.pt[i].tenbo -= 1000;
				if(this.hanchan.pt[i].tenbo < this.kyoku.ten_dest[i]) {
					this.hanchan.pt[i].tenbo = this.kyoku.ten_dest[i];
				}
			}
		}
		this.draw_taku();
		if(c == 4) {
			this.io.playsnd("tenbo",2);
			this.io.timer_func = null;
			this.counter = 0;
			this.io.next_func();
		}
	}
	,flag_tumo: function() {
		var who = this.kyoku.who_act;
		this.kyoku.rest_c = this.add_tumo_pos(this.kyoku.haitei_pos,1 - this.kyoku.tumo_pos);
		if(this.kyoku.rest_c <= 0) {
			this.kyoku.haitei_f = 1;
		}
		if(this.kyoku.tumoaction.code == "ACT_RINSHAN") {
			this.kyoku.rinshan_f = 1;
		}
		var _g = 0;
		while(_g < 40) this.kyoku.member[who].minoga[_g++] = 0;
		this.kyoku.member[who].mota_c++;
	}
	,flag_sute: function() {
		this.kyoku.rinshan_f = 0;
		var who = this.kyoku.who_act;
		this.kyoku.member[who].not_shojun = 1;
		this.kyoku.member[who].minogasi_f = 0;
		this.kyoku.member[who].ippatsu_f = 0;
		if(this.kyoku.action.code == "ACT_ANKAN" || this.kyoku.action.code == "ACT_KAKAN") {
			this.kyoku.chankan_f = 1;
			var _g = 0;
			while(_g < 4) {
				var i = _g++;
				this.kyoku.member[i].not_shojun = 1;
				this.kyoku.member[i].ippatsu_f = 0;
			}
		}
		var pai = this.pais[this.kyoku.pn].pai;
		this.kyoku.member[who].anpai[pai] = 1;
		var _g1 = 0;
		while(_g1 < 4) {
			var i1 = _g1++;
			this.kyoku.member[i1].minoga[pai] = 1;
			if(this.kyoku.member[i1].reach_f != 0) {
				this.kyoku.member[i1].anpai[pai] = 1;
			}
		}
	}
	,flag_reach: function() {
		var who = this.kyoku.who_act;
		if(this.kyoku.member[who].reach_start > 0) {
			if(this.kyoku.reaction.code != "ACT_RONHO") {
				this.kyoku.member[who].reach_f = 1;
				this.kyoku.member[who].ippatsu_f = 1;
				this.kyoku.member[who].reach_start = 0;
			} else {
				this.set_reabo(who,0);
			}
		}
	}
	,flag_reaction: function() {
		this.kyoku.chankan_f = 0;
		if(this.kyoku.reaction.code == "ACT_CHI" || this.kyoku.reaction.code == "ACT_PON" || this.kyoku.reaction.code == "ACT_MINKAN") {
			this.kyoku.member[this.kyoku.who_react].furo_f = 1;
			var _g = 0;
			while(_g < 4) {
				var i = _g++;
				this.kyoku.member[i].not_shojun = 1;
				this.kyoku.member[i].ippatsu_f = 0;
			}
		}
		var _g1 = 0;
		while(_g1 < 4) {
			var i1 = _g1++;
			if(this.kyoku.member[i1].ra.ron_ok > 0) {
				this.kyoku.member[i1].minogasi_f = 1;
				if(this.kyoku.member[i1].reach_f > 0) {
					this.kyoku.member[i1].minogasi_r_f = 1;
				}
			}
		}
	}
	,sufu_check: function() {
		var _g = 0;
		while(_g < 4) if(this.kyoku.member[_g++].mota_c != 1) {
			return 0;
		}
		var pai = 0;
		var _g1 = 0;
		while(_g1 < 40) {
			var i = _g1++;
			if(this.kyoku.member[0].sute[i] > 0) {
				pai = i;
			}
		}
		if(pai < 31 || pai > 34) {
			return 0;
		}
		var _g2 = 0;
		while(_g2 < 4) if(this.kyoku.member[_g2++].sute[pai] == 0) {
			return 0;
		}
		return 1;
	}
	,next_mota: function() {
		if(this.kyoku.reaction.code == "ACT_CHI" || this.kyoku.reaction.code == "ACT_PON") {
			this.kyoku.tumoaction.code = "ACT_AFTERNAKI";
			this.kyoku.who_act = this.kyoku.who_react;
		} else if(this.kyoku.reaction.code == "ACT_MINKAN") {
			this.kyoku.tumoaction.code = "ACT_RINSHAN";
			this.kyoku.who_act = this.kyoku.who_react;
		} else if(this.kyoku.reaction.code == "ACT_AFTERKAN") {
			this.kyoku.tumoaction.code = "ACT_RINSHAN";
		} else {
			this.kyoku.tumoaction.code = "ACT_TUMO";
			this.kyoku.who_act = (this.kyoku.who_act + 1) % 2;
		}
	}
	,judge_reaction: function() {
		var who;
		this.kyoku.reaction.code = "ACT_AFTERSUTE";
		var _g = 1;
		while(_g < 2) {
			who = (this.kyoku.who_act + _g++) % 2;
			if(this.kyoku.member[who].reaction.code == "ACT_RONHO") {
				this.kyoku.who_react = who;
				this.kyoku.copy_reaction(who);
				return;
			}
		}
		if(this.kyoku.action.code == "ACT_ANKAN" || this.kyoku.action.code == "ACT_KAKAN") {
			this.kyoku.reaction.code = "ACT_AFTERKAN";
			return;
		}
		var _g1 = 1;
		while(_g1 < 2) {
			who = (this.kyoku.who_act + _g1++) % 2;
			if(this.kyoku.member[who].reaction.code == "ACT_PON" || this.kyoku.member[who].reaction.code == "ACT_MINKAN") {
				this.kyoku.who_react = who;
				this.kyoku.copy_reaction(who);
				return;
			}
		}
		who = (this.kyoku.who_act + 1) % 2;
		if(this.kyoku.member[who].reaction.code == "ACT_CHI") {
			this.kyoku.who_react = who;
			this.kyoku.copy_reaction(who);
		}
	}
	,init_taku: function() {
		var pn;
		var _g1 = 0;
		var _g = this.PN_MAX;
		while(_g1 < _g) {
			var i = _g1++;
			this.pais[i].pai = 0;
			this.pais[i].stat = 0;
			this.pais[i].dr = 0;
			this.pais[i].up = 0;
		}
		var _g11 = 0;
		var _g2 = this.PN_MAX;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this.opos[i1].px = 0;
			this.opos[i1].py = 0;
		}
		var _g12 = 0;
		var _g3 = this.PN_MAX;
		while(_g12 < _g3) {
			var i2 = _g12++;
			this.ppos[i2].bx = 0;
			this.ppos[i2].by = 0;
			this.ppos[i2].pat = 0;
		}
		var _g4 = 0;
		while(_g4 < 14) {
			var i3 = _g4++;
			pn = this.PN_TE(0) + i3;
			this.opos[pn].px = 22 + i3 * this.PAI_W1;
			this.opos[pn].py = 270;
			pn = this.PN_TE(1) + i3;
			this.opos[pn].px = 560 - i3 * this.PAI_W1;
			this.opos[pn].py = 22;
			pn = this.PN_TE(2) + i3;
			this.opos[pn].px = 778 - i3 * 48;
			this.opos[pn].py = 21;
			pn = this.PN_TE(3) + i3;
			this.opos[pn].px = 12;
			this.opos[pn].py = 70 + i3 * 32;
		}
		var xp = 0;
		var _g5 = 0;
		while(_g5 < 30) {
			var i4 = _g5++;
			pn = this.PN_SUTE(0) + i4;
			this.opos[pn].px = 350 + xp * this.PAI_W1;
			this.opos[pn].py = 200;
			pn = this.PN_SUTE(1) + i4;
			this.opos[pn].px = 500 - xp * this.PAI_W1;
			this.opos[pn].py = 102;
			pn = this.PN_SUTE(2) + i4;
			this.opos[pn].px = 606 - xp * 48;
			this.opos[pn].py = 166;
			pn = this.PN_SUTE(3) + i4;
			this.opos[pn].px = 230;
			this.opos[pn].py = 216 + xp * 33;
			++xp;
		}
		var _g6 = 0;
		while(_g6 < 10) {
			var i5 = _g6++;
			pn = this.PN_DORA + i5;
			this.opos[pn].px = 78 + Math.floor(i5 / 2) * 48;
			this.opos[pn].py = 100;
		}
		var _g7 = 0;
		while(_g7 < 36) {
			var i6 = _g7++;
			pn = this.PN_YAMA + i6;
			this.opos[pn].px = 800 - Math.floor(i6 / 2) * this.PAI_W1;
			this.opos[pn].py = 140;
		}
		var _g8 = 0;
		while(_g8 < 4) {
			var i7 = _g8++;
			var dr = i7 * 2 % 4;
			var _g13 = 0;
			while(_g13 < 14) {
				var j = _g13++;
				this.pais[this.PN_TE(i7) + j].dr = dr;
			}
			var _g14 = 0;
			while(_g14 < 30) {
				var j1 = _g14++;
				this.pais[this.PN_SUTE(i7) + j1].dr = dr;
			}
			var _g15 = 0;
			while(_g15 < 16) {
				var j2 = _g15++;
				this.pais[this.PN_NAKI(i7) + j2].dr = dr;
			}
		}
		var rx = [474,638,380,302];
		var ry = [338,250,242,262];
		var _g9 = 0;
		while(_g9 < 4) {
			var i8 = _g9++;
			this.rpos[i8].exist = 0;
			this.rpos[i8].bx = rx[i8];
			this.rpos[i8].by = ry[i8];
			this.rpos[i8].w = i8 % 2 == 0?120:20;
			this.rpos[i8].h = i8 % 2 == 0?20:100;
			this.rpos[i8].sx = i8 % 2 == 0?740:720;
			this.rpos[i8].sy = 440;
		}
		var dx = [370,610,500,322];
		var dy = [332,282,236,242];
		var ax = 20;
		var ay = 0;
		if(this.hanchan.oya % 2 > 0) {
			ax = 0;
			ay = 16;
		}
		var _g10 = 0;
		while(_g10 < 2) {
			var i9 = _g10++;
			this.dpos[i9].x = dx[this.hanchan.oya] + ax * i9;
			this.dpos[i9].y = dy[this.hanchan.oya] + ay * i9;
			this.dpos[i9].sx = 200 + this.kyoku.dice[i9] * 30;
			this.dpos[i9].sy = 510;
		}
		this.hpos.x = 480 - Math.floor((30 + (this.hanchan.horyu + this.hanchan.honba - 1) * 12) / 2);
		if(this.hanchan.horyu > 0 && this.hanchan.honba > 0) {
			this.hpos.x -= 3;
		}
		this.hpos.y = 282;
		var tx = [100,100,500,400];
		var ty = [200,100,256,282];
		var _g16 = 0;
		while(_g16 < 4) {
			var i10 = _g16++;
			this.tpos[i10].x = tx[i10];
			this.tpos[i10].y = ty[i10];
		}
	}
	,set_ppos: function() {
		var _g1 = 0;
		var _g = this.PN_MAX;
		while(_g1 < _g) {
			var pn = _g1++;
			var pai = this.pais[pn].pai;
			if(pai == 0) {
				this.ppos[pn].pat = 0;
				continue;
			}
			var num = pai % 10;
			Math.floor(pai / 10);
			var sx = 0;
			var sy = 0;
			var w = 0;
			var h = 0;
			var bx = this.opos[pn].px;
			var by = this.opos[pn].py;
			var st = 0;
			if(this.tepai_open != 0) {
				if(this.pais[pn].stat == this.PS_TACHI) {
					this.pais[pn].stat = this.PS_OMO;
				}
			}
			switch(this.pais[pn].dr) {
			case 0:
				w = this.PAI_W1;
				h = this.PAI_H1;
				st = 0;
				switch(this.pais[pn].stat) {
				case 0:
					sx = num * w;
					sy = 0;
					break;
				case 1:
					sx = 0;
					sy = 0;
					break;
				case 2:
					by += 10;
					sx = num * w;
					sy = 0;
					break;
				case 3:
					by += 20;
					sx = 400;
					sy = 0;
					st = 2;
					break;
				}
				break;
			case 1:
				w = this.PAI_W2;
				h = this.PAI_H2;
				st = 1;
				switch(this.pais[pn].stat) {
				case 0:
					sx = num * w;
					sy = 80;
					break;
				case 1:
					sx = 0;
					sy = 80;
					break;
				case 2:
					sx = num * w;
					sy = 80;
					break;
				case 3:
					bx += 0;
					sx = 0;
					sy = 80;
					break;
				}
				break;
			case 2:
				w = this.PAI_W1;
				h = this.PAI_H1;
				st = 0;
				switch(this.pais[pn].stat) {
				case 0:
					sx = num * w;
					sy = 0;
					break;
				case 1:
					sx = 0;
					sy = 0;
					break;
				case 2:
					by += 0;
					sx = 440;
					sy = 0;
					st = 2;
					break;
				case 3:
					by -= 0;
					sx = 0;
					sy = 0;
					break;
				}
				break;
			case 3:
				w = this.PAI_W2;
				h = this.PAI_H2;
				st = 1;
				switch(this.pais[pn].stat) {
				case 0:
					sx = num * w;
					sy = 80;
					break;
				case 1:
					sx = 0;
					sy = 80;
					break;
				case 2:
					sx = num * w;
					sy = 80;
					break;
				case 3:
					bx += 0;
					sx = 0;
					sy = 80;
					break;
				}
				break;
			}
			if(this.pais[pn].up != 0) {
				--bx;
				by -= 2;
			}
			this.ppos[pn].bx = bx;
			this.ppos[pn].by = by;
			this.ppos[pn].sx = sx;
			this.ppos[pn].sy = sy;
			this.ppos[pn].w = w;
			this.ppos[pn].h = h;
			var sbx = 0;
			var sby = 0;
			var sw = 0;
			var sh = 0;
			var ssx = 0;
			switch(st) {
			case 0:
				sbx = -12;
				sby = -12;
				sw = 51;
				sh = 66;
				ssx = 520;
				break;
			case 1:
				sbx = -12;
				sby = -12;
				sw = 66;
				sh = 51;
				ssx = 580;
				break;
			case 2:
				sbx = -20;
				sby = -20;
				sw = 60;
				sh = 55;
				ssx = 660;
				break;
			case 3:
				sbx = 0;
				sby = 44;
				sw = 55;
				sh = 35;
				ssx = 240;
				break;
			}
			this.ppos[pn].sbx = this.ppos[pn].bx + sbx;
			this.ppos[pn].sby = this.ppos[pn].by + sby;
			this.ppos[pn].ssx = ssx;
			this.ppos[pn].ssy = 0;
			this.ppos[pn].sw = sw;
			this.ppos[pn].sh = sh;
		}
	}
	,set_prio: function() {
		var _g1 = 0;
		var _g = this.PN_MAX;
		while(_g1 < _g) {
			var i = _g1++;
			this.prio[i] = i;
		}
		var _g11 = 0;
		var _g2 = this.PN_MAX - 1;
		while(_g11 < _g2) {
			var i1 = _g11++;
			var _g3 = i1 + 1;
			var _g21 = this.PN_MAX;
			while(_g3 < _g21) {
				var j = _g3++;
				var pn1 = this.prio[i1];
				var pn2 = this.prio[j];
				if(this.ppos[pn1].by + this.pais[pn1].up * 50 > this.ppos[pn2].by + this.pais[pn2].up * 50) {
					var tmp = this.prio[i1];
					this.prio[i1] = this.prio[j];
					this.prio[j] = tmp;
				}
			}
		}
	}
	,draw_taku: function() {
		this.io.cls();
		this.io.set_blur(2,-2,-2);
		var _g1 = 0;
		var _g = this.PN_MAX;
		
		while(_g1 < _g) {
			var i = _g1++;
			if(this.pais[i].pai == 0) {
				continue;
			}
			if(i == this.shiver.pn && !this.shiver.visible) {
				continue;
			}
			this.io.copy_pat(this.ppos[i].ssx,this.ppos[i].ssy,this.ppos[i].sw,this.ppos[i].sh,this.ppos[i].sbx,this.ppos[i].sby);
		}
		this.io.end_blur();
		var _g2 = 0;
		while(_g2 < 4) {
			var i1 = _g2++;
			if(this.rpos[i1].exist == 0) {
				continue;
			}
			this.io.copy_pat(this.rpos[i1].sx,this.rpos[i1].sy,this.rpos[i1].w,this.rpos[i1].h,this.rpos[i1].bx,this.rpos[i1].by);
		}
		var o = this.hanchan.deoya;
		var a = this.hanchan.deoya * 2 + (this.hanchan.kyoku_c < 4?0:1);
		this.io.copy_pat(this.cpat[a].sx,this.cpat[a].sy,this.cpat[a].w,this.cpat[a].h,this.cpos[o].x,this.cpos[o].y);
		if(this.posline) {
			if(this.selected_pai >= 0) {
				var pn = this.selected_pai;
				this.io.draw_rect(this.ppos[pn].bx,this.ppos[pn].by + 20,this.PAI_W1,300,"#ffffff",0.2,false);
			}
		}
		var _g11 = 0;
		var _g3 = this.PN_MAX;
		while(_g11 < _g3) {
			var pn1 = this.prio[_g11++];
			if(this.pais[pn1].pai == 0) {
				continue;
			}
			if(pn1 == this.shiver.pn && !this.shiver.visible) {
				continue;
			}
			this.io.copy_pat(this.ppos[pn1].sx,this.ppos[pn1].sy,this.ppos[pn1].w,this.ppos[pn1].h,this.ppos[pn1].bx,this.ppos[pn1].by);
		}
		if(this.tendisp) {
			var _g4 = 0;
			while(_g4 < 2) {
				var i2 = _g4++;
				this.io.draw_text(this.tpos[i2].x,this.tpos[i2].y,"" + this.hanchan.pt[i2].tenbo,20,"#ffff00",false,"right","top");
				if(i2 == this.hanchan.oya) {
					this.io.under_line(this.tpos[i2].x,this.tpos[i2].y + 2,"" + this.hanchan.pt[i2].tenbo,20,"#ffff00");
				}
			}
		}
		this.draw_button();
		if(this.message.style == 2) {
			this.io.draw_rect(0,this.message.oy - this.message.h,this.io.view.w,this.message.h * 2,"#000000",0.8,false);
			this.io.draw_text(this.io.view.w / 2,this.message.oy,this.message.txt,24,"#ffffff",false,"center","middle");
		}
		if(this.message.style == 3) {
			this.io.draw_text(this.io.view.w / 2,this.message.oy,this.message.txt,24,"#ffffff",false,"center","middle");
		}
	}
	,draw_button: function() {
		var _g1 = 0;
		var _g = this.buttonmax;
		while(_g1 < _g) {
			var i = _g1++;
			if(!this.button[i].exist) {
				continue;
			}
			var x = this.button[i].x;
			var y = this.button[i].y;
			var w = this.button[i].w;
			var h = this.button[i].h;
			this.io.roundrect(x,y,w,h,6,i != this.activebutton?"#dddddd":"#ffffff",1,true);
			this.io.draw_text(x + Math.floor(w / 2),y + Math.floor(h / 2),this.button[i].txt,24,"#000000",false,"center","middle");
		}
	}
	,set_reabo: function(who,f) {
		this.rpos[who].exist = f;
	}
	,tumopai_remove: function(who) {
		var pn = this.PN_TE(who) + this.get_pais_tepai_c(who);
		var px = 0;
		var py = 0;
		switch(who) {
		case 0:
			px = this.PAI_W1 + 10;
			py = 0;
			break;
		case 1:
			px = -(this.PAI_W1 + 10);
			py = 0;
			break;
		case 2:
			px = -56;
			py = 0;
			break;
		case 3:
			px = 0;
			py = 41;
			break;
		}
		if(this.opos[pn].px != this.opos[pn - 1].px + px || this.opos[pn].py != this.opos[pn - 1].py + py) {
			this.opos[pn].px = this.opos[pn - 1].px + px;
			this.opos[pn].py = this.opos[pn - 1].py + py;
		}
		if(who == 0) {
			var n = this.get_pais_tepai_c(0);
			if(n > 0) {
				this.gpos[n].bx = this.gpos[n - 1].bx + 68 + 10;
			}
		}
	}
	,set_opos_reach: function(who) {
		var d;
		var n = this.get_pais_sute_c(who);
		var pn = this.PN_SUTE(who) + n;
		var dan = Math.floor(n / 6);
		if(dan > 2) {
			dan = 2;
		}
		this.pais[pn].dr = (this.pais[pn].dr + 1) % 4;
		if(who == 0) {
			this.opos[pn].py += Math.floor((this.PAI_H1 - this.PAI_H2) / 2);
			var _g = 0;
			while(_g < 30) {
				var i = _g++;
				if(i > n) {
					var tmp = this.PN_SUTE(who) + i;
					this.opos[tmp].px += this.PAI_W2 - this.PAI_W1;
				}
			}
		} else if(who == 1) {
			this.opos[pn].py += Math.floor((this.PAI_H1 - this.PAI_H2) / 2);
			var _g1 = 0;
			while(_g1 < 30) {
				var i1 = _g1++;
				if(i1 >= n) {
					var tmp1 = this.PN_SUTE(who) + i1;
					this.opos[tmp1].px -= this.PAI_W2 - this.PAI_W1;
				}
			}
		} else if(who == 2) {
			this.opos[pn].py += 5;
			var _g2 = 0;
			while(_g2 < 30) {
				var i2 = _g2++;
				d = Math.floor(i2 / 6);
				if(d > 2) {
					d = 2;
				}
				if(d == dan && i2 >= n) {
					this.opos[this.PN_SUTE(who) + i2].px -= 16;
				}
			}
		} else if(who == 3) {
			this.opos[pn].px += 6;
			var _g3 = 0;
			while(_g3 < 30) {
				var i3 = _g3++;
				d = Math.floor(i3 / 6);
				if(d > 2) {
					d = 2;
				}
				if(d == dan && i3 > n) {
					this.opos[this.PN_SUTE(who) + i3].py += 10;
				}
			}
		}
	}
	,ura_remove: function() {
		var _g1 = 0;
		var _g = this.kyoku.kan_c;
		while(_g1 < _g) {
			var pn = this.PN_DORA + 8 - _g1++ * 2;
			this.opos[pn].py -= 30;
			++pn;
			this.opos[pn].py += 14;
		}
	}
	,appear_pais: function(pn,pai) {
		this.pais[pn].pai = pai;
	}
	,delete_pais: function(pn) {
		var pai = this.pais[pn].pai;
		this.pais[pn].pai = 0;
		return pai;
	}
	,tepai_sort: function(who) {
		var _g = 0;
		while(_g < 13) {
			var i = _g++;
			if(this.pais[this.PN_TE(who) + i].pai == 0) {
				continue;
			}
			var _g1 = i + 1;
			while(_g1 < 14) {
				var j = _g1++;
				if(this.pais[this.PN_TE(who) + j].pai == 0) {
					continue;
				}
				var pn1 = this.PN_TE(who) + i;
				var pn2 = this.PN_TE(who) + j;
				if(this.pais[pn1].pai < this.pais[pn2].pai) {
					continue;
				}
				var tmp = this.pais[pn1].pai;
				this.pais[pn1].pai = this.pais[pn2].pai;
				this.pais[pn2].pai = tmp;
			}
		}
	}
	,tepai_press: function(who) {
		var _g = 0;
		while(_g < 13) {
			var i = _g++;
			var pn1 = this.PN_TE(who) + i;
			if(this.pais[pn1].pai > 0) {
				continue;
			}
			var f = 0;
			var _g1 = i + 1;
			while(_g1 < 14) {
				var j = _g1++;
				var pn2 = this.PN_TE(who) + j;
				if(f > 0) {
					continue;
				}
				if(this.pais[pn2].pai == 0) {
					continue;
				}
				var tmp = this.pais[pn1].pai;
				this.pais[pn1].pai = this.pais[pn2].pai;
				this.pais[pn2].pai = tmp;
				f = 1;
			}
		}
	}
	,appear_sarasi_pai: function(who,max,dr) {
		var pn;
		var ox;
		var oy;
		var smn = 0;
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			pn = this.PN_NAKI(who) + i * 4;
			if(this.pais[pn].pai == 0) {
				smn = i;
				break;
			}
		}
		var ws = this.PAI_W1 * 3;
		if(who == 0) {
			ox = 500 - smn * ws;
			var _g1 = 0;
			while(_g1 < 3) {
				var i1 = _g1++;
				pn = this.PN_NAKI(who) + smn * 4 + i1;
				this.opos[pn].px = ox + i1 * this.PAI_W1;
				this.opos[pn].py = 300;
			}
			pn = this.PN_NAKI(who) + smn * 4 + 3;
			this.opos[pn].px = ox + Math.floor((this.PAI_W1 * 3 - this.PAI_W2) / 2);
			this.opos[pn].py = 300 - this.PAI_H2;
		} else if(who == 1) {
			ox = 10 + this.PAI_W1 * 2 + smn * ws;
			var _g2 = 0;
			while(_g2 < 3) {
				var i2 = _g2++;
				pn = this.PN_NAKI(who) + smn * 4 + i2;
				this.opos[pn].px = ox - i2 * this.PAI_W1;
				this.opos[pn].py = 2;
			}
			pn = this.PN_NAKI(who) + smn * 4 + 3;
			this.opos[pn].px = ox - this.PAI_W1 * 2 + Math.floor((this.PAI_W1 * 3 - this.PAI_W2) / 2);
			this.opos[pn].py = 2 + this.PAI_H1;
		} else if(who == 2) {
			ox = 168 + smn * ws;
			var _g3 = 0;
			while(_g3 < 3) {
				var i3 = _g3++;
				pn = this.PN_NAKI(who) + smn * 4 + i3;
				this.opos[pn].px = ox - i3 * 48;
				this.opos[pn].py = 2;
				if(i3 >= dr) {
					this.opos[pn].px -= 16;
				}
			}
			pn = this.PN_NAKI(who) + smn * 4 + 3;
			this.opos[pn].px = this.opos[pn - 3 + dr].px;
			this.opos[pn].py = this.opos[pn - 3 + dr].py + 33;
		} else if(who == 3) {
			ox = 2;
			oy = 495 - smn * 108;
			var _g4 = 0;
			while(_g4 < 3) {
				var i4 = _g4++;
				pn = this.PN_NAKI(who) + smn * 4 + i4;
				this.opos[pn].px = 2;
				this.opos[pn].py = oy + i4 * 32;
				if(i4 > dr) {
					this.opos[pn].py += 12;
				}
			}
			pn = this.PN_NAKI(who) + smn * 4 + 3;
			this.opos[pn].px = this.opos[pn - 3 + dr].px + 48;
			this.opos[pn].py = this.opos[pn - 3 + dr].py;
		}
		var _g5 = 0;
		while(_g5 < 4) {
			var i5 = _g5++;
			if(i5 == 3) {
				pn = this.PN_NAKI(who) + smn * 4 + i5;
				this.pais[pn].dr = ++this.pais[pn].dr % 4;
			}
		}
		var _g11 = 0;
		while(_g11 < max) {
			var i6 = _g11++;
			this.appear_pais(this.PN_NAKI(who) + smn * 4 + i6,this.kyoku.kpai[i6]);
		}
		return smn;
	}
	,get_pais_pai: function(pn) {
		return this.pais[pn].pai;
	}
	,get_pais_tepai_c: function(who) {
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			if(this.pais[this.PN_TE(who) + i].pai == 0) {
				return i;
			}
		}
		return 13;
	}
	,get_pais_tepai_max: function(who) {
		var n = 0;
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			if(this.pais[this.PN_TE(who) + i].pai > 0) {
				n = i;
			}
		}
		return n;
	}
	,get_pais_sute_c: function(who) {
		var _g = 0;
		while(_g < 30) {
			var i = _g++;
			if(this.pais[this.PN_SUTE(who) + i].pai == 0) {
				return i;
			}
		}
		return 0;
	}
	,get_pais_tepai: function(who) {
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			var pn = this.PN_TE(who) + i;
			this.kyoku.member[who].tepai[i] = this.pais[pn].pai;
		}
	}
	,get_pais_sments: function(who) {
		var _g = 0;
		while(_g < 7) this.kyoku.member[who].s_ments[_g++] = new Ments();
		var pai = 0;
		var _g1 = 0;
		while(_g1 < 4) {
			var smn = _g1++;
			var opn = this.PN_NAKI(who) + smn * 4;
			if(this.pais[opn].pai == 0) {
				break;
			}
			var opai = 9999;
			var _g11 = 0;
			while(_g11 < 4) {
				pai = this.pais[opn + _g11++].pai;
				if(pai > 0) {
					if(pai < opai) {
						opai = pai;
					}
				}
			}
			this.kyoku.member[who].s_ments[smn].pai = opai;
			var at = 6;
			var _g12 = 0;
			while(_g12 < 4) {
				pai = this.pais[opn + _g12++].pai;
				if(pai > 0) {
					if(pai != opai) {
						at = 5;
					}
				}
			}
			if(this.pais[opn + 3].pai > 0) {
				at = 4;
				if(this.pais[opn].stat == this.PS_OMO) {
					at = 7;
				}
			}
			this.kyoku.member[who].s_ments[smn].at = at;
		}
	}
	,get_pon_smn: function(who,pai) {
		var _g = 0;
		while(_g < 4) {
			var smn = _g++;
			var pn = this.PN_NAKI(who) + smn * 4;
			if(this.pais[pn].pai == 0) {
				return 0;
			}
			if(this.pais[pn].pai == pai && this.pais[pn + 1].pai == pai) {
				return smn;
			}
		}
		return 0;
	}
	,get_pais_mie: function(who) {
		var pn;
		var p;
		var _g = 0;
		while(_g < 40) this.kyoku.member[who].mie[_g++] = 0;
		var _g1 = 0;
		while(_g1 < 14) {
			var i = _g1++;
			pn = this.PN_TE(who) + i;
			p = this.pais[pn].pai;
			if(p > 0) {
				this.kyoku.member[who].mie[p]++;
			}
		}
		var _g2 = 0;
		while(_g2 < 4) {
			var j = _g2++;
			var _g11 = 0;
			while(_g11 < 16) {
				var i1 = _g11++;
				pn = this.PN_NAKI(j) + i1;
				p = this.pais[pn].pai;
				if(p > 0) {
					this.kyoku.member[who].mie[p]++;
				}
			}
			var _g12 = 0;
			while(_g12 < 30) {
				var i2 = _g12++;
				pn = this.PN_SUTE(j) + i2;
				p = this.pais[pn].pai;
				if(p > 0) {
					this.kyoku.member[who].mie[p]++;
				}
			}
		}
		var _g3 = 0;
		while(_g3 < 10) {
			pn = this.PN_DORA + _g3++;
			if(this.pais[pn].stat != this.PS_OMO) {
				continue;
			}
			p = this.pais[pn].pai;
			if(p > 0) {
				this.kyoku.member[who].mie[p]++;
			}
		}
	}
	,pais_dead_pai: function(pai) {
		var pn;
		var c = 0;
		var _g = 0;
		while(_g < 4) {
			var j = _g++;
			var _g1 = 0;
			while(_g1 < 16) {
				var i = _g1++;
				pn = this.PN_NAKI(j) + i;
				if(this.pais[pn].pai > 0) {
					if(pai == this.pais[pn].pai) {
						++c;
					}
				}
			}
			var _g11 = 0;
			while(_g11 < 30) {
				var i1 = _g11++;
				pn = this.PN_SUTE(j) + i1;
				if(this.pais[pn].pai > 0) {
					if(pai == this.pais[pn].pai) {
						++c;
					}
				}
			}
		}
		var _g2 = 0;
		while(_g2 < 10) {
			pn = this.PN_DORA + _g2++;
			if(this.pais[pn].pai > 0 && this.pais[pn].stat == this.PS_OMO) {
				if(pai == this.pais[pn].pai) {
					++c;
				}
			}
		}
		if(c >= 3) {
			return 1;
		} else {
			return 0;
		}
	}
	,pais_sukan_check: function() {
		var c = 0;
		var _g = 0;
		while(_g < 4) {
			var j = _g++;
			var mc = 0;
			var _g1 = 0;
			while(_g1 < 4) {
				var i = _g1++;
				if(this.pais[this.PN_NAKI(j) + i * 4 + 3].pai > 0) {
					++c;
					++mc;
				}
			}
			if(mc == 4) {
				return 2;
			}
		}
		if(c >= 4) {
			return 1;
		} else {
			return 0;
		}
	}
	,add_tumo_pos: function(pos,a) {
		return (pos + 136 + a) % 136;
	}
	,yakupai: function(pai,bakaze,jikaze) {
		var a = 0;
		var s = Math.floor(pai / 10);
		var n = pai % 10;
		if(s == 3) {
			if(n > 4) {
				a = 1;
			}
			if(n == bakaze) {
				++a;
			}
			if(n == jikaze) {
				++a;
			}
		}
		return a;
	}
	,yaopai: function(pai) {
		var s = Math.floor(pai / 10);
		var n = pai % 10;
		if(s == 3) {
			return 1;
		}
		if(n == 1 || n == 9) {
			return 1;
		}
		return 0;
	}
	,sujipai: function(pai,enemy) {
		var s = Math.floor(pai / 10);
		var n = pai % 10;
		var e = this.kyoku.member[enemy];
		if(s == 3) {
			return 1;
		}
		if(n < 4) {
			if(e.anpai[pai + 3] > 0) {
				return 1;
			}
		}
		if(n > 6) {
			if(e.anpai[pai - 3] > 0) {
				return 1;
			}
		}
		if(n >= 4 && n <= 6) {
			if(e.anpai[pai - 3] > 0 && e.anpai[pai + 3] > 0) {
				return 1;
			}
		}
		return 0;
	}
	,kabepai: function(pai,who) {
		var s = Math.floor(pai / 10);
		var n = pai % 10;
		var m = this.kyoku.member[who];
		if(s == 3) {
			return 0;
		}
		if(n == 3) {
			if(m.mie[s * 10 + 5] >= 4) {
				return 1;
			}
		}
		if(n <= 3) {
			if(m.mie[s * 10 + n + 1] >= 4) {
				return 1;
			}
		}
		if(n <= 2) {
			if(m.mie[s * 10 + n + 2] >= 4) {
				return 1;
			}
		}
		if(n == 7) {
			if(m.mie[s * 10 + 5] >= 4) {
				return 1;
			}
		}
		if(n >= 7) {
			if(m.mie[s * 10 + n - 1] >= 4) {
				return 1;
			}
		}
		if(n >= 8) {
			if(m.mie[s * 10 + n - 2] >= 4) {
				return 1;
			}
		}
		return 0;
	}
	,one_chance: function(pai,who) {
		var s = Math.floor(pai / 10);
		var n = pai % 10;
		var m = this.kyoku.member[who];
		if(s == 3) {
			return 0;
		}
		if(n == 3) {
			if(m.mie[s * 10 + 5] >= 3) {
				return 1;
			}
		}
		if(n <= 3) {
			if(m.mie[s * 10 + n + 1] >= 3) {
				return 1;
			}
		}
		if(n <= 2) {
			if(m.mie[s * 10 + n + 2] >= 3) {
				return 1;
			}
		}
		if(n == 7) {
			if(m.mie[s * 10 + 5] >= 3) {
				return 1;
			}
		}
		if(n >= 7) {
			if(m.mie[s * 10 + n - 1] >= 3) {
				return 1;
			}
		}
		if(n >= 8) {
			if(m.mie[s * 10 + n - 2] >= 3) {
				return 1;
			}
		}
		return 0;
	}
	,sotosuji: function(pai,enemy) {
		var s = Math.floor(pai / 10);
		var n = pai % 10;
		var e = this.kyoku.member[enemy];
		if(s == 3) {
			return 0;
		}
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			if(e.sutelist[i] == 0) {
				continue;
			}
			var ss = Math.floor(e.sutelist[i] / 10);
			var nn = Math.floor(e.sutelist[i] % 10);
			if(ss == 3) {
				continue;
			}
			if(ss != s) {
				continue;
			}
			if(n == 3 && nn == 5) {
				return 1;
			}
			if(n <= 3 && nn == n + 1) {
				return 1;
			}
			if(n <= 2 && nn == n + 2) {
				return 1;
			}
			if(n == 7 && nn == 5) {
				return 1;
			}
			if(n >= 7 && nn == n - 1) {
				return 1;
			}
			if(n >= 7 && nn == n - 2) {
				return 1;
			}
		}
		return 0;
	}
	,get_dorapai: function(p) {
		var s = Math.floor(p / 10);
		var n = Math.floor(p % 10) + 1;
		if(s == 3) {
			if(n == 5) {
				n = 1;
			}
			if(n == 8) {
				n = 5;
			}
		} else if(n > 9) {
			n = 1;
		}
		return s * 10 + n;
	}
	,set_ankan_push: function(who,opai) {
		var _g = 0;
		while(_g < 14) this.kyoku.action.push[_g++] = 0;
		var c = 0;
		var _g1 = 0;
		while(_g1 < 14) {
			var i = _g1++;
			var pai = this.kyoku.member[who].tepai[i];
			if(pai == 0) {
				continue;
			}
			if(pai == opai) {
				this.kyoku.action.push[i] = 1;
				++c;
				if(c >= 4) {
					break;
				}
			}
		}
	}
	,set_pon_push: function(who) {
		var _g = 0;
		while(_g < 14) this.kyoku.member[who].reaction.push[_g++] = 0;
		var opai = this.pais[this.kyoku.pn].pai;
		var c = 0;
		var _g1 = 0;
		while(_g1 < 14) {
			var i = _g1++;
			var pai = this.kyoku.member[who].tepai[i];
			if(pai == 0) {
				continue;
			}
			if(pai == opai) {
				this.kyoku.member[who].reaction.push[i] = 1;
				++c;
				if(c >= 2) {
					break;
				}
			}
		}
	}
	,set_minkan_push: function(who) {
		var _g = 0;
		while(_g < 14) this.kyoku.member[who].reaction.push[_g++] = 0;
		var opai = this.pais[this.kyoku.pn].pai;
		var c = 0;
		var _g1 = 0;
		while(_g1 < 14) {
			var i = _g1++;
			var pai = this.kyoku.member[who].tepai[i];
			if(pai == 0) {
				continue;
			}
			if(pai == opai) {
				this.kyoku.member[who].reaction.push[i] = 1;
				++c;
				if(c >= 3) {
					break;
				}
			}
		}
	}
	,set_chil_push: function(who) {
		var _g = 0;
		while(_g < 14) this.kyoku.member[who].reaction.push[_g++] = 0;
		var opai = this.pais[this.kyoku.pn].pai;
		var n1 = 0;
		var n2 = 1;
		var pai;
		var _g1 = 0;
		while(_g1 < 14) {
			var i = _g1++;
			pai = this.kyoku.member[who].tepai[i];
			if(pai == 0) {
				continue;
			}
			if(opai + 1 == pai) {
				n1 = i;
			}
		}
		var _g2 = 0;
		while(_g2 < 14) {
			var n = 13 - _g2++;
			pai = this.kyoku.member[who].tepai[n];
			if(pai == 0) {
				continue;
			}
			if(opai + 2 == pai) {
				n2 = n;
			}
		}
		this.kyoku.member[who].reaction.push[n1] = 1;
		this.kyoku.member[who].reaction.push[n2] = 1;
	}
	,set_chim_push: function(who) {
		var _g = 0;
		while(_g < 14) this.kyoku.member[who].reaction.push[_g++] = 0;
		var opai = this.pais[this.kyoku.pn].pai;
		var n1 = 0;
		var n2 = 1;
		var pai;
		var _g1 = 0;
		while(_g1 < 14) {
			var i = _g1++;
			pai = this.kyoku.member[who].tepai[i];
			if(pai == 0) {
				continue;
			}
			if(pai + 1 == opai) {
				n1 = i;
			}
		}
		var _g2 = 0;
		while(_g2 < 14) {
			var n = 13 - _g2++;
			pai = this.kyoku.member[who].tepai[n];
			if(pai == 0) {
				continue;
			}
			if(opai + 1 == pai) {
				n2 = n;
			}
		}
		this.kyoku.member[who].reaction.push[n1] = 1;
		this.kyoku.member[who].reaction.push[n2] = 1;
	}
	,set_chih_push: function(who) {
		var _g = 0;
		while(_g < 14) this.kyoku.member[who].reaction.push[_g++] = 0;
		var opai = this.pais[this.kyoku.pn].pai;
		var n1 = 0;
		var n2 = 1;
		var pai;
		var _g1 = 0;
		while(_g1 < 14) {
			var i = _g1++;
			pai = this.kyoku.member[who].tepai[i];
			if(pai == 0) {
				continue;
			}
			if(pai + 2 == opai) {
				n1 = i;
			}
		}
		var _g2 = 0;
		while(_g2 < 14) {
			var n = 13 - _g2++;
			pai = this.kyoku.member[who].tepai[n];
			if(pai == 0) {
				continue;
			}
			if(pai + 1 == opai) {
				n2 = n;
			}
		}
		this.kyoku.member[who].reaction.push[n1] = 1;
		this.kyoku.member[who].reaction.push[n2] = 1;
	}
	,set_tepai_info_start: function(who) {
		this.get_pais_tepai(who);
		this.get_pais_sments(who);
		this.get_pais_mie(who);
		this.get_nerai_info(who);
		this.set_member_tenpai(who);
	}
	,set_tepai_info_14: function() {
		var who = this.kyoku.who_act;
		this.get_pais_tepai(who);
		this.get_pais_sments(who);
		this.get_pais_mie(who);
		this.get_nerai_info(who);
		this.set_member_tumoho(who);
		this.set_member_suteten(who);
		this.set_member_aa();
		this.set_member_dd();
	}
	,set_tepai_info_13: function() {
		var who = this.kyoku.who_act;
		this.get_pais_tepai(who);
		this.get_pais_sments(who);
		this.set_member_tenpai(who);
		this.set_member_dorapon(who);
		this.set_member_some(who);
		this.set_member_sangen(who);
		this.set_member_danger(who);
	}
	,set_tepai_info_ron: function(who) {
		this.get_pais_tepai(who);
		this.get_pais_sments(who);
		this.get_pais_mie(who);
		this.set_member_ronho(who);
	}
	,get_yakumat: function(who) {
		this.kyoku.member[who].hi.ymat.tumo_f = 0;
		this.kyoku.member[who].hi.ymat.furo_f = this.kyoku.member[who].furo_f;
		this.kyoku.member[who].hi.ymat.reach_f = 0;
		if(this.kyoku.member[who].reach_f != 0) {
			this.kyoku.member[who].hi.ymat.reach_f = 1;
		}
		if(this.kyoku.member[who].reach_start != 0) {
			this.kyoku.member[who].hi.ymat.reach_f = 1;
		}
		this.kyoku.member[who].hi.ymat.double_f = this.kyoku.member[who].doubble_f;
		this.kyoku.member[who].hi.ymat.ippatsu_f = this.kyoku.member[who].ippatsu_f;
		this.kyoku.member[who].hi.ymat.shojun_f = this.kyoku.member[who].not_shojun == 0?1:0;
		this.kyoku.member[who].hi.ymat.rinshan_f = this.kyoku.rinshan_f;
		this.kyoku.member[who].hi.ymat.haitei_f = this.kyoku.haitei_f;
		this.kyoku.member[who].hi.ymat.chankan_f = this.kyoku.chankan_f;
		this.kyoku.member[who].hi.ymat.bakaze = this.kyoku.bakaze;
		this.kyoku.member[who].hi.ymat.jikaze = this.kyoku.jikaze[who];
	}
	,set_member_tumoho: function(who) {
		this.kyoku.member[who].hi = new Horainfo();
		this.get_yakumat(who);
		this.kyoku.member[who].hi.ymat.tumo_f = 1;
		var _g = 0;
		while(_g < 14) {
			var pai = this.kyoku.member[who].tepai[_g++];
			if(pai > 0) {
				this.kyoku.member[who].hi.tt[pai]++;
				this.kyoku.member[who].hi.a_pai = pai;
			}
		}
		var _g1 = 0;
		while(_g1 < 4) {
			var i = _g1++;
			this.kyoku.member[who].hi.s_ments[i].pai = this.kyoku.member[who].s_ments[i].pai;
			this.kyoku.member[who].hi.s_ments[i].at = this.kyoku.member[who].s_ments[i].at;
		}
		var _g2 = 0;
		while(_g2 < 10) {
			var i1 = _g2++;
			this.kyoku.member[who].hi.dora[i1] = this.kyoku.dora[i1];
		}
		this.kyoku.member[who].hi.CheckHora();
	}
	,set_member_ronho: function(who) {
		var pai = 0;
		this.kyoku.member[who].hi = new Horainfo();
		this.get_yakumat(who);
		var _g = 0;
		while(_g < 14) {
			pai = this.kyoku.member[who].tepai[_g++];
			if(pai > 0) {
				this.kyoku.member[who].hi.tt[pai]++;
			}
		}
		pai = this.pais[this.kyoku.pn].pai;
		this.kyoku.member[who].hi.tt[pai]++;
		this.kyoku.member[who].hi.a_pai = pai;
		var _g1 = 0;
		while(_g1 < 4) {
			var i = _g1++;
			this.kyoku.member[who].hi.s_ments[i].pai = this.kyoku.member[who].s_ments[i].pai;
			this.kyoku.member[who].hi.s_ments[i].at = this.kyoku.member[who].s_ments[i].at;
		}
		var _g2 = 0;
		while(_g2 < 10) {
			var i1 = _g2++;
			this.kyoku.member[who].hi.dora[i1] = this.kyoku.dora[i1];
		}
		this.kyoku.member[who].hi.CheckHora();
	}
	,set_member_tenpai: function(who) {
		this.kyoku.member[who].tenpai = new Tenpai();
		this.kyoku.member[who].tenpai.ymat.furo_f = this.kyoku.member[who].furo_f;
		this.kyoku.member[who].tenpai.ymat.reach_f = this.kyoku.member[who].reach_f;
		this.kyoku.member[who].tenpai.ymat.bakaze = this.kyoku.bakaze;
		this.kyoku.member[who].tenpai.ymat.jikaze = this.kyoku.jikaze[who];
		var _g = 0;
		while(_g < 14) {
			var pai = this.kyoku.member[who].tepai[_g++];
			if(pai > 0) {
				this.kyoku.member[who].tenpai.tt[pai]++;
			}
		}
		var _g1 = 0;
		while(_g1 < 4) {
			var i = _g1++;
			this.kyoku.member[who].tenpai.s_ments[i].pai = this.kyoku.member[who].s_ments[i].pai;
			this.kyoku.member[who].tenpai.s_ments[i].at = this.kyoku.member[who].s_ments[i].at;
		}
		var _g2 = 0;
		while(_g2 < 10) {
			var i1 = _g2++;
			this.kyoku.member[who].tenpai.dora[i1] = this.kyoku.dora[i1];
		}
		var _g3 = 0;
		while(_g3 < 40) {
			var i2 = _g3++;
			this.kyoku.member[who].tenpai.sute[i2] = this.kyoku.member[who].sute[i2];
			this.kyoku.member[who].tenpai.mie[i2] = this.kyoku.member[who].mie[i2];
		}
		this.kyoku.member[who].tenpai.CheckTenpai();
	}
	,set_member_suteten: function(who) {
		this.kyoku.member[who].sttn = new Suteten();
		this.kyoku.member[who].sttn.ymat.furo_f = this.kyoku.member[who].furo_f;
		this.kyoku.member[who].sttn.ymat.reach_f = this.kyoku.member[who].reach_f;
		this.kyoku.member[who].sttn.ymat.bakaze = this.kyoku.bakaze;
		this.kyoku.member[who].sttn.ymat.jikaze = this.kyoku.jikaze[who];
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			this.kyoku.member[who].sttn.tepai[i] = this.kyoku.member[who].tepai[i];
		}
		var _g1 = 0;
		while(_g1 < 4) {
			var i1 = _g1++;
			this.kyoku.member[who].sttn.s_ments[i1].pai = this.kyoku.member[who].s_ments[i1].pai;
			this.kyoku.member[who].sttn.s_ments[i1].at = this.kyoku.member[who].s_ments[i1].at;
		}
		var _g2 = 0;
		while(_g2 < 10) {
			var i2 = _g2++;
			this.kyoku.member[who].sttn.dora[i2] = this.kyoku.dora[i2];
		}
		var _g3 = 0;
		while(_g3 < 40) {
			var i3 = _g3++;
			this.kyoku.member[who].sttn.sute[i3] = this.kyoku.member[who].sute[i3];
			this.kyoku.member[who].sttn.mie[i3] = this.kyoku.member[who].mie[i3];
		}
		this.kyoku.member[who].sttn.CheckSuteten();
	}
	,set_member_pv: function(who) {
		var m = this.kyoku.member[who];
		this.pvmat.init();
		this.pvmat.nerai = m.nerai;
		this.pvmat.junme = m.mota_c;
		this.pvmat.bakaze = this.kyoku.bakaze;
		this.pvmat.jikaze = this.kyoku.jikaze[who];
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			this.pvmat.tepai[i] = m.tepai[i];
		}
		var _g1 = 0;
		while(_g1 < 10) {
			var i1 = _g1++;
			this.pvmat.dora[i1] = this.kyoku.dora[i1];
		}
		var _g2 = 0;
		while(_g2 < 40) {
			var i2 = _g2++;
			this.pvmat.mie[i2] = m.mie[i2];
		}
		var _g3 = 0;
		while(_g3 < 40) {
			var i3 = _g3++;
			this.pvmat.sute[i3] = m.sute[i3];
		}
		var _g4 = 0;
		while(_g4 < 4) {
			var i4 = _g4++;
			this.pvmat.s_ments[i4].pai = this.kyoku.member[who].s_ments[i4].pai;
			this.pvmat.s_ments[i4].at = this.kyoku.member[who].s_ments[i4].at;
		}
		this.set_pai_value();
		var _g5 = 0;
		while(_g5 < 14) {
			var i5 = _g5++;
			this.kyoku.member[who].pv[i5] = this.pvwork.pv[i5];
		}
	}
	,set_member_dorapon: function(who) {
		var p;
		var dt = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var _g = 0;
		while(_g < 5) {
			p = this.kyoku.dora[_g++];
			if(p > 0) {
				dt[p]++;
			}
		}
		var _g1 = 0;
		while(_g1 < 5) {
			var i = _g1++;
			p = this.kyoku.member[who].s_ments[i].pai;
			if(p == 0) {
				continue;
			}
			var at = this.kyoku.member[who].s_ments[i].at;
			if(at == 4 || at == 6 || at == 7) {
				if(dt[p] > 0) {
					this.kyoku.member[who].dorapon = 1;
				}
			}
		}
	}
	,set_member_some: function(who) {
		var m = this.kyoku.member[who];
		if(m.mota_c == 6) {
			var _g = 1;
			while(_g < 38) {
				var p = _g++;
				var suit = Math.floor(p / 10);
				this.kyoku.member[who].sc6[suit] += this.kyoku.member[who].sute[p];
			}
		}
		if(this.kyoku.member[who].mota_c < 10) {
			return;
		}
		var min = 999;
		var _g1 = 0;
		while(_g1 < 3) {
			var s = _g1++;
			var c = 0;
			var _g11 = 1;
			while(_g11 < 10) c += this.kyoku.member[who].sute[s * 10 + _g11++];
			if(c < min) {
				this.kyoku.member[who].some_suit = s;
				min = c;
			}
		}
		var naki = 0;
		var not_suit = 0;
		var suit_naki = 0;
		var _g2 = 0;
		while(_g2 < 5) {
			var pai = this.kyoku.member[who].s_ments[_g2++].pai;
			if(pai == 0) {
				continue;
			}
			naki = 1;
			var suit1 = Math.floor(pai / 10);
			if(suit1 < 3 && suit1 != this.kyoku.member[who].some_suit) {
				not_suit = 1;
			}
		}
		if(naki > 0 && not_suit == 0) {
			suit_naki = 1;
		}
		if(suit_naki > 0 && this.kyoku.member[who].not_some == 0 && this.kyoku.member[who].sc6[m.some_suit] == 0) {
			this.kyoku.member[who].some = 1;
		}
		if(not_suit > 0) {
			this.kyoku.member[who].some = 0;
		}
		var amari = 0;
		var _g3 = 1;
		while(_g3 < 10) if(m.sute[m.some_suit * 10 + _g3++] > 0) {
			amari = 1;
		}
		if(amari > 0) {
			var push_n = 0;
			var _g4 = 0;
			while(_g4 < 14) {
				var i = _g4++;
				if(this.kyoku.action.push[i] > 0) {
					push_n = i;
					break;
				}
			}
			if(push_n != this.get_pais_tepai_c(who)) {
				var suit2 = Math.floor(this.pais[this.kyoku.pn].pai / 10);
				if(suit2 < 3 && suit2 != m.some_suit) {
					this.kyoku.member[who].not_some = 1;
					this.kyoku.member[who].some = 0;
				}
			}
		}
	}
	,set_member_sangen: function(who) {
		var m = this.kyoku.member[who];
		var sangen_c = 0;
		var susi_c = 0;
		var naki = [0,0,0,0,0,0,0,0,0,0];
		var _g = 0;
		while(_g < 5) {
			var i = _g++;
			var pai = m.s_ments[i].pai;
			if(pai == 0) {
				continue;
			}
			var at = m.s_ments[i].at;
			if(at == 4 || at == 6 || at == 7) {
				if(Math.floor(pai / 10) == 3) {
					var n = pai % 10;
					naki[n] = 1;
					if(n <= 4) {
						++susi_c;
					} else {
						++sangen_c;
					}
				}
			}
		}
		if(sangen_c == 2) {
			this.kyoku.member[who].shosan = 1;
			this.kyoku.never_mode = 1;
			this.kyoku.never_who = who;
			var _g1 = 5;
			while(_g1 < 8) {
				var i1 = _g1++;
				if(naki[i1] == 0) {
					this.kyoku.never_pai = 30 + i1;
				}
			}
			if(this.pais_dead_pai(this.kyoku.never_pai) > 0) {
				this.kyoku.member[who].shosan = 0;
				this.kyoku.never_mode = 0;
			}
		}
		if(sangen_c == 3) {
			this.kyoku.member[who].shosan = 0;
			this.kyoku.member[who].daisan = 1;
			this.kyoku.never_mode = 0;
		}
		if(susi_c == 3) {
			this.kyoku.member[who].shosu = 1;
			this.kyoku.never_mode = 1;
			this.kyoku.never_who = who;
			var _g2 = 1;
			while(_g2 < 5) {
				var i2 = _g2++;
				if(naki[i2] == 0) {
					this.kyoku.never_pai = 30 + i2;
				}
			}
			if(this.pais_dead_pai(this.kyoku.never_pai) > 0) {
				this.kyoku.member[who].shosu = 0;
				this.kyoku.never_mode = 0;
			}
		}
		if(susi_c == 4) {
			this.kyoku.member[who].shosu = 0;
			this.kyoku.member[who].daisu = 1;
			this.kyoku.never_mode = 0;
		}
	}
	,set_member_danger: function(who) {
		var m = this.kyoku.member[who];
		var v = 0;
		if(m.reach_f > 0 || m.reach_start > 0) {
			v = 1;
		}
		if(m.dorapon > 0) {
			v = 1;
		}
		if(m.some > 0) {
			v = 1;
		}
		if(m.daisan > 0) {
			v = 3;
		}
		if(m.daisu > 0) {
			v = 3;
		}
		this.kyoku.member[who].danger = v;
	}
	,set_member_dd: function() {
		var who = this.kyoku.who_act;
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			var _g1 = 0;
			while(_g1 < 14) this.kyoku.member[who].dd[i][_g1++] = 0;
		}
		var _g2 = 0;
		while(_g2 < 14) {
			var i1 = _g2++;
			var p = this.kyoku.member[who].tepai[i1];
			if(p == 0) {
				continue;
			}
			var _g11 = 0;
			while(_g11 < 4) {
				var j = _g11++;
				if(j == who) {
					continue;
				}
				this.kyoku.member[who].dd[j][i1] = this.get_dd(p,who,j);
			}
		}
		var _g3 = 0;
		while(_g3 < 14) this.kyoku.member[who].dv[_g3++] = 0;
		var c = 0;
		var _g4 = 0;
		while(_g4 < 4) {
			var i2 = _g4++;
			if(i2 == who) {
				continue;
			}
			if(this.kyoku.member[i2].danger == 0) {
				continue;
			}
			++c;
			var _g12 = 0;
			while(_g12 < 14) {
				var j1 = _g12++;
				this.kyoku.member[who].dv[j1] += this.kyoku.member[who].dd[i2][j1];
			}
		}
		if(c > 0) {
			var _g5 = 0;
			while(_g5 < 14) {
				var i3 = _g5++;
				var tmp = Math.floor(this.kyoku.member[who].dv[i3] / c);
				this.kyoku.member[who].dv[i3] = tmp;
			}
		}
	}
	,get_dd: function(pai,who,enemy) {
		var m = this.kyoku.member[who];
		var e = this.kyoku.member[enemy];
		var s = Math.floor(pai / 10);
		if(s == 3) {
			if(m.mie[pai] >= 3) {
				return this.DV_JIDEAD;
			}
			if(e.jimachi > 0) {
				return this.DV_JI;
			}
			return this.DV_JILIVE;
		}
		if(e.sute[pai] > 0) {
			return this.DV_ANPAI;
		}
		if(e.minoga[pai] > 0) {
			return this.DV_ANPAI;
		}
		if(e.anpai[pai] > 0) {
			return this.DV_ANPAI;
		}
		if(e.some > 0) {
			if(s == e.some_suit) {
				return 30;
			} else {
				return this.DV_ELSESUIT;
			}
		}
		if(this.sujipai(pai,enemy) > 0) {
			return this.DV_SUJI;
		}
		if(this.kabepai(pai,who) > 0) {
			return this.DV_KABE;
		}
		if(e.hen > 0) {
			return this.DV_HEN;
		}
		if(this.sotosuji(pai,enemy) > 0) {
			return this.DV_4JUN;
		}
		if(this.one_chance(pai,who) > 0) {
			return this.DV_CHANCE;
		}
		return 30;
	}
	,get_nerai_info: function(who) {
		var p;
		var s;
		var n;
		this.kyoku.member[who].ni.init();
		var m = this.kyoku.member[who];
		var tt = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var _g = 0;
		while(_g < 14) {
			p = this.kyoku.member[who].tepai[_g++];
			if(p > 0) {
				tt[p]++;
			}
		}
		var dt = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var _g1 = 0;
		while(_g1 < 5) {
			p = this.kyoku.dora[_g1++];
			if(p > 0) {
				dt[p]++;
			}
		}
		var _g2 = 1;
		while(_g2 < 38) {
			var p1 = _g2++;
			s = Math.floor(p1 / 10);
			n = p1 % 10;
			if(tt[p1] > 0) {
				var yaku = this.yakupai(p1,this.kyoku.bakaze,this.kyoku.jikaze[who]);
				this.kyoku.member[who].ni.suit_pc[s] += tt[p1];
				if(this.yaopai(p1) != 0) {
					this.kyoku.member[who].ni.yao_pc += tt[p1];
					this.kyoku.member[who].ni.yao_sc++;
				}
				if(s == 3) {
					if(n <= 4) {
						this.kyoku.member[who].ni.sufu_c += tt[p1];
					}
					if(n >= 5) {
						this.kyoku.member[who].ni.sangen_c += tt[p1];
					}
				}
				if(tt[p1] == 2) {
					this.kyoku.member[who].ni.toi_c++;
					if(m.mie[p1] < 4 && m.sute[p1] == 0) {
						this.kyoku.member[who].ni.ntoi_c++;
						if(s == 3) {
							this.kyoku.member[who].ni.jipai_tc++;
						}
						if(yaku != 0) {
							this.kyoku.member[who].ni.yaku_tc++;
							if(dt[p1] != 0) {
								this.kyoku.member[who].ni.yakudora_c++;
							}
						}
					}
				}
				if(tt[p1] >= 3) {
					this.kyoku.member[who].ni.anko_c++;
					this.kyoku.member[who].ni.toi_c++;
					this.kyoku.member[who].ni.ntoi_c++;
					if(s == 3) {
						this.kyoku.member[who].ni.jipai_tc++;
					}
					if(yaku != 0) {
						this.kyoku.member[who].ni.yaku_tc++;
						if(dt[p1] != 0) {
							this.kyoku.member[who].ni.yakudora_c++;
						}
					}
				}
			}
		}
		var ms = 0;
		var max = -1;
		var _g3 = 0;
		while(_g3 < 3) {
			var s1 = _g3++;
			if(this.kyoku.member[who].ni.suit_pc[s1] > max) {
				ms = s1;
				max = this.kyoku.member[who].ni.suit_pc[s1];
			}
		}
		this.kyoku.member[who].ni.main_suit = ms;
		var not_suit = 0;
		var _g4 = 1;
		while(_g4 < 38) {
			var p2 = _g4++;
			if(Math.floor(p2 / 10) != ms) {
				not_suit += tt[p2];
			}
		}
		var _g5 = 31;
		while(_g5 < 38) if(tt[_g5++] == 1) {
			++not_suit;
		}
		var _g6 = 0;
		while(_g6 < 5) {
			var i = _g6++;
			if(m.s_ments[i].pai > 0) {
				s = Math.floor(m.s_ments[i].pai / 10);
				if(s < 3 && s != ms) {
					not_suit += 3;
				}
			}
		}
		var no_kokusi = 0;
		var _g7 = 1;
		while(_g7 < 38) {
			var p3 = _g7++;
			if(this.yaopai(p3) != 0) {
				if(m.mie[p3] >= 4 && tt[p3] == 0) {
					no_kokusi = 1;
				}
			}
		}
		if(this.kyoku.member[who].ni.toi_c >= 5) {
			this.kyoku.member[who].ni.go_chitoi = 1;
		}
		if(this.kyoku.member[who].ni.ntoi_c >= 4 && this.kyoku.member[who].ni.anko_c > 0) {
			this.kyoku.member[who].ni.go_toitoi = 1;
		}
		if(this.kyoku.member[who].ni.sangen_c >= 6) {
			this.kyoku.member[who].ni.go_sangen = 1;
		}
		if(this.kyoku.member[who].ni.sufu_c >= 7) {
			this.kyoku.member[who].ni.go_susi = 1;
		}
		if(this.kyoku.member[who].ni.yaku_tc > 0) {
			this.kyoku.member[who].ni.go_yaku = 1;
		}
		if(this.kyoku.member[who].ni.yao_sc >= 8) {
			if(no_kokusi == 0) {
				this.kyoku.member[who].ni.go_kokusi = 1;
			}
		}
		var f = 0;
		var _g8 = 0;
		while(_g8 < 3) {
			var s2 = _g8++;
			if(s2 != ms && this.kyoku.member[who].ni.suit_mc[s2] > 0) {
				f = 1;
			}
		}
		if(f == 0) {
			if(m.mota_c <= 12) {
				if(not_suit <= 2) {
					this.kyoku.member[who].ni.go_some = 1;
				}
			}
			if(m.mota_c <= 6) {
				if(not_suit <= 3) {
					this.kyoku.member[who].ni.go_some = 1;
				}
			}
			if(m.mota_c <= 3) {
				if(not_suit <= 4) {
					this.kyoku.member[who].ni.go_some = 1;
				}
			}
			if(m.mota_c <= 1) {
				if(this.kyoku.member[who].ni.suit_pc[ms] >= 9) {
					this.kyoku.member[who].ni.go_some = 1;
				}
				if(this.kyoku.member[who].ni.suit_pc[ms] >= 7 && this.kyoku.member[who].ni.jipai_tc >= 1) {
					this.kyoku.member[who].ni.go_some = 1;
				}
				if(this.kyoku.member[who].ni.suit_pc[ms] >= 5 && this.kyoku.member[who].ni.jipai_tc >= 2) {
					this.kyoku.member[who].ni.go_some = 1;
				}
			}
		}
	}
	,set_member_aa: function() {
		var who = this.kyoku.who_act;
		this.kyoku.member[who].aa.init();
		if(this.kyoku.member[who].reach_start > 0) {
			this.set_aa_reach_start();
			return;
		}
		if(this.kyoku.member[who].reach_f > 0) {
			this.set_aa_after_reach();
			return;
		}
		this.set_aa_normal();
	}
	,set_aa_normal: function() {
		var who = this.kyoku.who_act;
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			if(this.kyoku.member[who].tepai[i] > 0) {
				this.kyoku.member[who].aa.sute_ok[i] = 1;
			}
		}
		if(this.kyoku.member[who].not_shojun == 0) {
			var c = 0;
			var tt = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			var _g1 = 0;
			while(_g1 < 14) {
				var pai = this.kyoku.member[who].tepai[_g1++];
				var f = 0;
				if(pai == 1 || pai == 9) {
					f = 1;
				}
				if(pai >= 31 && pai <= 37) {
					f = 1;
				}
				if(tt[pai] == 0 && f > 0) {
					++c;
				}
				tt[pai]++;
			}
			if(c >= 9) {
				this.kyoku.member[who].aa.nine_ok = 1;
			}
		}
		if(this.kyoku.tumoaction.code == "ACT_AFTERNAKI") {
			return;
		}
		if(this.kyoku.member[who].hi.hora.hora_f > 0) {
			this.kyoku.member[who].aa.tumo_ok = 1;
			if(this.kyoku.member[who].hi.hora.yakuari_f == 0) {
				this.kyoku.member[who].aa.yakunasi = 1;
			}
		}
		if(this.kyoku.member[who].sttn.suteten_f > 0 && this.kyoku.member[who].furo_f == 0) {
			this.kyoku.member[who].aa.reach_ok = 1;
			if(this.kyoku.rest_c < 4) {
				this.kyoku.member[who].aa.tumo_nasi = 1;
			}
		}
		this.set_aa_kan(who);
	}
	,set_aa_kan: function(who) {
		if(this.kyoku.haitei_f > 0) {
			return;
		}
		if(this.kyoku.kan_c >= 5) {
			return;
		}
		var pai;
		var tt = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var _g = 0;
		while(_g < 14) {
			pai = this.kyoku.member[who].tepai[_g++];
			if(pai > 0) {
				tt[pai]++;
			}
		}
		this.kyoku.member[who].aa.kanzai_c = 0;
		var _g1 = 1;
		while(_g1 < 38) {
			var i = _g1++;
			if(tt[i] == 4) {
				this.kyoku.member[who].aa.kanzai_c++;
				var _g11 = 0;
				while(_g11 < 14) {
					var j = _g11++;
					pai = this.kyoku.member[who].tepai[j];
					if(pai == i) {
						this.kyoku.member[who].aa.kanzai[j] = this.kyoku.member[who].aa.kanzai_c;
						this.kyoku.member[who].aa.kantype[j] = 1;
					}
				}
			}
		}
		var pt = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var _g2 = 0;
		while(_g2 < 4) {
			var i1 = _g2++;
			if(this.kyoku.member[who].s_ments[i1].at == 6) {
				pai = this.kyoku.member[who].s_ments[i1].pai;
				pt[pai]++;
			}
		}
		var _g3 = 0;
		while(_g3 < 14) {
			var i2 = _g3++;
			pai = this.kyoku.member[who].tepai[i2];
			if(pai == 0) {
				continue;
			}
			if(pt[pai] == 0) {
				continue;
			}
			this.kyoku.member[who].aa.kanzai_c++;
			this.kyoku.member[who].aa.kanzai[i2] = this.kyoku.member[who].aa.kanzai_c;
			this.kyoku.member[who].aa.kantype[i2] = 2;
		}
	}
	,set_aa_reach_start: function() {
		var who = this.kyoku.who_act;
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			if(this.kyoku.member[who].tepai[i] == 0) {
				continue;
			}
			if(this.kyoku.member[who].sttn.ti[i].tenpai_f == 0) {
				continue;
			}
			var pai = this.kyoku.member[who].tepai[i];
			var _g1 = 0;
			while(_g1 < 14) {
				var j = _g1++;
				if(this.kyoku.member[who].tepai[j] == pai) {
					this.kyoku.member[who].aa.sute_ok[j] = 1;
				}
			}
		}
		var _g2 = 0;
		while(_g2 < 14) this.kyoku.member[who].aa.sute_ok[_g2++] = 1;
	}
	,set_aa_after_reach: function() {
		var pai;
		var n = 13;
		var who = this.kyoku.who_act;
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			if(this.kyoku.member[who].tepai[i] > 0) {
				n = i;
			}
		}
		this.kyoku.member[who].aa.sute_ok[n] = 1;
		if(this.kyoku.member[who].hi.hora.hora_f > 0) {
			this.kyoku.member[who].aa.tumo_ok = 1;
			return;
		}
		if(this.kyoku.haitei_f > 0) {
			return;
		}
		if(this.kyoku.kan_c >= 5) {
			return;
		}
		var ka = new KanAbility();
		var _g1 = 0;
		while(_g1 < 14) {
			pai = this.kyoku.member[who].tepai[_g1++];
			if(pai > 0) {
				ka.tt[pai]++;
			}
		}
		pai = this.kyoku.member[who].tepai[n];
		if(ka.tt[pai] == 4) {
			ka.tt[pai] -= 4;
			ka.check_tenpai();
			var f = 0;
			var _g2 = 0;
			while(_g2 < 13) {
				var i1 = _g2++;
				if(this.kyoku.member[who].tenpai.hs[i1].hora_f > 0) {
					if(ka.atari[this.kyoku.member[who].tenpai.hs[i1].a_pai] == 0) {
						f = 1;
					}
				}
			}
			if(f == 0) {
				this.kyoku.member[who].aa.kanzai_c = 1;
				var _g3 = 0;
				while(_g3 < 14) {
					var i2 = _g3++;
					if(this.kyoku.member[who].tepai[i2] == 0) {
						continue;
					}
					if(this.kyoku.member[who].tepai[i2] == pai) {
						this.kyoku.member[who].aa.kanzai[i2] = 1;
						this.kyoku.member[who].aa.kantype[i2] = 1;
					}
				}
			}
		}
	}
	,set_member_ra: function(who) {
		this.kyoku.member[who].ra.init();
		if(who == this.kyoku.who_act) {
			return;
		}
		var pai = this.pais[this.kyoku.pn].pai;
		if(this.kyoku.member[who].hi.hora.hora_f > 0) {
			if(this.kyoku.action.code == "ACT_ANKAN") {
				if(this.kyoku.member[who].hi.hora.yaku_type != 3) {
					return;
				}
			}
			this.kyoku.member[who].ra.ron_ok = 1;
			if(this.kyoku.member[who].hi.hora.yakuari_f == 0) {
				this.kyoku.member[who].ra.yakunasi = 1;
			}
			if(this.kyoku.member[who].tenpai.ts.furiten_f > 0) {
				this.kyoku.member[who].ra.furiten = 1;
			}
			if(this.kyoku.member[who].minogasi_f > 0) {
				this.kyoku.member[who].ra.minogasi = 1;
			}
			if(this.kyoku.member[who].minogasi_r_f > 0) {
				this.kyoku.member[who].ra.minogasi_r = 1;
			}
		}
		if(this.kyoku.member[who].reach_f > 0) {
			return;
		}
		if(this.kyoku.haitei_f > 0) {
			return;
		}
		if(this.kyoku.action.code != "ACT_SUTE") {
			return;
		}
		var tt = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var _g = 0;
		while(_g < 14) {
			var nn = this.kyoku.member[who].tepai[_g++];
			if(nn > 0) {
				tt[nn]++;
			}
		}
		if(tt[pai] >= 2) {
			this.kyoku.member[who].ra.pon_ok = 1;
		}
		if(tt[pai] == 3 && this.kyoku.kan_c < 5) {
			this.kyoku.member[who].ra.kan_ok = 1;
		}
		if(who != (this.kyoku.who_act + 1) % 4) {
			return;
		}
		if(pai > 30) {
			return;
		}
		var n = pai % 10;
		if(n <= 7) {
			if(tt[pai + 1] > 0 && tt[pai + 2] > 0) {
				this.kyoku.member[who].ra.chikei_c++;
				this.kyoku.member[who].ra.chil_ok = 1;
				var _g1 = 0;
				while(_g1 < 14) {
					var i = _g1++;
					if(pai + 1 == this.kyoku.member[who].tepai[i]) {
						this.kyoku.member[who].ra.chil[i] = 1;
					}
					if(pai + 2 == this.kyoku.member[who].tepai[i]) {
						this.kyoku.member[who].ra.chil[i] = 1;
					}
				}
			}
		}
		if(n >= 2 && n <= 8) {
			if(tt[pai - 1] > 0 && tt[pai + 1] > 0) {
				this.kyoku.member[who].ra.chikei_c++;
				this.kyoku.member[who].ra.chim_ok = 1;
				var _g2 = 0;
				while(_g2 < 14) {
					var i1 = _g2++;
					if(this.kyoku.member[who].tepai[i1] + 1 == pai) {
						this.kyoku.member[who].ra.chim[i1] = 1;
					}
					if(pai + 1 == this.kyoku.member[who].tepai[i1]) {
						this.kyoku.member[who].ra.chim[i1] = 1;
					}
				}
			}
		}
		if(n >= 3) {
			if(tt[pai - 1] > 0 && tt[pai - 2] > 0) {
				this.kyoku.member[who].ra.chikei_c++;
				this.kyoku.member[who].ra.chih_ok = 1;
				var _g3 = 0;
				while(_g3 < 14) {
					var i2 = _g3++;
					if(this.kyoku.member[who].tepai[i2] + 1 == pai) {
						this.kyoku.member[who].ra.chih[i2] = 1;
					}
					if(this.kyoku.member[who].tepai[i2] + 2 == pai) {
						this.kyoku.member[who].ra.chih[i2] = 1;
					}
				}
			}
		}
	}
	,set_pt: function() {
		var top = 0;
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			this.hanchan.pt[i].jun = 0;
			var _g1 = 0;
			while(_g1 < 4) {
				var j = _g1++;
				if(i == j) {
					continue;
				}
				if(this.hanchan.pt[i].tenbo > this.hanchan.pt[j].tenbo) {
					continue;
				}
				if(this.hanchan.pt[i].tenbo == this.hanchan.pt[j].tenbo) {
					if((4 + i - this.hanchan.deoya) % 4 < (4 + j - this.hanchan.deoya) % 4) {
						continue;
					}
				}
				this.hanchan.pt[i].jun++;
			}
		}
		var _g2 = 0;
		while(_g2 < 4) {
			var i1 = _g2++;
			var ten = this.hanchan.pt[i1].tenbo;
			if(ten >= 0) {
				if(ten % 1000 >= 600) {
					ten += 500;
				}
			} else if(ten % 1000 <= -600) {
				ten -= 500;
			}
			this.hanchan.pt[i1].point = Math.floor(ten / 1000) - 30;
		}
		var _g3 = 0;
		while(_g3 < 4) {
			var i2 = _g3++;
		}
		var uma = [0,10,-10,-20];
		var _g4 = 0;
		while(_g4 < 4) {
			var i3 = _g4++;
			var jun = this.hanchan.pt[i3].jun;
			switch(jun) {
			case 0:
				top = i3;
				break;
			case 1:
				this.hanchan.pt[i3].point += uma[jun];
				break;
			case 2:
				this.hanchan.pt[i3].point += uma[jun];
				break;
			case 3:
				this.hanchan.pt[i3].point += uma[jun];
				break;
			}
		}
		this.hanchan.pt[top].point = 0;
		var _g5 = 0;
		while(_g5 < 4) {
			var i4 = _g5++;
			if(i4 != top) {
				this.hanchan.pt[top].point -= this.hanchan.pt[i4].point;
			}
		}
		return top;
	}
	,set_add_hora: function(who) {
		var a = [0,0,0,0];
		var pay = this.kyoku.member[who].hi.hora.ten_hora;
		if(who != this.kyoku.who_act) {
			a[who] = pay;
			a[this.kyoku.who_act] = -pay;
		} else {
			a[who] = pay;
			var _g = 0;
			while(_g < 2) {
				var i = _g++;
				if(i != who) {
					a[i] = -pay;
				}
			}
		}
		var _g1 = 0;
		while(_g1 < 4) {
			var i1 = _g1++;
			this.kyoku.ten_add[i1] = a[i1];
		}
		if(this.kyoku.chonbo > 0) {
			var ten = 32000;
			if(this.hanchan.oya == 0) {
				ten = 48000;
			}
			this.kyoku.ten_add[0] = -ten;
			this.kyoku.ten_add[1] = ten;
		}
	}
	,set_add_honba: function(who) {
		var a = [0,0,0,0];
		var honba = this.hanchan.honba;
		if(who != this.kyoku.who_act) {
			var pay = honba * 300;
			a[who] = pay;
			a[this.kyoku.who_act] = -pay;
		} else {
			var _g = 0;
			while(_g < 4) {
				var i = _g++;
				if(i != who) {
					a[i] = -honba * 100;
				}
			}
			var sum = 0;
			var _g1 = 0;
			while(_g1 < 4) sum += a[_g1++];
			a[who] = -sum;
		}
		var _g2 = 0;
		while(_g2 < 4) {
			var i1 = _g2++;
			this.kyoku.ten_add[i1] = a[i1];
		}
	}
	,sim_hora: function(who) {
		var tmp = [];
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			tmp[i] = { tenbo : this.hanchan.pt[i].tenbo, point : this.hanchan.pt[i].point, jun : this.hanchan.pt[i].jun};
		}
		this.set_add_hora(who);
		var _g1 = 0;
		while(_g1 < 4) {
			var i1 = _g1++;
			this.hanchan.pt[i1].tenbo += this.kyoku.ten_add[i1];
		}
		this.set_add_honba(who);
		var _g2 = 0;
		while(_g2 < 4) {
			var i2 = _g2++;
			this.hanchan.pt[i2].tenbo += this.kyoku.ten_add[i2];
		}
		var _g3 = 0;
		while(_g3 < 4) if(this.kyoku.member[_g3++].reach_f > 0) {
			this.hanchan.pt[who].tenbo += 1000;
		}
		this.hanchan.pt[who].tenbo += this.hanchan.horyu * 1000;
		var ret = this.set_pt();
		var _g4 = 0;
		while(_g4 < 4) {
			var i3 = _g4++;
			this.hanchan.sim[i3].tenbo = this.hanchan.pt[i3].tenbo;
			this.hanchan.sim[i3].point = this.hanchan.pt[i3].point;
			this.hanchan.sim[i3].jun = this.hanchan.pt[i3].jun;
		}
		var _g5 = 0;
		while(_g5 < 4) {
			var i4 = _g5++;
			this.hanchan.pt[i4].tenbo = tmp[i4].tenbo;
			this.hanchan.pt[i4].point = tmp[i4].point;
			this.hanchan.pt[i4].jun = tmp[i4].jun;
		}
		return ret;
	}
	,set_pai_value: function() {
		var pv1 = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var pv2 = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var ov = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.pvwork_init();
		this.pvwork_ments(1);
		this.pvwork_else();
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			pv1[i] = this.get_pv_tenari(i);
		}
		this.pvwork_init();
		this.pvwork_ments(0);
		this.pvwork_else();
		var _g1 = 0;
		while(_g1 < 14) {
			var i1 = _g1++;
			pv1[i1] = this.get_pv_tenari(i1);
		}
		var _g2 = 0;
		while(_g2 < 14) {
			var i2 = _g2++;
			ov[i2] = Math.floor((pv1[i2] + pv2[i2]) / 2);
		}
		if(this.pvmat.nerai == this.NY_TENARI) {
			var _g3 = 0;
			while(_g3 < 14) {
				var i3 = _g3++;
				this.pvwork.pv[i3] = ov[i3];
			}
		} else if(this.pvmat.nerai == this.NY_TANYAO) {
			var _g4 = 0;
			while(_g4 < 14) {
				var i4 = _g4++;
				this.pvwork.pv[i4] = ov[i4] + this.get_pv_tanyao(i4);
			}
		} else if(this.pvmat.nerai == this.NY_YAKUPAI) {
			var _g5 = 0;
			while(_g5 < 14) {
				var i5 = _g5++;
				this.pvwork.pv[i5] = ov[i5] + this.get_pv_yakupai(i5);
			}
		} else if(this.pvmat.nerai == this.NY_SOME) {
			var _g6 = 0;
			while(_g6 < 14) {
				var i6 = _g6++;
				this.pvwork.pv[i6] = ov[i6] + this.get_pv_some(i6);
			}
		} else if(this.pvmat.nerai == this.NY_CHITOI) {
			var _g7 = 0;
			while(_g7 < 14) {
				var i7 = _g7++;
				this.pvwork.pv[i7] = Math.floor(ov[i7] / 10) + this.get_pv_chitoi(i7);
			}
		} else if(this.pvmat.nerai == this.NY_TOITOI) {
			var _g8 = 0;
			while(_g8 < 14) {
				var i8 = _g8++;
				this.pvwork.pv[i8] = Math.floor(ov[i8] / 10) + this.get_pv_toitoi(i8);
			}
		} else if(this.pvmat.nerai == this.NY_KOKUSI) {
			var _g9 = 0;
			while(_g9 < 14) {
				var i9 = _g9++;
				this.pvwork.pv[i9] = Math.floor(ov[i9] / 10) + this.get_pv_kokusi(i9);
			}
		} else if(this.pvmat.nerai == this.NY_SANGEN) {
			var _g10 = 0;
			while(_g10 < 14) {
				var i10 = _g10++;
				this.pvwork.pv[i10] = ov[i10] + this.get_pv_sangen(i10);
			}
		} else if(this.pvmat.nerai == this.NY_SUSI) {
			var _g11 = 0;
			while(_g11 < 14) {
				var i11 = _g11++;
				this.pvwork.pv[i11] = ov[i11] + this.get_pv_susi(i11);
			}
		} else {
			var _g12 = 0;
			while(_g12 < 14) {
				var i12 = _g12++;
				this.pvwork.pv[i12] = ov[i12];
			}
		}
	}
	,pvwork_init: function() {
		var c;
		var max;
		var pai;
		this.pvwork.init();
		var _g = 0;
		while(_g < 14) {
			pai = this.pvmat.tepai[_g++];
			this.pvwork.tt[pai]++;
			this.pvwork.nt[pai]++;
		}
		var _g1 = 0;
		while(_g1 < 7) if(this.pvmat.s_ments[_g1++].pai > 0) {
			this.pvwork.ments_c++;
		}
		var _g2 = 1;
		while(_g2 < 38) if(this.pvwork.tt[_g2++] >= 2) {
			this.pvwork.chitoi_c++;
		}
		var _g3 = 1;
		while(_g3 < 8) {
			var n = _g3++;
			this.pvwork.yakupai[n] = this.yakupai(30 + n,this.pvmat.bakaze,this.pvmat.jikaze);
		}
		var _g4 = 1;
		while(_g4 < 38) {
			var i = _g4++;
			if(this.pvmat.mie[i] >= 4) {
				this.pvwork.dead[i] = 1;
			}
			if(this.pvmat.mie[i] == 3) {
				if(this.pvwork.tt[i] <= 1) {
					this.pvwork.dead[i] = 1;
				}
			}
			if(this.pvmat.sute[i] > 0) {
				this.pvwork.dead[i] = 1;
			}
		}
		var _g5 = 0;
		while(_g5 < 10) {
			pai = this.pvmat.dora[_g5++];
			if(pai > 0) {
				this.pvwork.dmap[pai]++;
			}
		}
		max = -1;
		var _g6 = 0;
		while(_g6 < 3) {
			var s = _g6++;
			c = 0;
			var _g11 = 1;
			while(_g11 < 10) c += this.pvwork.tt[s * 10 + _g11++];
			if(c > max) {
				this.pvwork.suit = s;
				max = c;
			}
		}
		var num = 1;
		max = -1;
		var _g7 = 1;
		while(_g7 < 8) {
			var n1 = _g7++;
			c = 0;
			var _g12 = 0;
			while(_g12 < 3) {
				var s1 = _g12++;
				var _g31 = n1;
				var _g21 = n1 + 3;
				while(_g31 < _g21) if(this.pvwork.tt[s1 * 10 + _g31++] > 0) {
					++c;
				}
			}
			if(c > max) {
				max = c;
				num = n1;
			}
		}
		if(max >= 7) {
			var _g8 = 0;
			while(_g8 < 3) {
				var s2 = _g8++;
				var _g13 = 0;
				while(_g13 < 3) {
					var n2 = _g13++;
					if(this.pvwork.tt[s2 * 10 + (num + n2)] == 1) {
						this.pvwork.yaku[s2 * 10 + (num + n2)] = 1;
					}
				}
			}
		} else {
			var suit = -1;
			var _g9 = 0;
			while(_g9 < 3) {
				var s3 = _g9++;
				c = 0;
				var _g14 = 1;
				while(_g14 < 10) if(this.pvwork.tt[s3 * 10 + _g14++] > 0) {
					++c;
				}
				if(c >= 7) {
					suit = s3;
				}
			}
			if(suit >= 0) {
				var _g10 = 1;
				while(_g10 < 10) {
					var n3 = _g10++;
					if(this.pvwork.tt[suit * 10 + n3] == 1) {
						this.pvwork.yaku[suit * 10 + n3] = 1;
					}
				}
			}
		}
		var _g15 = 0;
		while(_g15 < 3) {
			var s4 = _g15++;
			var tmp = s4 * 10 + 1;
			this.pvwork.nobi[s4 * 10 + 9] = 2;
			this.pvwork.nobi[tmp] = 2;
			var tmp1 = s4 * 10 + 2;
			this.pvwork.nobi[s4 * 10 + 8] = 1;
			this.pvwork.nobi[tmp1] = 1;
		}
		var _g16 = 1;
		while(_g16 < 8) this.pvwork.nobi[30 + _g16++] = 2;
		var _g17 = 0;
		while(_g17 < 3) {
			var s5 = _g17++;
			var _g18 = 1;
			while(_g18 < 10) {
				var n4 = _g18++;
				pai = s5 * 10 + n4;
				if(this.pvmat.sute[pai] > 0 || this.pvmat.mie[pai] >= 4) {
					if(n4 > 1) {
						this.pvwork.nobi[pai - 1] += 2;
					}
					if(n4 < 9) {
						this.pvwork.nobi[pai + 1] += 2;
					}
					if(n4 > 2) {
						this.pvwork.nobi[pai - 2] += 1;
					}
					if(n4 < 8) {
						this.pvwork.nobi[pai + 2] += 1;
					}
				}
			}
		}
	}
	,pvwork_ments: function(smode) {
		var p;
		if(smode > 0) {
			var _g = 0;
			while(_g < 3) {
				var s = _g++;
				var _g1 = 1;
				while(_g1 < 8) {
					p = s * 10 + _g1++;
					if(this.pvwork.nt[p] > 0 && this.pvwork.nt[p + 1] > 0 && this.pvwork.nt[p + 2] > 0) {
						this.pvwork_shun(p);
					}
					if(this.pvwork.nt[p] > 0 && this.pvwork.nt[p + 1] > 0 && this.pvwork.nt[p + 2] > 0) {
						this.pvwork_shun(p);
					}
				}
			}
		} else {
			var _g2 = 0;
			while(_g2 < 3) {
				var s1 = _g2++;
				var _g11 = 0;
				while(_g11 < 7) {
					p = s1 * 10 + 7 - _g11++;
					if(this.pvwork.nt[p] > 0 && this.pvwork.nt[p + 1] > 0 && this.pvwork.nt[p + 2] > 0) {
						this.pvwork_shun(p);
					}
					if(this.pvwork.nt[p] > 0 && this.pvwork.nt[p + 1] > 0 && this.pvwork.nt[p + 2] > 0) {
						this.pvwork_shun(p);
					}
				}
			}
		}
		var _g3 = 0;
		while(_g3 < 4) {
			var s2 = _g3++;
			var _g12 = 1;
			while(_g12 < 10) {
				var n = _g12++;
				p = s2 * 10 + n;
				if(this.pvwork.nt[p] >= 3) {
					this.pvwork.at[p] = this.PA_ANKO;
					this.pvwork.nt[p] -= 3;
					this.pvwork.ments_c++;
					if(s2 < 3) {
						if(n > 1) {
							this.pvwork.jant[p - 1] = 1;
						}
						if(n < 9) {
							this.pvwork.jant[p + 1] = 1;
						}
					}
				}
			}
		}
		var _g4 = 0;
		while(_g4 < 3) {
			var s3 = _g4++;
			var _g13 = 2;
			while(_g13 < 8) {
				var n1 = _g13++;
				p = s3 * 10 + n1;
				if(this.pvwork.nt[p] > 0 && this.pvwork.nt[p + 1] > 0) {
					if(this.pvmat.sute[p - 1] > 0 || this.pvmat.sute[p + 2] > 0) {
						continue;
					}
					if(this.pvmat.mie[p - 1] + this.pvmat.mie[p + 2] >= 8) {
						continue;
					}
					this.pvwork.at[p] = this.pvwork.at[p + 1] = this.PA_RMEN;
					this.pvwork.nt[p]--;
					this.pvwork.nt[p + 1]--;
					this.pvwork.ments_c++;
					this.pvwork.rmap[p + 1] = 1;
					this.pvwork.rmap[p] = 1;
					if(n1 - 2 >= 1) {
						this.pvwork.puyao[p - 2] = 1;
					}
					if(n1 + 3 <= 9) {
						this.pvwork.puyao[p + 3] = 1;
					}
					if(this.pvwork.dmap[p] > 0 || this.pvwork.dmap[p + 1] > 0) {
						this.pvwork.rpp[p]++;
						this.pvwork.rpp[p + 1]++;
					}
					if(this.pvwork.yaku[p] > 0) {
						this.pvwork.rpp[p]++;
					}
					if(this.pvwork.yaku[p + 1] > 0) {
						this.pvwork.rpp[p + 1]++;
					}
					if(this.pvwork.smap[p] == 1) {
						this.pvwork.rpp[p]++;
						this.pvwork.rpp[p + 1]++;
					}
				}
			}
		}
		var _g5 = 0;
		while(_g5 < 4) {
			var s4 = _g5++;
			var _g14 = 1;
			while(_g14 < 10) {
				var n2 = _g14++;
				p = s4 * 10 + n2;
				if(s4 == 3) {
					if(this.pvwork.yakupai[n2] > 0 && this.pvwork.dead[p] == 0) {
						continue;
					}
				}
				if(this.pvwork.nt[p] >= 2) {
					this.pvwork.janto_c++;
				}
			}
		}
		this.pvwork.m4j1 = this.pvwork.ments_c == 4 && this.pvwork.janto_c >= 1?1:0;
	}
	,pvwork_shun: function(p) {
		this.pvwork.at[p] = this.pvwork.at[p + 1] = this.pvwork.at[p + 2] = this.PA_SHUN;
		this.pvwork.nt[p]--;
		this.pvwork.nt[p + 1]--;
		this.pvwork.nt[p + 2]--;
		this.pvwork.smap[p] = 1;
		this.pvwork.smap[p + 1] = 2;
		this.pvwork.smap[p + 2] = 2;
		this.pvwork.ments_c++;
		var n = p % 10;
		if(n < 7) {
			if(this.pvmat.sute[p] == 0 && this.pvmat.sute[p + 3] == 0) {
				this.pvwork.jant[p] = 1;
				this.pvwork.jant[p + 3] = 1;
			}
		}
		if(n > 1) {
			if(this.pvmat.sute[p - 1] == 0 && this.pvmat.sute[p + 2] == 0) {
				this.pvwork.jant[p - 1] = 1;
				this.pvwork.jant[p + 2] = 1;
			}
		}
	}
	,pvwork_else: function() {
		var p;
		var _g = 0;
		while(_g < 4) {
			var s = _g++;
			var _g1 = 1;
			while(_g1 < 10) {
				p = s * 10 + _g1++;
				if(this.pvwork.nt[p] > 0) {
					this.pvwork.at[p] = this.PA_FLOAT;
				}
			}
		}
		var _g2 = 0;
		while(_g2 < 3) {
			var s1 = _g2++;
			var _g11 = 1;
			while(_g11 < 8) {
				var n = _g11++;
				p = s1 * 10 + n;
				if(this.pvwork.nt[p] > 0 && this.pvwork.nt[p + 2] > 0) {
					if(this.pvmat.sute[p + 1] > 0 || this.pvmat.mie[p + 1] >= 4) {
						continue;
					}
					if(this.pvwork.rmap[p] > 0 || this.pvwork.rmap[p + 2] > 0) {
						continue;
					}
					this.pvwork.at[p] = this.pvwork.at[p + 2] = this.PA_KANCH;
					this.pvwork.kmap[p]++;
					this.pvwork.kmap[p + 2]++;
					if(this.pvwork.nt[p] == 2 && this.pvwork.nt[p + 2] == 1 || this.pvwork.nt[p] == 1 && this.pvwork.nt[p + 2] == 2) {
						this.pvwork.ktoi_c++;
					}
					if(n + 4 <= 9) {
						if(this.pvwork.nt[p + 4] > 0) {
							this.pvwork.kmap[p]++;
							this.pvwork.kmap[p + 2]++;
							this.pvwork.kmap[p + 4]++;
						}
					}
					if(this.pvwork.dmap[p] > 0 || this.pvwork.dmap[p + 1] > 0 || this.pvwork.dmap[p + 2] > 0) {
						this.pvwork.kpp[p]++;
						this.pvwork.kpp[p + 2]++;
					}
					if(this.pvwork.yaku[p] > 0) {
						this.pvwork.kpp[p]++;
					}
					if(this.pvwork.yaku[p + 2] > 0) {
						this.pvwork.kpp[p + 2]++;
					}
				}
			}
		}
		var _g3 = 0;
		while(_g3 < 3) {
			p = _g3++ * 10 + 1;
			if(this.pvmat.sute[p + 2] > 0) {
				continue;
			}
			if(this.pvmat.mie[p + 2] >= 4) {
				continue;
			}
			if(this.pvwork.kmap[p + 1] > 0) {
				continue;
			}
			if(this.pvwork.nt[p] > 0 && this.pvwork.nt[p + 1] > 0) {
				this.pvwork.at[p] = this.pvwork.at[p + 1] = this.PA_PENCH;
			}
		}
		var _g4 = 0;
		while(_g4 < 3) {
			p = _g4++ * 10 + 9;
			if(this.pvmat.sute[p - 2] > 0) {
				continue;
			}
			if(this.pvmat.mie[p - 2] >= 4) {
				continue;
			}
			if(this.pvwork.kmap[p - 1] > 0) {
				continue;
			}
			if(this.pvwork.nt[p] > 0 && this.pvwork.nt[p - 1] > 0) {
				this.pvwork.at[p] = this.pvwork.at[p - 1] = this.PA_PENCH;
			}
		}
		var _g5 = 0;
		while(_g5 < 4) {
			var s2 = _g5++;
			var _g12 = 1;
			while(_g12 < 10) {
				p = s2 * 10 + _g12++;
				if(this.pvwork.nt[p] >= 2) {
					this.pvwork.at[p] = this.PA_TOI;
				}
			}
		}
	}
	,get_pv_tenari: function(tepai_n) {
		if(this.pvmat.tepai[tepai_n] == 0) {
			return -1;
		}
		var pai = this.pvmat.tepai[tepai_n];
		var s = Math.floor(pai / 10);
		var n = Math.floor(pai % 10);
		var v = 0;
		if(this.pvwork.at[pai] == this.PA_SHUN) {
			v = 120;
			if(this.pvwork.yaku[pai] > 0) {
				v = 140;
			}
		} else if(this.pvwork.at[pai] == this.PA_ANKO) {
			v = 120;
		} else if(this.pvwork.at[pai] == this.PA_RMEN) {
			if(n == 2 || n == 8) {
				v = 80;
			} else {
				v = 85;
			}
			v += this.pvwork.rpp[pai] * 10;
		} else if(this.pvwork.at[pai] == this.PA_KANCH) {
			if(this.pvwork.nobi[pai] == 0) {
				v = 60;
			} else if(this.pvwork.nobi[pai] == 1) {
				v = 50;
			} else {
				v = 40;
			}
			if(this.pvwork.kmap[pai] >= 3) {
				v = 70;
			}
			if(this.pvwork.kmap[pai] == 2) {
				v = 65;
			}
			if(this.pvwork.m4j1 > 0) {
				v = 20;
			}
			if(n == 1 || n == 9) {
				v -= 5;
			}
			v += this.pvwork.kpp[pai] * 10;
		} else if(this.pvwork.at[pai] == this.PA_PENCH) {
			if(n == 2 || n == 8) {
				v = 25;
			} else {
				v = 20;
			}
		} else if(this.pvwork.at[pai] == this.PA_TOI) {
			if(s < 3) {
				v = 40;
				if(n == 2 || n == 8) {
					v = 50;
				}
				if(n == 1 || n == 9) {
					v = 30;
				}
			} else {
				if(this.pvwork.yakupai[n] > 0) {
					v = 90;
				} else {
					v = 30;
				}
				if(this.pvmat.mie[pai] >= 4) {
					v = 10;
				}
			}
			if(this.pvwork.janto_c == 1) {
				v = 90;
			}
			if(this.pvwork.dmap[pai] > 0) {
				v = 100;
			}
		} else if(this.pvwork.at[pai] == this.PA_FLOAT) {
			if(this.pvwork.nobi[pai] == 0) {
				v = 50;
			} else if(this.pvwork.nobi[pai] == 1) {
				v = 20;
			} else {
				v = 5;
			}
			if(this.pvwork.puyao[pai] > 0) {
				v = 10;
			}
			if(this.pvwork.janto_c == 0) {
				if(this.pvwork.rmap[pai] > 0) {
					v = 80;
				}
				if(this.pvwork.jant[pai] > 0) {
					v = 80;
				}
			} else if(this.pvwork.rmap[pai] > 0) {
				v = 30;
			}
			if(s == 3) {
				if(this.pvwork.yakupai[n] > 0) {
					v = 20;
				} else {
					v = 5;
				}
				if(this.pvwork.dmap[pai] > 0) {
					v += 20;
				}
				if(this.pvwork.dead[pai] > 0) {
					v = 0;
				}
			}
			if(this.pvwork.rmap[pai] == 0 && this.pvwork.yaku[pai] == 0) {
				if(this.pvwork.m4j1 > 0) {
					v -= 50;
				}
				if(this.pvwork.ments_c == 3 && this.pvwork.janto_c == 1 && this.pvwork.ktoi_c == 1) {
					v -= 30;
				}
			}
		}
		if(this.pvwork.dmap[pai] > 0) {
			v += 10;
			if(this.pvmat.junme <= 6) {
				v += 40;
			}
			if(this.pvmat.junme <= 12) {
				v += 40;
			}
		}
		return v;
	}
	,get_pv_tanyao: function(tepai_n) {
		if(this.yaopai(this.pvmat.tepai[tepai_n]) > 0) {
			return -100;
		} else {
			return 0;
		}
	}
	,get_pv_yakupai: function(tepai_n) {
		var pai = this.pvmat.tepai[tepai_n];
		var v = 0;
		if(pai > 30 && this.pvwork.at[pai] == this.PA_TOI && this.pvwork.dead[pai] == 0) {
			v = 50;
		}
		return v;
	}
	,get_pv_some: function(tepai_n) {
		var pai = this.pvmat.tepai[tepai_n];
		var s = Math.floor(pai / 10);
		Math.floor(pai % 10);
		var v = 0;
		if(s < 3) {
			if(s == this.pvwork.suit) {
				v = 100;
			} else {
				v = -120;
			}
		}
		return v;
	}
	,get_pv_chitoi: function(tepai_n) {
		var pai = this.pvmat.tepai[tepai_n];
		var s = Math.floor(pai / 10);
		var n = Math.floor(pai % 10);
		var v = 0;
		if(this.pvwork.tt[pai] == 4) {
			v = 0;
		} else if(this.pvwork.tt[pai] == 3) {
			v = 10;
		} else if(this.pvwork.tt[pai] == 2) {
			v = 80;
		} else {
			if(this.pvwork.dmap[pai] > 0) {
				v = 60;
				if(this.pvmat.mie[pai] == 3) {
					v = 50;
				}
			} else if(s == 3) {
				v = 40;
			} else {
				v = 20;
				if(n <= 3) {
					if(this.pvmat.sute[pai + 3] > 0) {
						v = 35;
					}
				}
				if(n >= 7) {
					if(this.pvmat.sute[pai - 3] > 0) {
						v = 35;
					}
				}
				if(n >= 4 && n <= 6) {
					if(this.pvmat.sute[pai - 3] > 0 && this.pvmat.sute[pai + 3] > 0) {
						v = 35;
					}
				}
			}
			if(this.pvmat.mie[pai] == 4) {
				v = 0;
			}
			if(this.pvmat.sute[pai] > 0) {
				v = 0;
			}
		}
		return v;
	}
	,get_pv_toitoi: function(tepai_n) {
		var pai = this.pvmat.tepai[tepai_n];
		var s = Math.floor(pai / 10);
		var n = Math.floor(pai % 10);
		var v = 0;
		if(this.pvwork.tt[pai] == 4) {
			v = 0;
		} else if(this.pvwork.tt[pai] == 3) {
			v = 120;
		} else if(this.pvwork.tt[pai] == 2) {
			v = 80;
			if(this.pvwork.dmap[pai] > 0) {
				v = 100;
			}
			if(s == 3) {
				v += 10;
			}
			if(this.pvmat.mie[pai] == 3) {
				v -= 5;
			}
			if(this.pvmat.mie[pai] == 4) {
				v = 20;
			}
		} else {
			v = 20;
			if(this.pvwork.dmap[pai] > 0) {
				v = 30;
			}
			if(s == 3) {
				v += 10;
				if(this.pvwork.yaku[n] > 0) {
					v += 10;
				}
			}
			if(this.pvmat.mie[pai] == 3) {
				v -= 10;
			}
			if(this.pvmat.mie[pai] == 4) {
				v = 0;
			}
			if(this.pvmat.sute[pai] > 0) {
				v = 0;
			}
		}
		return v;
	}
	,get_pv_kokusi: function(tepai_n) {
		var pai = this.pvmat.tepai[tepai_n];
		var v = 0;
		if(this.yaopai(pai) == 0) {
			return 0;
		}
		if(this.pvwork.tt[pai] == 4) {
			v = 10;
		} else if(this.pvwork.tt[pai] == 3) {
			v = 20;
		} else if(this.pvwork.tt[pai] == 2) {
			v = 60;
		} else {
			v = 100;
		}
		return v;
	}
	,get_pv_sangen: function(tepai_n) {
		var pai = this.pvmat.tepai[tepai_n];
		var s = Math.floor(pai / 10);
		var n = Math.floor(pai % 10);
		if(s < 3 || n < 5) {
			return 0;
		}
		if(this.pvmat.mie[pai] == 4) {
			return 0;
		}
		return 100;
	}
	,get_pv_susi: function(tepai_n) {
		var pai = this.pvmat.tepai[tepai_n];
		var s = Math.floor(pai / 10);
		var n = Math.floor(pai % 10);
		if(s < 3 || n > 4) {
			return 0;
		}
		if(this.pvmat.mie[pai] == 4) {
			return 0;
		}
		return 100;
	}
	,get_mouse_pai: function() {
		var n = -1;
		var mx = this.io.mouse.x;
		var my = this.io.mouse.y;
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			var pn = this.PN_TE(0) + i;
			if(this.pais[pn].pai == 0) {
				continue;
			}
			if(mx >= this.ppos[pn].bx && mx < this.ppos[pn].bx + this.PAI_W1) {
				if(my >= this.ppos[pn].by && my < this.ppos[pn].by + 104 + 1000) {
					n = i;
				}
			}
		}
		return n;
	}
	,create_button: function(n,x,y,w,h,txt,func) {
		if(n >= this.buttonmax) {
			return;
		}
		this.button[n].exist = true;
		this.button[n].x = x;
		this.button[n].y = y;
		this.button[n].w = w;
		this.button[n].h = h;
		this.button[n].txt = txt;
		this.button[n].func = func;
	}
	,check_activebutton: function() {
		var mx = this.io.mouse.x;
		var my = this.io.mouse.y;
		var pos = -1;
		var _g1 = 0;
		var _g = this.buttonmax;
		while(_g1 < _g) {
			var i = _g1++;
			if(!this.button[i].exist) {
				continue;
			}
			var x = this.button[i].x;
			var y = this.button[i].y;
			if(mx >= x && mx < x + this.button[i].w && my >= y && my < y + this.button[i].h) {
				pos = i;
			}
		}
		if(pos == this.activebutton) {
			return;
		}
		this.activebutton = pos;
	}
	,check_button: function() {
		var p = this.activebutton;
		this.check_activebutton();
		if(p != this.activebutton) {
			this.draw_taku();
		}
	}
	,button_released: function() {
		this.check_activebutton();
		if(this.activebutton >= 0) {
			this.io.click_func = null;
			this.io.move_func = null;
			this.io.release_func = null;
			this.button[this.activebutton].func();
		} else if(this.io.next_func != null) {
			this.io.next_func();
		}
	}
	,start_shiver: function() {
		this.shiver.pn = this.kyoku.pn;
		this.shiver.visible = false;
		this.shiver.c = 0;
		this.io.timer_func = $bind(this,this.exec_shiver);
	}
	,exec_shiver: function() {
		this.shiver.c++;
		if(this.shiver.c < 5) {
			return;
		}
		this.shiver.c = 0;
		this.shiver.visible = !this.shiver.visible;
		this.draw_taku();
	}
	,start_act_man: function() {
		var who = this.kyoku.who_act;
		var aa = this.kyoku.member[who].aa;
		this.kyoku.action.init();
		this.posline = true;
		this.selected_pai = -1;
		this.activebutton = -1;
		var _g1 = 0;
		var _g = this.buttonmax;
		while(_g1 < _g) this.button[_g1++].exist = false;
		var sa = this.bpos.w + this.bpos.xa;
		if(this.kyoku.act_cnt == 0) {
			if(aa.kanzai_c > 0) {
				this.create_button(0,this.bpos.ox + sa * 0,this.bpos.oy,this.bpos.w,this.bpos.h,"カン",$bind(this,this.act_man_kan));
			}
			if(this.kyoku.member[who].reach_f == 0) {
				this.create_button(1,this.bpos.ox + sa,this.bpos.oy,this.bpos.w,this.bpos.h,"立直",$bind(this,this.act_man_reach));
			}
			this.create_button(2,this.bpos.ox + sa * 2,this.bpos.oy,this.bpos.w,this.bpos.h,"ツモ",$bind(this,this.act_man_tumo));
		}
		this.draw_taku();
		if(this.taikyoku.hanchan_c == 0 && this.hanchan.kyoku_c == 0) {
			this.io.draw_text(this.io.view.w / 2,this.message.oy,"牌をクリック、または画面下部をドラッグ",24,"#ffffff",false,"center","middle");
		}
		if(aa.tumo_ok > 0) {
			this.io.playsnd("notice",0);
		}
		console.log(this.pais.slice(0,14));//avert
		this.io.timer_func = null;
		this.io.click_func = $bind(this,this.sute_click);
		this.io.move_func = $bind(this,this.check_button);
		this.io.release_func = null;
		this.io.next_func = $bind(this,this.cancel_sute_click);
	}
	,cancel_sute_click: function() {
		this.io.click_func = $bind(this,this.sute_click);
		this.io.move_func = $bind(this,this.check_button);
		this.io.release_func = null;
	}
	,sute_click: function() {
		this.check_activebutton();
		if(this.activebutton >= 0) {
			this.io.click_func = null;
			this.io.move_func = $bind(this,this.check_button);
			this.io.release_func = $bind(this,this.button_released);
			return;
		}
		this.selected_pai = this.get_mouse_pai();
		if(this.selected_pai >= 0) {
			var pn = this.PN_TE(0) + this.selected_pai;
			this.pais[pn].stat = this.PS_OMO;
		}
		this.set_ppos();
		this.draw_taku();
		this.io.click_func = null;
		this.io.move_func = $bind(this,this.sute_move);
		this.io.release_func = $bind(this,this.sute_release);
	}
	,sute_move: function() {
		var n = this.get_mouse_pai();
		if(n == this.selected_pai) {
			return;
		}
		if(this.selected_pai >= 0) {
			var pn = this.PN_TE(0) + this.selected_pai;
			this.pais[pn].stat = this.PS_TACHI;
		}
		if(n >= 0) {
			var pn2 = this.PN_TE(0) + n;
			this.pais[pn2].stat = this.PS_OMO;
		}
		this.selected_pai = n;
		this.set_ppos();
		this.draw_taku();
	}
	,sute_reset: function() {
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			var pn = this.PN_TE(0) + i;
			this.pais[pn].stat = this.taikyoku.tepai_open != 0?this.PS_OMO:this.PS_TACHI;
		}
		this.set_ppos();
		this.selected_pai = -1;
		this.draw_taku();
		this.io.click_func = $bind(this,this.sute_click);
		this.io.move_func = $bind(this,this.check_button);
		this.io.release_func = null;
	}
	,sute_release: function() {
		var n = this.selected_pai;
		if(n < 0 || this.kyoku.member[0].aa.sute_ok[n] == 0) {
			this.sute_reset();
			return;
		}
		this.kyoku.pn = this.PN_TE(0) + n;
		this.kyoku.pai = this.delete_pais(this.kyoku.pn);
		this.set_ppos();
		this.draw_taku();
		this.end_act_man();
		this.kyoku.action.push[n] = 1;
		this.kyoku.action.code = "ACT_SUTE";
		this.start_action();
	}
	,end_act_man: function() {
		var _g1 = 0;
		var _g = this.buttonmax;
		while(_g1 < _g) this.button[_g1++].exist = false;
		this.setting.disp = false;
		this.posline = false;
		this.io.click_func = null;
		this.io.move_func = null;
		this.io.release_func = null;
	}
	,test_func: function() {
		console.log("ok");
	}
	,act_man_reach: function() {
		this.kyoku.act_cnt++;
		this.end_act_man();
		this.start_reabo_proc($bind(this,this.start_act_man));
	}
	,act_man_tumo: function() {
		this.end_act_man();
		if(this.kyoku.member[0].aa.tumo_ok == 0) {
			this.kyoku.chonbo = 1;
		}
		this.kyoku.action.code = "ACT_TUMOHO";
		this.start_action();
	}
	,act_man_kan: function() {
		var _g1 = 0;
		var _g = this.buttonmax;
		while(_g1 < _g) this.button[_g1++].exist = false;
		var aa = this.kyoku.member[this.kyoku.who_act].aa;
		var n = 0;
		if(aa.kanzai_c == 1) {
			var _g2 = 0;
			while(_g2 < 14) {
				var i = _g2++;
				if(aa.kanzai[i] > 0) {
					n = i;
				}
			}
			var kn = aa.kanzai[n];
			var _g3 = 0;
			while(_g3 < 14) {
				var i1 = _g3++;
				if(aa.kanzai[i1] == kn) {
					this.kyoku.action.push[i1] = 1;
				}
			}
			this.kyoku.action.code = aa.kantype[n] == 1?"ACT_ANKAN":"ACT_KAKAN";
			this.end_act_man();
			this.start_action();
			return;
		}
		this.message.style = 2;
		this.message.txt = "カン牌をクリックしてください";
		this.setting.disp = false;
		this.draw_taku();
		this.io.timer_func = null;
		this.io.click_func = $bind(this,this.kanpai_click);
		this.io.move_func = null;
		this.io.release_func = null;
	}
	,kanpai_click: function() {
		this.selected_pai = this.get_mouse_pai();
		if(this.selected_pai < 0) {
			return;
		}
		var n = this.selected_pai;
		var aa = this.kyoku.member[0].aa;
		var kz = aa.kanzai[n];
		if(kz == 0) {
			return;
		}
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			if(aa.kanzai[i] == kz) {
				this.kyoku.action.push[i] = 1;
			}
		}
		this.kyoku.action.code = aa.kantype[n] == 1?"ACT_ANKAN":"ACT_KAKAN";
		this.message.style = 0;
		this.end_act_man();
		this.setting.disp = true;
		this.start_action();
	}
	,act_man_nine: function() {
		this.end_act_man();
		this.nine_proc();
	}
	,start_react_man: function() {
		this.kyoku.member[0].reaction.code = "ACT_NULL";
		if(this.kyoku.who_act == 0 || this.kyoku.action.code == "ACT_ANKAN") {
			this.start_reaction();
			return;
		}
		if(this.kyoku.member[0].ra.ron_ok <= 0) {
			if(this.taikyoku.hanchan_c == 0 && this.hanchan.kyoku_c == 0) {
				this.message.style = 3;
				this.message.txt = "鳴かないときは、手牌か画面下部をクリック";
			}
		}
		this.activebutton = -1;
		var _g1 = 0;
		var _g = this.buttonmax;
		while(_g1 < _g) this.button[_g1++].exist = false;
		this.create_button(1,this.bpos.ox + (this.bpos.w + this.bpos.xa),this.bpos.oy,this.bpos.w,this.bpos.h,"ロン",$bind(this,this.react_man_ron));
		this.start_shiver();
		this.io.click_func = $bind(this,this.react_click);
		this.io.move_func = $bind(this,this.check_button);
		this.io.release_func = null;
		this.io.next_func = $bind(this,this.cancel_react_click);
		this.draw_taku();
	}
	,cancel_react_click: function() {
		this.io.click_func = $bind(this,this.react_click);
		this.io.move_func = $bind(this,this.check_button);
		this.io.release_func = null;
	}
	,react_click: function() {
		this.message.style = 0;
		this.check_activebutton();
		if(this.activebutton >= 0) {
			this.io.click_func = null;
			this.io.move_func = $bind(this,this.check_button);
			this.io.release_func = $bind(this,this.button_released);
			return;
		}
		if(this.io.mouse.y < this.ppos[0].by - 10) {
			return;
		}
		this.end_react_man();
		this.start_reaction();
	}
	,end_react_man: function() {
		var _g1 = 0;
		var _g = this.buttonmax;
		while(_g1 < _g) this.button[_g1++].exist = false;
		this.shiver.pn = -1;
		this.draw_taku();
		this.io.timer_func = null;
		this.io.click_func = null;
		this.io.move_func = null;
		this.io.release_func = null;
	}
	,react_man_ron: function() {
		this.end_react_man();
		var ra = this.kyoku.member[0].ra;
		if(ra.ron_ok == 0) {
			this.kyoku.chonbo = 1;
		}
		if(ra.furiten > 0) {
			this.kyoku.chonbo = 2;
		}
		if(ra.minogasi_r > 0) {
			this.kyoku.chonbo = 3;
		}
		this.kyoku.member[0].reaction.code = "ACT_RONHO";
		this.start_reaction();
	}
	,react_man_pon: function() {
		this.kyoku.member[0].reaction.code = "ACT_PON";
		var _g = 0;
		while(_g < 14) this.kyoku.member[0].reaction.push[_g++] = 0;
		var pai = this.pais[this.kyoku.pn].pai;
		var c = 0;
		var _g1 = 0;
		while(_g1 < 14) {
			var i = _g1++;
			var p = this.kyoku.member[0].tepai[i];
			if(p == 0) {
				continue;
			}
			if(p == pai) {
				this.kyoku.member[0].reaction.push[i] = 1;
				++c;
				if(c >= 2) {
					break;
				}
			}
		}
		this.end_react_man();
		this.start_reaction();
	}
	,react_man_kan: function() {
		this.kyoku.member[0].reaction.code = "ACT_MINKAN";
		var _g = 0;
		while(_g < 14) this.kyoku.member[0].reaction.push[_g++] = 0;
		var pai = this.pais[this.kyoku.pn].pai;
		var c = 0;
		var _g1 = 0;
		while(_g1 < 14) {
			var i = _g1++;
			var p = this.kyoku.member[0].tepai[i];
			if(p == 0) {
				continue;
			}
			if(p == pai) {
				this.kyoku.member[0].reaction.push[i] = 1;
				++c;
				if(c >= 3) {
					break;
				}
			}
		}
		this.end_react_man();
		this.start_reaction();
	}
	,react_man_chi: function() {
		this.kyoku.member[0].reaction.code = "ACT_CHI";
		var ra = this.kyoku.member[0].ra;
		if(ra.chikei_c == 1) {
			if(ra.chil_ok > 0) {
				this.set_chil_push(0);
			}
			if(ra.chim_ok > 0) {
				this.set_chim_push(0);
			}
			if(ra.chih_ok > 0) {
				this.set_chih_push(0);
			}
			this.end_react_man();
			this.start_reaction();
			return;
		}
		var _g1 = 0;
		var _g = this.buttonmax;
		while(_g1 < _g) this.button[_g1++].exist = false;
		this.message.style = 2;
		this.message.txt = "構成牌をクリックしてください";
		this.draw_taku();
		this.start_chipai_select();
	}
	,start_chipai_select: function() {
		this.posline = true;
		this.selected_pai = -1;
		this.draw_taku();
		this.io.click_func = $bind(this,this.chipai_click);
		this.io.release_func = null;
		this.io.move_func = null;
	}
	,chipai_click: function() {
		this.io.click_func = null;
		this.io.move_func = $bind(this,this.chipai_move);
		this.io.release_func = $bind(this,this.chipai_release);
		this.selected_pai = this.get_mouse_pai();
		if(this.selected_pai >= 0) {
			var tmp = this.PN_TE(0) + this.selected_pai;
			this.pais[tmp].stat = this.pais[this.PN_TE(0) + this.selected_pai].stat == this.PS_TACHI?this.PS_OMO:this.PS_TACHI;
		}
		this.set_ppos();
		this.draw_taku();
	}
	,chipai_move: function() {
		var n = this.get_mouse_pai();
		if(n == this.selected_pai) {
			return;
		}
		if(this.selected_pai >= 0) {
			var tmp = this.PN_TE(0) + this.selected_pai;
			this.pais[tmp].stat = this.PS_TACHI;
		}
		this.selected_pai = n;
		if(this.selected_pai >= 0) {
			var tmp1 = this.PN_TE(0) + this.selected_pai;
			this.pais[tmp1].stat = this.PS_OMO;
		}
		this.set_ppos();
		this.draw_taku();
	}
	,chipai_release: function() {
		var _g = 0;
		while(_g < 14) this.kyoku.member[0].reaction.push[_g++] = 0;
		var c = 0;
		var n = -1;
		var _g1 = 0;
		while(_g1 < 14) {
			var i = _g1++;
			if(this.pais[this.PN_TE(0) + i].stat == this.PS_OMO) {
				this.kyoku.member[0].reaction.push[i] = 1;
				n = i;
				++c;
			}
		}
		if(c == 1) {
			this.chipai_kosei(n);
		} else if(c == 2) {
			this.chipai_kosei2();
		} else {
			this.chipai_cancel();
		}
	}
	,chipai_kosei: function(n) {
		var ra = this.kyoku.member[0].ra;
		var c = 0;
		if(ra.chil[n] > 0) {
			c = 1;
		}
		if(ra.chim[n] > 0) {
			++c;
		}
		if(ra.chih[n] > 0) {
			++c;
		}
		if(c == 0) {
			this.chipai_cancel();
		} else if(c == 1) {
			if(ra.chil[n] > 0) {
				this.set_chil_push(0);
			}
			if(ra.chim[n] > 0) {
				this.set_chim_push(0);
			}
			if(ra.chih[n] > 0) {
				this.set_chih_push(0);
			}
			this.end_chipai_select();
			this.start_reaction();
		} else {
			this.start_chipai_select();
		}
	}
	,chipai_kosei2: function() {
		var opai = this.pais[this.kyoku.pn].pai;
		var c = 0;
		var kpai = [0,0];
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			if(this.kyoku.member[0].reaction.push[i] > 0) {
				kpai[c] = this.pais[this.PN_TE(0) + i].pai;
				++c;
			}
			if(c >= 2) {
				break;
			}
		}
		if(c == 2) {
			var f = 0;
			if(kpai[0] == opai + 1 && kpai[1] == opai + 2) {
				f = 1;
			}
			if(kpai[0] == opai - 1 && kpai[1] == opai + 1) {
				f = 1;
			}
			if(kpai[0] == opai - 2 && kpai[1] == opai - 1) {
				f = 1;
			}
			if(f > 0) {
				this.end_chipai_select();
				this.end_react_man();
				this.start_reaction();
				return;
			}
		}
		this.chipai_cancel();
	}
	,chipai_cancel: function() {
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			this.kyoku.member[0].reaction.push[i] = 0;
			var tmp = this.PN_TE(0) + i;
			this.pais[tmp].stat = this.PS_TACHI;
		}
		this.selected_pai = -1;
		this.set_ppos();
		this.draw_taku();
		this.start_chipai_select();
	}
	,end_chipai_select: function() {
		this.shiver.pn = -1;
		this.message.style = 0;
		this.io.timer_func = null;
		this.io.click_func = null;
		this.io.release_func = null;
		this.io.move_func = null;
	}
	,set_want: function(who) {
		var want = 1000;
		var ten = this.hanchan.pt[who].tenbo;
		var oyanasi = 1;
		var oya = this.hanchan.oya;
		var k = this.hanchan.kyoku_c;
		while(k <= this.hanchan.kyoku_max) {
			if(oya % 4 == who) {
				oyanasi = 0;
			}
			++oya;
			++k;
		}
		var tensa = this.get_tensa(who);
		if(ten >= 30000) {
			want = 1000;
		}
		if(ten < 30000) {
			want = 3900;
		}
		if(ten < 20000) {
			want = 8000;
		}
		if(ten < 10000) {
			want = 12000;
		}
		if(oyanasi > 0) {
			want = tensa;
		}
		if(this.kyoku.jikaze[who] == 1) {
			want = 1000;
		}
		if(this.taikyoku.chara[who].seko > 0) {
			if(ten >= 30000) {
				want = 1000;
			}
			if(ten < 30000) {
				want = 1000;
			}
			if(ten < 20000) {
				want = 3900;
			}
			if(ten < 15000) {
				want = 8000;
			}
			if(ten < 10000) {
				want = 12000;
			}
			if(oyanasi > 0) {
				want = tensa;
			}
			if(this.kyoku.jikaze[who] == 1) {
				want = 1000;
			}
		}
		if(this.taikyoku.chara[who].game > 0) {
			want = 8000;
			if(ten < 15000) {
				want = 12000;
			}
			if(oyanasi > 0) {
				want = tensa;
			}
			if(want < 8000) {
				want = 8000;
			}
		}
		this.kyoku.member[who].want = want;
	}
	,get_tensa: function(who) {
		var max = -1;
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			if(this.hanchan.pt[i].tenbo > max) {
				max = this.hanchan.pt[i].tenbo;
			}
		}
		var tensa = max - this.hanchan.pt[who].tenbo;
		if(tensa < 0) {
			tensa = 0;
		}
		if(tensa > 12000) {
			tensa = 12000;
		}
		return tensa;
	}
	,set_nerai: function(who) {
		var m = this.kyoku.member[who];
		var ni = this.kyoku.member[who].ni;
		var han = 1;
		if(who == this.hanchan.oya) {
			han = 6;
			if(m.want <= 12000) {
				han = 4;
			}
			if(m.want <= 5800) {
				han = 3;
			}
			if(m.want <= 2900) {
				han = 2;
			}
			if(m.want <= 1500) {
				han = 1;
			}
		} else {
			han = 6;
			if(m.want <= 8000) {
				han = 4;
			}
			if(m.want <= 3900) {
				han = 3;
			}
			if(m.want <= 2000) {
				han = 2;
			}
			if(m.want <= 1000) {
				han = 1;
			}
		}
		this.kyoku.member[who].nerai = this.NY_TENARI;
		if(han == 1) {
			if(ni.go_yaku > 0) {
				this.kyoku.member[who].nerai = this.NY_YAKUPAI;
			}
			if(ni.go_tanyao > 0) {
				this.kyoku.member[who].nerai = this.NY_TANYAO;
			}
		}
		if(han == 2) {
			if(ni.go_chitoi > 0) {
				this.kyoku.member[who].nerai = this.NY_CHITOI;
			}
			if(ni.go_toitoi > 0) {
				this.kyoku.member[who].nerai = this.NY_TOITOI;
			}
			if(ni.go_some > 0) {
				this.kyoku.member[who].nerai = this.NY_SOME;
			}
			if(ni.go_chanta > 0) {
				this.kyoku.member[who].nerai = this.NY_CHANTA;
			}
		}
		if(han == 3) {
			if(ni.go_some > 0) {
				if(ni.yaku_tc >= 1) {
					this.kyoku.member[who].nerai = this.NY_SOME;
				}
			}
		}
		if(han == 4) {
			if(ni.go_some > 0) {
				if(ni.yaku_tc >= 2) {
					this.kyoku.member[who].nerai = this.NY_SOME;
				}
			}
		}
		if(ni.yakudora_c > 0) {
			this.kyoku.member[who].nerai = this.NY_YAKUPAI;
		}
		if(ni.go_sangen > 0) {
			this.kyoku.member[who].nerai = this.NY_SANGEN;
		}
		if(ni.go_susi > 0) {
			this.kyoku.member[who].nerai = this.NY_SUSI;
		}
		if(ni.go_kokusi > 0) {
			this.kyoku.member[who].nerai = this.NY_KOKUSI;
		}
	}
	,change_nerai: function(who) {
		var m = this.kyoku.member[who];
		var ni = this.kyoku.member[who].ni;
		var han = 1;
		if(who == this.hanchan.oya) {
			han = 6;
			if(m.want <= 12000) {
				han = 4;
			}
			if(m.want <= 5800) {
				han = 3;
			}
			if(m.want <= 2900) {
				han = 2;
			}
			if(m.want <= 1500) {
				han = 1;
			}
		} else {
			han = 6;
			if(m.want <= 8000) {
				han = 4;
			}
			if(m.want <= 3900) {
				han = 3;
			}
			if(m.want <= 2000) {
				han = 2;
			}
			if(m.want <= 1000) {
				han = 1;
			}
		}
		if(m.nerai == this.NY_TENARI) {
			if(han == 1) {
				if(ni.go_yaku > 0) {
					this.kyoku.member[who].nerai = this.NY_YAKUPAI;
				}
			}
			if(han == 2) {
				if(ni.go_chitoi > 0) {
					this.kyoku.member[who].nerai = this.NY_CHITOI;
				}
				if(ni.go_toitoi > 0) {
					this.kyoku.member[who].nerai = this.NY_TOITOI;
				}
				if(ni.go_some > 0) {
					this.kyoku.member[who].nerai = this.NY_SOME;
				}
				if(ni.go_chanta > 0) {
					this.kyoku.member[who].nerai = this.NY_CHANTA;
				}
			}
			if(han == 3) {
				if(ni.go_some > 0) {
					if(ni.yaku_tc >= 1) {
						this.kyoku.member[who].nerai = this.NY_SOME;
					}
				}
			}
			if(han == 4) {
				if(ni.go_some > 0) {
					if(ni.yaku_tc >= 2) {
						this.kyoku.member[who].nerai = this.NY_SOME;
					}
				}
			}
			if(ni.yakudora_c > 0) {
				this.kyoku.member[who].nerai = this.NY_YAKUPAI;
			}
			if(ni.go_sangen > 0) {
				this.kyoku.member[who].nerai = this.NY_SANGEN;
			}
			if(ni.go_susi > 0) {
				this.kyoku.member[who].nerai = this.NY_SUSI;
			}
		}
		if(m.nerai == this.NY_KOKUSI) {
			if(ni.go_kokusi == 0) {
				this.kyoku.member[who].nerai = this.NY_CHANTA;
			}
		}
	}
	,act_com: function() {
		this.io.timer_func = null;
		var who = this.kyoku.who_act;
		var m = this.kyoku.member[who];
		this.kyoku.action.init();
		if(this.do_tumoho() > 0) {
			this.kyoku.action.code = "ACT_TUMOHO";
			this.start_action();
			return;
		}
		this.change_nerai(who);
		this.set_member_pv(who);
		if(m.sttn.suteten_f > 0) {
			this.set_suteten_pv();
		}
		this.set_care_mode();
		var n = 0;
		if(m.care_mode == this.CM_NOCARE) {
			n = this.get_sn_nocare();
		} else if(m.care_mode == this.CM_BITCARE) {
			n = this.get_sn_bitcare();
		} else if(m.care_mode == this.CM_CARE) {
			n = this.get_sn_care();
		} else if(m.care_mode == this.CM_BETA) {
			n = this.get_sn_beta();
		} else {
			n = this.get_sn_beta();
		}
		if(this.do_ankan(n) > 0) {
			this.kyoku.action.code = "ACT_ANKAN";
			this.set_ankan_push(who,this.kyoku.member[who].tepai[n]);
			this.start_action();
			return;
		}
		if(m.reach_f > 0) {
			n = this.get_pais_tepai_max(who);
		}
		this.kyoku.action.code = "ACT_SUTE";
		this.kyoku.action.push[n] = 1;
		var base = 0;
		switch(this.io.com_speed) {
		case 1:
			base = 18;
			break;
		case 2:
			base = 12;
			break;
		case 3:
			base = 6;
			break;
		case 4:
			base = 0;
			break;
		default:
			base = 30;
		}
		var wc = base;
		if(m.dv[n] >= 5) {
			wc = base + 6;
		}
		if(m.dv[n] >= 10) {
			wc = base + 15;
		}
		if(m.dv[n] >= 15) {
			wc = base + 30;
		}
		if(m.reach_f > 0) {
			wc = base;
		}
		if(this.do_reach(n) > 0) {
			this.start_com_wait(wc,1);
		} else if(wc == 0) {
			this.start_action();
		} else {
			this.start_com_wait(wc,0);
		}
	}
	,start_com_wait: function(wc,reach) {
		this.kyoku.com_wait_tc = this.io.tc + wc;
		this.kyoku.com_wait_reach = reach;
		this.io.timer_func = $bind(this,this.com_waiting);
	}
	,com_waiting: function() {
		if(this.io.tc < this.kyoku.com_wait_tc) {
			return;
		}
		this.io.timer_func = null;
		if(this.kyoku.com_wait_reach > 0) {
			this.hassei(this.kyoku.who_act,"リーチ",0,$bind(this,this.start_reach_com));
		} else {
			this.start_action();
		}
	}
	,start_reach_com: function() {
		this.io.timer_func = null;
		this.start_reabo_proc($bind(this,this.start_action));
	}
	,do_tumoho: function() {
		var m = this.kyoku.member[this.kyoku.who_act];
		if(m.aa.tumo_ok == 0) {
			return 0;
		}
		if(m.aa.yakunasi > 0) {
			return 0;
		}
		return 1;
	}
	,jun_nochange: function(who) {
		var m = this.kyoku.member[who];
		if(this.hanchan.kyoku_c <= this.hanchan.kyoku_max - 2) {
			return 0;
		}
		if(who == this.hanchan.oya) {
			return 0;
		}
		if(m.reach_f > 0) {
			return 0;
		}
		if(m.hi.hora.ten_hora >= 8000) {
			return 0;
		}
		if(this.sim_hora(who) == who) {
			return 0;
		}
		if(this.hanchan.sim[who].jun == this.hanchan.pt[who].jun) {
			return 1;
		}
		return 0;
	}
	,dobon_nottop: function(who) {
		var m = this.kyoku.member[who];
		if(m.reach_f > 0) {
			return 0;
		}
		if(m.hi.hora.ten_hora >= 8000) {
			return 0;
		}
		if(this.sim_hora(who) == who) {
			return 0;
		}
		var _g = 0;
		while(_g < 4) if(this.hanchan.sim[_g++].tenbo < 0) {
			return 1;
		}
		return 0;
	}
	,set_care_mode: function() {
		var who = this.kyoku.who_act;
		var m = this.kyoku.member[who];
		var cv = 0;
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			if(i != who) {
				cv += this.get_care_value(i);
			}
		}
		switch(cv) {
		case 0:
			this.kyoku.member[who].care_mode = this.CM_NOCARE;
			break;
		case 1:
			this.kyoku.member[who].care_mode = this.CM_BITCARE;
			break;
		case 2:
			this.kyoku.member[who].care_mode = this.CM_CARE;
			break;
		default:
			this.kyoku.member[who].care_mode = this.CM_BETA;
		}
		if(m.care_mode == this.CM_CARE && m.sttn.suteten_f > 0) {
			this.kyoku.member[who].care_mode = this.CM_BITCARE;
		}
		if(this.kyoku.rest_c < 4 && m.tenpai.ts.tenpai_f == 0) {
			if(cv > 0) {
				this.kyoku.member[who].care_mode = this.CM_BETA;
			}
		}
	}
	,get_care_value: function(who) {
		var m = this.kyoku.member[who];
		var cv = 0;
		if(m.reach_f > 0) {
			cv = 1;
			if(m.ippatsu_f > 0) {
				cv = 2;
			}
		}
		if(m.shosu > 0) {
			cv = 2;
		}
		if(m.shosan > 0) {
			cv = 2;
		}
		if(m.daisan > 0) {
			cv = 3;
		}
		if(m.daisu > 0) {
			cv = 3;
		}
		if(m.some > 0) {
			++cv;
		}
		if(m.dorapon > 0) {
			++cv;
		}
		if(cv > 0) {
			if(who == this.hanchan.oya) {
				++cv;
			}
		}
		return cv;
	}
	,set_suteten_pv: function() {
		var who = this.kyoku.who_act;
		var m = this.kyoku.member[who];
		if(m.sttn.suteten_f == 0) {
			return;
		}
		var _g = 0;
		while(_g < 14) this.kyoku.member[who].pv[_g++] = 0;
		var _g1 = 0;
		while(_g1 < 14) {
			var i = _g1++;
			this.kyoku.member[who].pv[i] = 120;
			if(m.tepai[i] == 0) {
				continue;
			}
			if(m.sttn.ti[i].tenpai_f == 0) {
				continue;
			}
			var v = m.sttn.ti[i].ten_max + m.sttn.ti[i].rest_c * 1000;
			if(m.dv[i] != 0) {
				v -= m.dv[i] * 100;
			}
			if(m.sttn.ti[i].kakutei_f > 0) {
				v += 4000;
			}
			if(m.sttn.ti[i].hikkake_f > 0) {
				v += 2000;
			}
			if(m.sttn.ti[i].furiten_f > 0) {
				v /= 10;
			}
			if(v < 0) {
				v = 0;
			}
			this.kyoku.member[who].pv[i] = -Math.floor(v / 1000);
		}
	}
	,get_sn: function(pvmax,dvmax) {
		var who = this.kyoku.who_act;
		var m = this.kyoku.member[who];
		var n = -1;
		var min = 999;
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			if(m.tepai[i] == 0) {
				continue;
			}
			if(m.pv[i] > pvmax) {
				continue;
			}
			if(m.dv[i] > dvmax) {
				continue;
			}
			if(this.kyoku.never_mode > 0 && who != this.kyoku.never_who) {
				if(m.tepai[i] == this.kyoku.never_pai) {
					continue;
				}
			}
			if(m.pv[i] <= min) {
				n = i;
				min = m.pv[i];
			}
		}
		return n;
	}
	,get_sn_nocare: function() {
		var who = this.kyoku.who_act;
		var m = this.kyoku.member[who];
		var n = 0;
		var min = 999;
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			if(m.tepai[i] == 0) {
				continue;
			}
			if(this.kyoku.never_mode > 0 && who != this.kyoku.never_who) {
				if(m.tepai[i] == this.kyoku.never_pai) {
					continue;
				}
			}
			if(m.pv[i] <= min) {
				n = i;
				min = m.pv[i];
			}
		}
		return n;
	}
	,get_sn_bitcare: function() {
		var n = this.get_sn(90,8);
		if(n >= 0) {
			return n;
		}
		return this.get_sn_nocare();
	}
	,get_sn_care: function() {
		var n = this.get_sn(999,9);
		if(n >= 0) {
			return n;
		}
		return this.get_sn_nocare();
	}
	,get_sn_beta: function() {
		var n = this.get_sn(999,0);
		if(n < 0) {
			n = this.get_sn(999,4);
		}
		if(n < 0) {
			n = this.get_sn(999,6);
		}
		if(n < 0) {
			n = this.get_sn(999,8);
		}
		if(n < 0) {
			n = this.get_sn(999,10);
		}
		if(n >= 0) {
			return n;
		}
		return this.get_sn_nocare();
	}
	,do_reach: function(n) {
		var who = this.kyoku.who_act;
		var m = this.kyoku.member[who];
		if(m.furo_f > 0) {
			return 0;
		}
		if(m.reach_f > 0) {
			return 0;
		}
		if(m.aa.reach_ok == 0) {
			return 0;
		}
		var ti = this.kyoku.member[who].sttn.ti[n];
		if(ti.tenpai_f == 0) {
			return 0;
		}
		if(ti.rest_c == 0) {
			return 0;
		}
		return 1;
	}
	,do_kakan: function(n) {
		return 0;
	}
	,do_ankan: function(n) {
		var who = this.kyoku.who_act;
		var m = this.kyoku.member[who];
		if(this.kyoku.member[who].aa.kantype[n] != 1) {
			return 0;
		}
		if(m.reach_f > 0) {
			return 1;
		}
		return 0;
	}
	,react_com: function(who) {
		this.kyoku.member[who].reaction.init();
		if(this.do_ronho(who) > 0) {
			this.kyoku.member[who].reaction.code = "ACT_RONHO";
			return;
		}
	}
	,do_ronho: function(who) {
		var m = this.kyoku.member[who];
		if(m.ra.ron_ok == 0) {
			return 0;
		}
		if(m.ra.yakunasi > 0) {
			return 0;
		}
		if(m.ra.furiten > 0) {
			return 0;
		}
		if(m.ra.minogasi > 0) {
			return 0;
		}
		if(m.ra.minogasi_r > 0) {
			return 0;
		}
		return 1;
	}
	,do_pon: function(who) {
		return 0;
	}
	,do_chil: function(who) {
		return 0;
	}
	,do_chim: function(who) {
		return 0;
	}
	,do_chih: function(who) {
		return 0;
	}
	,do_react: function(who,naki) {
		var m = this.kyoku.member[who];
		var opai = this.pais[this.kyoku.pn].pai;
		var at = 5;
		if(naki == this.SIM_PON) {
			this.set_pon_push(who);
			at = 6;
		} else if(naki == this.SIM_CHIL) {
			this.set_chil_push(who);
			at = 5;
		} else if(naki == this.SIM_CHIM) {
			this.set_chim_push(who);
			at = 5;
		} else if(naki == this.SIM_CHIH) {
			this.set_chih_push(who);
			at = 5;
		}
		this.kyoku.member[who].sttn = new Suteten();
		this.kyoku.member[who].sttn.ymat.furo_f = 1;
		this.kyoku.member[who].sttn.ymat.reach_f = 0;
		this.kyoku.member[who].sttn.ymat.bakaze = this.kyoku.bakaze;
		this.kyoku.member[who].sttn.ymat.jikaze = this.kyoku.jikaze[who];
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			var p = m.tepai[i];
			if(m.reaction.push[i] > 0) {
				if(p < opai) {
					opai = p;
				}
			} else {
				this.kyoku.member[who].sttn.tepai[i] = p;
			}
		}
		var _g1 = 0;
		while(_g1 < 4) {
			var i1 = _g1++;
			this.kyoku.member[who].sttn.s_ments[i1].pai = m.s_ments[i1].pai;
			this.kyoku.member[who].sttn.s_ments[i1].at = m.s_ments[i1].at;
		}
		var _g2 = 0;
		while(_g2 < 10) {
			var i2 = _g2++;
			this.kyoku.member[who].sttn.dora[i2] = this.kyoku.dora[i2];
		}
		var _g3 = 0;
		while(_g3 < 40) {
			var i3 = _g3++;
			this.kyoku.member[who].sttn.sute[i3] = m.sute[i3];
			this.kyoku.member[who].sttn.mie[i3] = m.mie[i3];
		}
		var smn = -1;
		var _g4 = 0;
		while(_g4 < 4) {
			var i4 = _g4++;
			if(m.s_ments[i4].pai == 0) {
				smn = i4;
				break;
			}
		}
		if(smn < 0) {
			return 0;
		}
		this.kyoku.member[who].sttn.s_ments[smn].pai = opai;
		this.kyoku.member[who].sttn.s_ments[smn].at = at;
		this.kyoku.member[who].sttn.CheckSuteten();
		if(this.kyoku.member[who].sttn.suteten_f == 0) {
			return 0;
		}
		var kakutei_f = 0;
		var yakuari_f = 0;
		var furiten_f = 1;
		var ten_max = 0;
		var pai = this.pais[this.kyoku.pn].pai;
		var _g5 = 0;
		while(_g5 < 14) {
			var i5 = _g5++;
			if(pai == m.tepai[i5]) {
				continue;
			}
			var ti = this.kyoku.member[who].sttn.ti[i5];
			if(ti.tenpai_f == 0) {
				continue;
			}
			if(ti.kakutei_f > 0) {
				kakutei_f = 1;
			}
			if(ti.yakuari_f > 0) {
				yakuari_f = 1;
			}
			if(ti.furiten_f == 0) {
				furiten_f = 0;
			}
			if(ti.ten_max > ten_max) {
				ten_max = ti.ten_max;
			}
		}
		if(m.tenpai.ts.tenpai_f == 0) {
			if(kakutei_f > 0 && furiten_f == 0) {
				if(ten_max >= m.want) {
					return 1;
				}
			}
			if(this.kyoku.rest_c < 12) {
				return 1;
			}
		} else if(yakuari_f > 0 && furiten_f == 0) {
			if(ten_max >= m.want) {
				if(ten_max >= m.tenpai.ts.ten_max + 2600) {
					return 1;
				}
			}
		}
		return 0;
	}
	,big_mes: function(txt) {
		this.message.style = 1;
		this.message.txt = txt;
		this.counter = 0;
		this.io.timer_func = $bind(this,this.exec_big_mes);
		this.io.click_func = null;
		this.io.release_func = null;
		this.io.move_func = null;
	}
	,exec_big_mes: function() {
		this.draw_taku();
		this.counter++;
		var h = this.counter * 8;
		this.io.draw_rect(0,320 - h,this.io.view.w,h * 2,"#000000",0.5,false);
		if(h > 64) {
			this.io.draw_text(this.io.view.w / 2,320,this.message.txt,48,"#ffffff",true,"center","middle");
			this.io.timer_func = null;
			this.io.click_func = $bind(this,this.end_mes);
		}
	}
	,small_mes: function(txt) {
		this.message.style = 1;
		this.message.txt = txt;
		this.counter = 0;
		this.io.timer_func = $bind(this,this.exec_small_mes);
		this.io.click_func = null;
		this.io.release_func = null;
		this.io.move_func = null;
	}
	,exec_small_mes: function() {
		this.draw_taku();
		this.counter++;
		var h = this.counter * 4;
		var y = this.message.oy;
		this.io.draw_rect(0,y - h,this.io.view.w,h * 2,"#000000",0.8,false);
		if(h > 32) {
			this.io.draw_text(this.io.view.w / 2,y,this.message.txt,18,"#ffffff",false,"center","middle");
			this.io.timer_func = null;
			this.io.click_func = $bind(this,this.end_mes);
		}
	}
	,end_mes: function() {
		this.io.click_func = null;
		this.message.style = 0;
		this.io.next_func();
	}
	,hassei: function(who,txt,exp,func) {
		this.io.playsnd("puyo",0);
		this.message.who = who;
		this.message.txt = txt;
		this.message.exp = exp;
		this.io.next_func = func;
		this.io.click_func = null;
		this.io.move_func = null;
		this.io.release_func = null;
		this.io.timer_func = $bind(this,this.exec_hassei);
		this.counter = 0;
	}
	,exec_hassei: function() {
		this.counter++;
		var who = this.message.who;
		var a = this.counter / 4;
		var cx = [320,320,290,160];
		var cy = [170,170,140,300];
		var w = 300;
		if(who == 2) {
			w = 480;
		}
		var ox = cx[who] - Math.floor(w / 2);
		var tmp = cy[who];
		Math.floor(70.);
		var oy = tmp - 70;
		this.draw_taku();
		this.io.fukidasi(ox,oy,w,140,10,"#ffffff",a,who);
		if(a < 1) {
			return;
		}
		var str = ["","",""];
		var sn = 0;
		var c = 0;
		var _g1 = 0;
		var _g = this.message.txt.length;
		while(_g1 < _g) {
			var s = this.message.txt.charAt(_g1++);
			if(s == "、" && c == 0 && sn > 0) {
				str[sn - 1] = str[sn - 1] + s;
			} else {
				str[sn] = str[sn] + s;
				++c;
				if(c > 10) {
					c = 0;
					++sn;
				}
			}
			if(sn > 2) {
				break;
			}
		}
		var fs = 22;
		if(this.message.txt.length <= 5) {
			fs = 32;
		}
		var tx = 16;
		var tmp1 = who == 1 || who == 3;
		if(who == 2) {
			tx = 200;
		}
		var _g2 = 0;
		while(_g2 < 3) {
			var i = _g2++;
			this.io.draw_text(ox + tx,oy + 16 + i * 32,str[i],fs,"#000000",false,"left","top");
		}
		this.io.timer_func = null;
		this.io.click_func = $bind(this,this.end_hassei);
	}
	,end_hassei: function() {
		this.io.click_func = null;
		this.io.move_func = null;
		this.io.release_func = null;
		this.io.timer_func = null;
		this.io.next_func();
	}
	,start_setting: function() {
		this.setting.disp = false;
		this.counter = 0;
		this.io.click_func = null;
		this.io.timer_func = $bind(this,this.appear_setting);
	}
	,appear_setting: function() {
	}
	,draw_setting: function() {
	}
	,click_setting: function() {
		var mx = this.io.mouse.x - this.setting.dx;
		var my = this.io.mouse.y - this.setting.dy;
		if(mx < 0 || mx >= this.setting.dw || my < 0 || my >= this.setting.dh) {
			this.counter = 10;
			this.io.timer_func = $bind(this,this.disappear_setting);
			this.io.click_func = null;
			return;
		}
		var n = -1;
		var _g1 = 0;
		var _g = this.sbmax;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.sbtn[i].style != 2) {
				continue;
			}
			if(mx < this.sbtn[i].x || mx >= this.sbtn[i].x + this.sbtn[i].w) {
				continue;
			}
			if(my < this.sbtn[i].y || my >= this.sbtn[i].y + this.sbtn[i].h) {
				continue;
			}
			n = i;
		}
		if(n < 0) {
			return;
		}
		var g = this.sbtn[n].group;
		var _g11 = 0;
		var _g2 = this.sbmax;
		while(_g11 < _g2) {
			var i1 = _g11++;
			if(this.sbtn[i1].group != g) {
				continue;
			}
			this.sbtn[i1].active = false;
		}
		this.sbtn[n].active = true;
		this.draw_setting();
	}
	,disappear_setting: function() {
	}
	,get_gobi: function(who) {
		var t = "です";
		if(who == 1) {
			t = "やで";
		}
		return t;
	}
};
var Member = function() {
	this.ni = new NeraiInfo();
	this.sc6 = [];
	this.minoga = [];
	this.anpai = [];
	this.mie = [];
	this.sute = [];
	this.sutelist = [];
	this.reaction = new Action();
	this.ra = new Reactable();
	this.aa = new Actable();
	this.dd = [];
	this.dv = [];
	this.pv = [];
	this.s_ments = [];
	this.tepai = [];
	var _g = 0;
	while(_g < 7) this.s_ments[_g++] = new Ments();
	var _g1 = 0;
	while(_g1 < 4) this.dd[_g1++] = [];
};
Member.prototype = {
	init: function() {
		this.tepai = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var _g = 0;
		while(_g < 7) this.s_ments[_g++] = new Ments();
		this.pv = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.dv = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var _g1 = 0;
		while(_g1 < 4) this.dd[_g1++] = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.aa.init();
		this.ra.init();
		this.reaction.init();
		this.mota_c = 0;
		var _g2 = 0;
		while(_g2 < 30) this.sutelist[_g2++] = 0;
		var _g3 = 0;
		while(_g3 < 40) {
			var i = _g3++;
			this.sute[i] = 0;
			this.mie[i] = 0;
			this.anpai[i] = 0;
			this.minoga[i] = 0;
		}
		var _g4 = 0;
		while(_g4 < 4) this.sc6[_g4++] = 0;
		this.danger = 0;
		this.some = 0;
		this.not_some = 0;
		this.dorapon = 0;
		this.shosan = 0;
		this.daisan = 0;
		this.shosu = 0;
		this.daisu = 0;
		this.hen = 0;
		this.jimachi = 0;
		this.some_suit = 0;
		this.never_pai = 0;
		this.furo_f = 0;
		this.not_shojun = 0;
		this.reach_f = 0;
		this.reach_start = 0;
		this.reach_jun = 0;
		this.doubble_f = 0;
		this.ippatsu_f = 0;
		this.minogasi_f = 0;
		this.minogasi_r_f = 0;
		this.ni.init();
		this.want = 0;
		this.nerai = 0;
		this.care_mode = 0;
	}
};
var Ments = function() {
	this.dr = 0;
	this.fu = 0;
	this.at = 0;
	this.pai = 0;
	this.pai = 0;
	this.at = 0;
	this.fu = 0;
	this.dr = 0;
};
var NeraiInfo = function() {
	this.suit_mc = [];
	this.suit_pc = [];
};
NeraiInfo.prototype = {
	init: function() {
		this.toi_c = 0;
		this.anko_c = 0;
		this.shun_c = 0;
		this.ments_c = 0;
		this.ntoi_c = 0;
		this.jipai_tc = 0;
		this.yaku_tc = 0;
		var _g = 0;
		while(_g < 4) {
			var i = _g++;
			this.suit_pc[i] = 0;
			this.suit_mc[i] = 0;
		}
		this.main_suit = 0;
		this.sangen_c = 0;
		this.sufu_c = 0;
		this.yakudora_c = 0;
		this.dora_c = 0;
		this.dora_tc = 0;
		this.sdora_c = 0;
		this.jdora_c = 0;
		this.yao_pc = 0;
		this.yao_sc = 0;
		this.chanta_rc = 0;
		this.go_yaku = 0;
		this.go_toitoi = 0;
		this.go_chitoi = 0;
		this.go_some = 0;
		this.go_chanta = 0;
		this.go_tanyao = 0;
		this.go_sangen = 0;
		this.go_susi = 0;
		this.go_kokusi = 0;
	}
};
var PVMat = function() {
	this.mie = [];
	this.sute = [];
	this.dora = [];
	this.s_ments = [];
	this.tepai = [];
};
PVMat.prototype = {
	init: function() {
		this.tepai = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.dora = [0,0,0,0,0,0,0,0,0,0];
		this.sute = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.mie = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.s_ments = [];
		var _g = 0;
		while(_g < 7) this.s_ments[_g++] = new Ments();
		this.nerai = 0;
	}
};
var PVWork = function() {
	this.pv = [];
	this.at = [];
	this.fppl = [];
	this.tpp = [];
	this.ppp = [];
	this.kpp = [];
	this.rpp = [];
	this.tmap = [];
	this.pmap = [];
	this.kmap = [];
	this.maci = [];
	this.jant = [];
	this.dead = [];
	this.yakupai = [];
	this.puyao = [];
	this.rmap = [];
	this.amap = [];
	this.smap = [];
	this.nt = [];
	this.nobi = [];
	this.yaku = [];
	this.dmap = [];
	this.tt = [];
};
PVWork.prototype = {
	init: function() {
		this.tt = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.chitoi_c = 0;
		this.anko_c = 0;
		this.dmap = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.yaku = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.nobi = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.suit = 0;
		this.nt = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.smap = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.amap = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.rmap = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.puyao = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.yakupai = [0,0,0,0,0,0,0,0,0,0];
		this.dead = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.ments_c = 0;
		this.janto_c = 0;
		this.m4j1 = 0;
		this.jant = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.maci = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.kmap = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.pmap = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.tmap = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.ktoi_c = 0;
		this.rpp = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.kpp = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.ppp = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.tpp = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.fppl = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.at = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		this.pv = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
	}
};
var Reactable = function() {
	this.chih = [];
	this.chim = [];
	this.chil = [];
	this.kan = [];
	this.pon = [];
};
Reactable.prototype = {
	init: function() {
		var _g = 0;
		while(_g < 14) {
			var i = _g++;
			this.pon[i] = 0;
			this.kan[i] = 0;
			this.chil[i] = 0;
			this.chim[i] = 0;
			this.chih[i] = 0;
		}
		this.ron_ok = 0;
		this.yakunasi = 0;
		this.furiten = 0;
		this.minogasi = 0;
		this.minogasi_r = 0;
		this.pon_ok = 0;
		this.kan_ok = 0;
		this.chikei_c = 0;
		this.chil_ok = 0;
		this.chim_ok = 0;
		this.chih_ok = 0;
	}
};
var Std = function() { };
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var Suteten = function() {
	this.ti = [];
	this.suteten_f = 0;
	this.nt = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
	this.mie = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
	this.sute = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
	this.ymat = new Yakumat();
	this.dora = [0,0,0,0,0,0,0,0,0,0];
	this.s_ments = [];
	this.tepai = [0,0,0,0,0,0,0,0,0,0,0,0,0,0];
	var _g = 0;
	while(_g < 4) this.s_ments[_g++] = new Ments();
	var _g1 = 0;
	while(_g1 < 14) this.ti[_g1++] = new TenpaiSmall();
};
Suteten.prototype = {
	CheckSuteten: function() {
		var p;
		var tt = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var _g = 0;
		while(_g < 14) {
			p = this.tepai[_g++];
			if(p > 0 && p < 38) {
				tt[p]++;
			}
		}
		var chk = [1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1];
		var tenpai_pai = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var yaopai = [0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,0];
		var _g1 = 0;
		while(_g1 < 14) {
			var i = _g1++;
			p = this.tepai[i];
			if(chk[p] > 0) {
				continue;
			}
			chk[p] = 1;
			tt[p]--;
			var _g11 = 1;
			while(_g11 < 38) {
				var j = _g11++;
				if(j % 10 == 0) {
					continue;
				}
				tt[j]++;
				var hora_f = 0;
				var _g2 = 1;
				while(_g2 < 38) {
					var k = _g2++;
					if(tt[k] < 2) {
						continue;
					}
					tt[k] -= 2;
					var _g3 = 0;
					while(_g3 < 40) {
						var l = _g3++;
						this.nt[l] = tt[l];
					}
					if(this.ments_nuki() > 0) {
						hora_f = 1;
					}
					tt[k] += 2;
					if(hora_f > 0) {
						break;
					}
				}
				tt[j]--;
				if(hora_f > 0) {
					tenpai_pai[i] = 1;
					break;
				}
			}
			tt[p]++;
		}
		var toi_c = 0;
		var yao_c = 0;
		var _g4 = 1;
		while(_g4 < 38) {
			var i1 = _g4++;
			if(tt[i1] > 0) {
				if(tt[i1] >= 2) {
					++toi_c;
				}
				if(yaopai[i1] > 0) {
					++yao_c;
				}
			}
		}
		if(toi_c == 6) {
			var _g5 = 0;
			while(_g5 < 14) {
				var i2 = _g5++;
				p = this.tepai[i2];
				if(tt[p] == 1 || tt[p] == 3) {
					tenpai_pai[i2] = 1;
				}
			}
		}
		if(yao_c >= 12) {
			var _g6 = 0;
			while(_g6 < 14) tenpai_pai[_g6++] = 1;
		}
		var _g7 = 0;
		while(_g7 < 40) chk[_g7++] = 0;
		var _g8 = 0;
		while(_g8 < 14) {
			var i3 = _g8++;
			if(tenpai_pai[i3] == 0) {
				continue;
			}
			p = this.tepai[i3];
			if(chk[p] > 0) {
				continue;
			}
			chk[p] = 1;
			tt[p]--;
			var tp = new Tenpai();
			tp.tt = tt;
			tp.s_ments = this.s_ments;
			tp.dora = this.dora;
			tp.ymat = this.ymat;
			tp.sute = this.sute;
			tp.mie = this.mie;
			tp.CheckTenpai();
			this.ti[i3].tenpai_f = tp.ts.tenpai_f;
			this.ti[i3].kakutei_f = tp.ts.kakutei_f;
			this.ti[i3].yakuari_f = tp.ts.yakuari_f;
			this.ti[i3].furiten_f = tp.ts.furiten_f;
			this.ti[i3].hikkake_f = tp.ts.hikkake_f;
			this.ti[i3].hilow_f = tp.ts.hilow_f;
			this.ti[i3].machi_c = tp.ts.machi_c;
			this.ti[i3].rest_c = tp.ts.rest_c;
			this.ti[i3].ten_max = tp.ts.ten_max;
			this.ti[i3].ten_min = tp.ts.ten_min;
			this.ti[i3].han_max = tp.ts.han_max;
			this.ti[i3].han_min = tp.ts.han_min;
			this.ti[i3].mangan_v = tp.ts.mangan_v;
			this.ti[i3].yaku_type = tp.ts.yaku_type;
			this.ti[i3].machi_k = tp.ts.machi_k;
			if(this.ti[i3].tenpai_f > 0) {
				this.suteten_f = 1;
			}
			tt[p]++;
		}
	}
	,ments_nuki: function() {
		var _g = 1;
		while(_g < 38) {
			var j = _g++;
			if(this.nt[j] >= 3) {
				this.nt[j] -= 3;
			}
			if(this.nt[j] == 0) {
				continue;
			}
			if(j >= 31) {
				return 0;
			}
			if(j % 10 > 7) {
				return 0;
			}
			if(this.nt[j + 1] == 0) {
				return 0;
			}
			if(this.nt[j + 2] == 0) {
				return 0;
			}
			this.nt[j]--;
			this.nt[j + 1]--;
			this.nt[j + 2]--;
			if(this.nt[j] == 0) {
				continue;
			}
			if(this.nt[j + 1] == 0) {
				return 0;
			}
			if(this.nt[j + 2] == 0) {
				return 0;
			}
			this.nt[j]--;
			this.nt[j + 1]--;
			this.nt[j + 2]--;
		}
		return 1;
	}
};
var Taikyoku = function() {
	this.chara = [];
	this.tepai_open = 0;
	this.his = [];
	this.rensho = 0;
	this.hanchan_c = 0;
};
Taikyoku.prototype = {
	init: function() {
		this.hanchan_c = 0;
		this.rensho = 0;
		var _g = 0;
		while(_g < 4) this.chara[_g++] = { seko : 0, game : 0, reach : 0, dama : 0};
		this.chara[1].game = 1;
		this.chara[1].reach = 1;
		this.chara[2].seko = 1;
		this.chara[2].dama = 1;
	}
};
var Tenpai = function() {
	this.ts = new TenpaiSmall();
	this.hs = [];
	this.nt = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
	this.yaopai = [0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,0];
	this.mie = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
	this.sute = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
	this.ymat = new Yakumat();
	this.dora = [0,0,0,0,0,0,0,0,0,0];
	this.s_ments = [];
	this.tt = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
	var _g = 0;
	while(_g < 4) this.s_ments[_g++] = new Ments();
	var _g1 = 0;
	while(_g1 < 13) this.hs[_g1++] = new HoraSmall();
};
Tenpai.prototype = {
	CheckTenpai: function() {
		var mk = 0;
		var mk_r = 0;
		var mk_s = 0;
		var mk_t = 0;
		var yao_c = 0;
		var toi_c = 0;
		this.ts.ten_min = 9999999;
		var at = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
		var _g = 1;
		while(_g < 38) {
			var i = _g++;
			if(i % 10 == 0) {
				continue;
			}
			if(this.tt[i] > 0) {
				at[i] = 1;
				if(this.yaopai[i] > 0) {
					++yao_c;
				}
				if(this.tt[i] == 2) {
					++toi_c;
				}
			}
			if(i < 30) {
				if(this.tt[i - 1] > 0) {
					at[i] = 1;
				}
				if(this.tt[i + 1] > 0) {
					at[i] = 1;
				}
			}
		}
		var normal_tenpai = 0;
		var _g1 = 1;
		while(_g1 < 38) {
			var i1 = _g1++;
			if(at[i1] == 0) {
				continue;
			}
			if(this.tt[i1] >= 4) {
				continue;
			}
			this.tt[i1]++;
			var hora_f = 0;
			var _g11 = 1;
			while(_g11 < 38) {
				var j = _g11++;
				if(this.tt[j] < 2) {
					continue;
				}
				this.tt[j] -= 2;
				var _g2 = 0;
				while(_g2 < 40) {
					var k = _g2++;
					this.nt[k] = this.tt[k];
				}
				if(this.ments_nuki() > 0) {
					hora_f = 1;
				}
				this.tt[j] += 2;
				if(hora_f > 0) {
					break;
				}
			}
			if(hora_f > 0) {
				normal_tenpai = 1;
			} else {
				at[i1] = 0;
			}
			this.tt[i1]--;
		}
		if(normal_tenpai == 0 && toi_c == 6) {
			var _g3 = 1;
			while(_g3 < 38) {
				var i2 = _g3++;
				if(this.tt[i2] == 1) {
					at[i2] = 1;
				}
			}
		}
		if(yao_c >= 12) {
			var _g4 = 1;
			while(_g4 < 38) {
				var i3 = _g4++;
				at[i3] = this.yaopai[i3];
			}
		}
		var c = 0;
		var _g5 = 1;
		while(_g5 < 38) {
			var i4 = _g5++;
			if(at[i4] == 0) {
				continue;
			}
			if(this.tt[i4] >= 4) {
				continue;
			}
			this.tt[i4]++;
			var hi = new Horainfo();
			hi.tt = this.tt;
			hi.a_pai = i4;
			hi.s_ments = this.s_ments;
			hi.dora = this.dora;
			hi.ymat = this.ymat;
			hi.CheckHora();
			this.tt[i4]--;
			if(hi.hora.hora_f > 0) {
				this.hs[c].hora_f = 1;
				this.hs[c].a_pai = i4;
				this.hs[c].han_c = hi.hora.han_c;
				this.hs[c].mangan_v = hi.hora.mangan_v;
				this.hs[c].ten_ron = hi.hora.ten_hora;
				this.hs[c].yakuari_f = hi.hora.yakuari_f;
				this.ts.tenpai_f = 1;
				if(this.hs[c].yakuari_f > 0) {
					this.ts.yakuari_f = 1;
				}
				if(this.sute[i4] > 0) {
					this.ts.furiten_f = 1;
				}
				this.ts.rest_c += 4 - this.mie[i4];
				if(this.hs[c].ten_ron >= this.ts.ten_max) {
					this.ts.ten_max = this.hs[c].ten_ron;
					this.ts.han_max = this.hs[c].han_c;
				}
				if(this.hs[c].ten_ron <= this.ts.ten_min) {
					this.ts.ten_min = this.hs[c].ten_ron;
					this.ts.han_min = this.hs[c].han_c;
				}
				if(this.ts.ten_max != this.ts.ten_min) {
					this.ts.hilow_f = 1;
				}
				if(i4 < 30) {
					var n = i4 % 10;
					if(n <= 3) {
						if(this.sute[i4 + 3] > 0) {
							this.ts.hikkake_f = 1;
						}
					}
					if(n >= 7) {
						if(this.sute[i4 - 3] > 0) {
							this.ts.hikkake_f = 1;
						}
					}
					if(n >= 4 && n <= 6) {
						if(this.sute[i4 - 3] > 0 && this.sute[i4 + 3] > 0) {
							this.ts.hikkake_f = 1;
						}
					}
				}
				if(hi.hora.kanchan_f > 0) {
					mk = 3;
				}
				if(hi.hora.penchan_f > 0) {
					mk = 2;
				}
				if(hi.hora.tanki_f > 0) {
					mk = 1;
				}
				if(hi.hora.shanpon_f > 0) {
					mk = 4;
				}
				if(hi.hora.ryanmen_f > 0) {
					mk = 5;
				}
				if(mk == 5) {
					++mk_r;
				}
				if(mk == 4) {
					++mk_s;
				}
				if(mk == 1) {
					++mk_t;
				}
				++c;
			}
			if(c >= 13) {
				break;
			}
		}
		this.ts.kakutei_f = 1;
		var _g12 = 0;
		var _g6 = c;
		while(_g12 < _g6) if(this.hs[_g12++].yakuari_f == 0) {
			this.ts.kakutei_f = 0;
		}
		this.ts.machi_c = c;
		this.ts.machi_k = 12;
		if(c == 1) {
			this.ts.machi_k = mk;
		}
		if(c == 2) {
			this.ts.machi_k = 6;
			if(mk_r > 0) {
				this.ts.machi_k = 5;
			}
			if(mk_t == 2) {
				this.ts.machi_k = 7;
			}
			if(mk_s == 2) {
				this.ts.machi_k = 4;
			}
		}
		if(c == 3) {
			this.ts.machi_k = 9;
			if(mk_r == 3) {
				this.ts.machi_k = 8;
			}
			if(mk_t == 3) {
				this.ts.machi_k = 7;
			}
		}
		if(c == 4) {
			this.ts.machi_k = 10;
		}
		if(c == 5) {
			this.ts.machi_k = 11;
		}
		if(this.ts.hilow_f > 0) {
			var _g7 = 0;
			while(_g7 < 13) {
				var i5 = _g7++;
				if(this.hs[i5].hora_f == 0) {
					continue;
				}
				if(this.hs[i5].ten_ron == this.ts.ten_max) {
					this.hs[i5].high = 1;
				}
				if(this.hs[i5].ten_ron == this.ts.ten_min) {
					this.hs[i5].low = 1;
				}
			}
		}
	}
	,ments_nuki: function() {
		var _g = 1;
		while(_g < 38) {
			var j = _g++;
			if(this.nt[j] >= 3) {
				this.nt[j] -= 3;
			}
			if(this.nt[j] == 0) {
				continue;
			}
			if(j >= 31) {
				return 0;
			}
			if(j % 10 > 7) {
				return 0;
			}
			if(this.nt[j + 1] == 0) {
				return 0;
			}
			if(this.nt[j + 2] == 0) {
				return 0;
			}
			this.nt[j]--;
			this.nt[j + 1]--;
			this.nt[j + 2]--;
			if(this.nt[j] == 0) {
				continue;
			}
			if(this.nt[j + 1] == 0) {
				return 0;
			}
			if(this.nt[j + 2] == 0) {
				return 0;
			}
			this.nt[j]--;
			this.nt[j + 1]--;
			this.nt[j + 2]--;
		}
		return 1;
	}
};
var TenpaiSmall = function() {
	this.machi_k = 0;
	this.yaku_type = 0;
	this.mangan_v = 0;
	this.han_min = 0;
	this.ten_min = 0;
	this.han_max = 0;
	this.ten_max = 0;
	this.rest_c = 0;
	this.machi_c = 0;
	this.hilow_f = 0;
	this.hikkake_f = 0;
	this.furiten_f = 0;
	this.yakuari_f = 0;
	this.kakutei_f = 0;
	this.tenpai_f = 0;
	this.tenpai_f = 0;
	this.kakutei_f = 0;
	this.yakuari_f = 0;
	this.furiten_f = 0;
	this.hikkake_f = 0;
	this.hilow_f = 0;
	this.machi_c = 0;
	this.rest_c = 0;
	this.ten_max = 0;
	this.han_max = 0;
	this.ten_min = 0;
	this.han_min = 0;
	this.mangan_v = 0;
	this.yaku_type = 0;
	this.machi_k = 0;
};
var Yakumat = function() {
	this.jikaze = 0;
	this.bakaze = 0;
	this.chankan_f = 0;
	this.haitei_f = 0;
	this.rinshan_f = 0;
	this.shojun_f = 0;
	this.ippatsu_f = 0;
	this.double_f = 0;
	this.reach_f = 0;
	this.furo_f = 0;
	this.tumo_f = 0;
	this.tumo_f = 0;
	this.furo_f = 0;
	this.reach_f = 0;
	this.double_f = 0;
	this.ippatsu_f = 0;
	this.shojun_f = 0;
	this.rinshan_f = 0;
	this.haitei_f = 0;
	this.chankan_f = 0;
	this.bakaze = 0;
	this.jikaze = 0;
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
var uuchan = Main.main();
var zNode2 =null;
var zNode=null;
var py_array =[];
setTimeout(() => {
	doitnow();
}, 3500);
//})();



function add_button(appendParent, addEventFunction) {
	zNode = document.createElement ("div");
	zNode.innerHTML = '<button id="myButton" type="button">click me!</button>';
	zNode.setAttribute ("id", "myContainer");
	appendParent.appendChild(zNode);
	document.getElementById("myButton").addEventListener("click", addEventFunction, false);
}
function event2(){
	console.log("event2");
	console.log(uuchan.pais.slice(0,14));
	createPyCode();
	//window.open("https://pystyle.info/apps/mahjong-nanikiru-simulator/",'_blank',);
	makeMessage(py_array);
}



function makeMessage(mes){
	var my_message =mes;
	var popup = window.open(
	"https://pystyle.info/apps/mahjong-nanikiru-simulator/",
	'_blank'
	);
	setTimeout(() => {
		popup.postMessage(my_message,'*');
	}, 1500);
	//popup.onload = () => popup.postMessage(my_message,'*');
}
function createPyCode(){
	var codeStr="";
	console.log(uuchan.pais.slice(0,14));
	py_array=[];
	for (let index = 0; index < 14; index++) {
		var num = uuchan.pais[index].pai -20;
		console.log(index,num);
		codeStr += String(num);
		py_array.push(num);
	}
	codeStr+="s";

	let element = document.getElementById('myTextA');
	element.value = codeStr;
	element.select();
	document.execCommand("copy");

}
function doitnow(){

	zNode2 = document.createElement ("div");
	zNode2.innerHTML ='<input type="text" id="myTextA">';// '<textarea id="myTextA">click me!</textarea>';
	//zNode2.setAttribute ("id", "myContainer");
	document.body.appendChild(zNode2);

	add_button(document.body, event2);
	let element = document.getElementById('myTextA');
	element.value = 'Hello';

	document.ondblclick = function(evt) {
		
		if (window.getSelection)
			window.getSelection().removeAllRanges();
		else if (document.selection)
			document.selection.empty();
	}

};

function child_call(){
	console.log("im parent");
}
